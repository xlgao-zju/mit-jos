cscope 15 $HOME/6.828/lab -q 0000001254 0000163147
	@boot/main.c

1 
	~<öc/x86.h
>

2 
	~<öc/ñf.h
>

32 
	#SECTSIZE
 512

	)

33 
	#ELFHDR
 ((
Elf
 *) 0x10000)

34 

	)

35 
ªad£˘
(*, 
uöt32_t
);

36 
ªad£g
(
uöt32_t
, uint32_t, uint32_t);

39 
	$boŸmaö
()

41 
Proghdr
 *
ph
, *
ïh
;

44 
	`ªad£g
((
uöt32_t
Ë
ELFHDR
, 
SECTSIZE
*8, 0);

47 i‡(
ELFHDR
->
e_magic
 !
ELF_MAGIC
)

48 
bad
;

51 
ph
 = (
Proghdr
 *Ë((
uöt8_t
 *Ë
ELFHDR
 + ELFHDR->
e_phoff
);

52 
ïh
 = 
ph
 + 
ELFHDR
->
e_phnum
;

53 ; 
ph
 < 
ïh
;Öh++)

56 
	`ªad£g
(
ph
->
p_∑
,Öh->
p_memsz
,Öh->
p_off£t
);

60 (((*)()Ë(
ELFHDR
->
e_íåy
))();

62 
bad
:

63 
	`outw
(0x8A00, 0x8A00);

64 
	`outw
(0x8A00, 0x8E00);

67 
	}
}

72 
	$ªad£g
(
uöt32_t
 
∑
, uöt32_à
cou¡
, uöt32_à
off£t
)

74 
uöt32_t
 
íd_∑
;

76 
íd_∑
 = 
∑
 + 
cou¡
;

79 
∑
 &~(
SECTSIZE
 - 1);

82 
off£t
 = (off£à/ 
SECTSIZE
) + 1;

87 
∑
 < 
íd_∑
) {

92 
	`ªad£˘
((
uöt8_t
*Ë
∑
, 
off£t
);

93 
∑
 +
SECTSIZE
;

94 
off£t
++;

96 
	}
}

99 
	$waôdisk
()

102 (
	`öb
(0x1F7) & 0xC0) != 0x40)

104 
	}
}

107 
	$ªad£˘
(*
d°
, 
uöt32_t
 
off£t
)

110 
	`waôdisk
();

112 
	`outb
(0x1F2, 1);

113 
	`outb
(0x1F3, 
off£t
);

114 
	`outb
(0x1F4, 
off£t
 >> 8);

115 
	`outb
(0x1F5, 
off£t
 >> 16);

116 
	`outb
(0x1F6, (
off£t
 >> 24) | 0xE0);

117 
	`outb
(0x1F7, 0x20);

120 
	`waôdisk
();

123 
	`ö¶
(0x1F0, 
d°
, 
SECTSIZE
/4);

124 
	}
}

	@inc/assert.h

3 #i‚de‡
JOS_INC_ASSERT_H


4 
	#JOS_INC_ASSERT_H


	)

6 
	~<öc/°dio.h
>

8 
_w¨n
(const *, , const *, ...);

9 
	$_∑nic
(c⁄° *, , c⁄° *, ...Ë
	`__©åibuã__
((
n‹ëu∫
));

11 
	#w¨n
(...Ë
	`_w¨n
(
__FILE__
, 
__LINE__
, 
__VA_ARGS__
)

	)

12 
	#∑nic
(...Ë
	`_∑nic
(
__FILE__
, 
__LINE__
, 
__VA_ARGS__
)

	)

14 
	#as£π
(
x
) \

15 dÿ{ i‡(!(
x
)Ë
	`∑nic
("as£πi⁄ faûed: %s", #x); 
	}
} 0)

	)

18 
	#°©ic_as£π
(
x
ËxË0: (x):

	)

	@inc/elf.h

1 #i‚de‡
JOS_INC_ELF_H


2 
	#JOS_INC_ELF_H


	)

4 
	#ELF_MAGIC
 0x464C457FU

	)

6 
	sElf
 {

7 
uöt32_t
 
	me_magic
;

8 
uöt8_t
 
	me_ñf
[12];

9 
uöt16_t
 
	me_ty≥
;

10 
uöt16_t
 
	me_machöe
;

11 
uöt32_t
 
	me_vîsi⁄
;

12 
uöt32_t
 
	me_íåy
;

13 
uöt32_t
 
	me_phoff
;

14 
uöt32_t
 
	me_shoff
;

15 
uöt32_t
 
	me_Êags
;

16 
uöt16_t
 
	me_ehsize
;

17 
uöt16_t
 
	me_phítsize
;

18 
uöt16_t
 
	me_phnum
;

19 
uöt16_t
 
	me_shítsize
;

20 
uöt16_t
 
	me_shnum
;

21 
uöt16_t
 
	me_sh°∫dx
;

24 
	sProghdr
 {

25 
uöt32_t
 
	mp_ty≥
;

26 
uöt32_t
 
	mp_off£t
;

27 
uöt32_t
 
	mp_va
;

28 
uöt32_t
 
	mp_∑
;

29 
uöt32_t
 
	mp_fûesz
;

30 
uöt32_t
 
	mp_memsz
;

31 
uöt32_t
 
	mp_Êags
;

32 
uöt32_t
 
	mp_Æign
;

35 
	sSe˘hdr
 {

36 
uöt32_t
 
	msh_«me
;

37 
uöt32_t
 
	msh_ty≥
;

38 
uöt32_t
 
	msh_Êags
;

39 
uöt32_t
 
	msh_addr
;

40 
uöt32_t
 
	msh_off£t
;

41 
uöt32_t
 
	msh_size
;

42 
uöt32_t
 
	msh_lök
;

43 
uöt32_t
 
	msh_öfo
;

44 
uöt32_t
 
	msh_addølign
;

45 
uöt32_t
 
	msh_ítsize
;

49 
	#ELF_PROG_LOAD
 1

	)

52 
	#ELF_PROG_FLAG_EXEC
 1

	)

53 
	#ELF_PROG_FLAG_WRITE
 2

	)

54 
	#ELF_PROG_FLAG_READ
 4

	)

57 
	#ELF_SHT_NULL
 0

	)

58 
	#ELF_SHT_PROGBITS
 1

	)

59 
	#ELF_SHT_SYMTAB
 2

	)

60 
	#ELF_SHT_STRTAB
 3

	)

63 
	#ELF_SHN_UNDEF
 0

	)

	@inc/env.h

3 #i‚de‡
JOS_INC_ENV_H


4 
	#JOS_INC_ENV_H


	)

6 
	~<öc/ty≥s.h
>

7 
	~<öc/å≠.h
>

8 
	~<öc/memœyout.h
>

10 
öt32_t
 
	tívid_t
;

28 
	#LOG2NENV
 10

	)

29 
	#NENV
 (1 << 
LOG2NENV
)

	)

30 
	#ENVX
(
ívid
Ë(”nvidË& (
NENV
 - 1))

	)

34 
	mENV_FREE
 = 0,

35 
	mENV_DYING
,

36 
	mENV_RUNNABLE
,

37 
	mENV_RUNNING
,

38 
	mENV_NOT_RUNNABLE


42 
	eEnvTy≥
 {

43 
	mENV_TYPE_USER
 = 0,

46 
	sEnv
 {

47 
Tøp‰ame
 
	mív_tf
;

48 
Env
 *
	mív_lök
;

49 
ívid_t
 
	mív_id
;

50 
ívid_t
 
	mív_∑ª¡_id
;

51 
EnvTy≥
 
	mív_ty≥
;

52 
	mív_°©us
;

53 
uöt32_t
 
	mív_runs
;

54 
	mív_˝unum
;

57 
pde_t
 *
	mív_pgdú
;

60 *
	mív_pgÁu…_upˇŒ
;

63 
boﬁ
 
	mív_ùc_ªcvög
;

64 *
	mív_ùc_d°va
;

65 
uöt32_t
 
	mív_ùc_vÆue
;

66 
ívid_t
 
	mív_ùc_‰om
;

67 
	mív_ùc_≥rm
;

	@inc/error.h

3 #i‚de‡
JOS_INC_ERROR_H


4 
	#JOS_INC_ERROR_H


	)

8 
	mE_UNSPECIFIED
 = 1,

9 
	mE_BAD_ENV
 = 2,

11 
	mE_INVAL
 = 3,

12 
	mE_NO_MEM
 = 4,

13 
	mE_NO_FREE_ENV
 = 5,

15 
	mE_FAULT
 = 6,

17 
	mE_IPC_NOT_RECV
 = 7,

18 
	mE_EOF
 = 8,

20 
	mMAXERROR


	@inc/kbdreg.h

1 #i‚de‡
JOS_KBDREG_H


2 
	#JOS_KBDREG_H


	)

5 
	#KEY_HOME
 0xE0

	)

6 
	#KEY_END
 0xE1

	)

7 
	#KEY_UP
 0xE2

	)

8 
	#KEY_DN
 0xE3

	)

9 
	#KEY_LF
 0xE4

	)

10 
	#KEY_RT
 0xE5

	)

11 
	#KEY_PGUP
 0xE6

	)

12 
	#KEY_PGDN
 0xE7

	)

13 
	#KEY_INS
 0xE8

	)

14 
	#KEY_DEL
 0xE9

	)

19 
	#KBSTATP
 0x64

	)

20 
	#KBS_DIB
 0x01

	)

21 
	#KBS_IBF
 0x02

	)

22 
	#KBS_WARM
 0x04

	)

23 
	#KBS_OCMD
 0x08

	)

24 
	#KBS_NOSEC
 0x10

	)

25 
	#KBS_TERR
 0x20

	)

26 
	#KBS_RERR
 0x40

	)

27 
	#KBS_PERR
 0x80

	)

29 
	#KBCMDP
 0x64

	)

30 
	#KBC_RAMREAD
 0x20

	)

31 
	#KBC_RAMWRITE
 0x60

	)

32 
	#KBC_AUXDISABLE
 0xa7

	)

33 
	#KBC_AUXENABLE
 0xa8

	)

34 
	#KBC_AUXTEST
 0xa9

	)

35 
	#KBC_KBDECHO
 0xd2

	)

36 
	#KBC_AUXECHO
 0xd3

	)

37 
	#KBC_AUXWRITE
 0xd4

	)

38 
	#KBC_SELFTEST
 0xØ

	)

39 
	#KBC_KBDTEST
 0xab

	)

40 
	#KBC_KBDDISABLE
 0xad

	)

41 
	#KBC_KBDENABLE
 0x´

	)

42 
	#KBC_PULSE0
 0x„

	)

43 
	#KBC_PULSE1
 0xfd

	)

44 
	#KBC_PULSE2
 0xfb

	)

45 
	#KBC_PULSE3
 0xf7

	)

47 
	#KBDATAP
 0x60

	)

48 
	#KBOUTP
 0x60

	)

50 
	#K_RDCMDBYTE
 0x20

	)

51 
	#K_LDCMDBYTE
 0x60

	)

53 
	#KC8_TRANS
 0x40

	)

54 
	#KC8_MDISABLE
 0x20

	)

55 
	#KC8_KDISABLE
 0x10

	)

56 
	#KC8_IGNSEC
 0x08

	)

57 
	#KC8_CPU
 0x04

	)

58 
	#KC8_MENABLE
 0x02

	)

59 
	#KC8_KENABLE
 0x01

	)

60 
	#CMDBYTE
 (
KC8_TRANS
|
KC8_CPU
|
KC8_MENABLE
|
KC8_KENABLE
)

	)

63 
	#KBC_RESET
 0xFF

	)

64 
	#KBC_RESEND
 0xFE

	)

65 
	#KBC_SETDEFAULT
 0xF6

	)

66 
	#KBC_DISABLE
 0xF5

	)

67 
	#KBC_ENABLE
 0xF4

	)

68 
	#KBC_TYPEMATIC
 0xF3

	)

69 
	#KBC_SETTABLE
 0xF0

	)

70 
	#KBC_MODEIND
 0xED

	)

71 
	#KBC_ECHO
 0xEE

	)

74 
	#KBR_EXTENDED
 0xE0

	)

75 
	#KBR_RESEND
 0xFE

	)

76 
	#KBR_ACK
 0xFA

	)

77 
	#KBR_OVERRUN
 0x00

	)

78 
	#KBR_FAILURE
 0xFD

	)

79 
	#KBR_BREAK
 0xF0

	)

80 
	#KBR_RSTDONE
 0xAA

	)

81 
	#KBR_ECHO
 0xEE

	)

	@inc/lib.h

7 #i‚de‡
JOS_INC_LIB_H


8 
	#JOS_INC_LIB_H
 1

	)

10 
	~<öc/ty≥s.h
>

11 
	~<öc/°dio.h
>

12 
	~<öc/°d¨g.h
>

13 
	~<öc/°rög.h
>

14 
	~<öc/îr‹.h
>

15 
	~<öc/as£π.h
>

16 
	~<öc/ív.h
>

17 
	~<öc/memœyout.h
>

18 
	~<öc/sysˇŒ.h
>

19 
	~<öc/å≠.h
>

21 
	#USED
(
x
Ë()(x)

	)

24 
umaö
(
¨gc
, **
¨gv
);

27 c⁄° *
bö¨y«me
;

28 c⁄° vﬁ©ûê
Env
 *
thi£nv
;

29 c⁄° vﬁ©ûê
Env
 
ívs
[
NENV
];

30 c⁄° vﬁ©ûê
PageInfo
 
∑ges
[];

33 
exô
();

36 
£t_pgÁu…_h™dÀr
((*
h™dÀr
)(
UTøp‰ame
 *
utf
));

39 * 
	`ªadlöe
(c⁄° *
buf
);

42 
	`sys_˝uts
(c⁄° *
°rög
, 
size_t
 
Àn
);

43 
	`sys_cgëc
();

44 
ívid_t
 
	`sys_gëívid
();

45 
	`sys_ív_de°roy
(
ívid_t
);

46 
	`sys_yõld
();

47 
ívid_t
 
	`sys_exof‹k
();

48 
	`sys_ív_£t_°©us
(
ívid_t
 
ív
, 
°©us
);

49 
	`sys_ív_£t_pgÁu…_upˇŒ
(
ívid_t
 
ív
, *
upˇŒ
);

50 
	`sys_∑ge_Æloc
(
ívid_t
 
ív
, *
pg
, 
≥rm
);

51 
	`sys_∑ge_m≠
(
ívid_t
 
§c_ív
, *
§c_pg
,

52 
ívid_t
 
d°_ív
, *
d°_pg
, 
≥rm
);

53 
	`sys_∑ge_unm≠
(
ívid_t
 
ív
, *
pg
);

54 
	`sys_ùc_åy_£nd
(
ívid_t
 
to_ív
, 
uöt32_t
 
vÆue
, *
pg
, 
≥rm
);

55 
	`sys_ùc_ªcv
(*
rcv_pg
);

58 
__ölöe
 
ívid_t
 
	`__©åibuã__
((
Æways_ölöe
))

59 
	$sys_exof‹k
()

61 
ívid_t
 
ªt
;

62 
__asm
 
	`__vﬁ©ûe
("int %2"

63 : "˜" (
ªt
)

64 : "a" (
SYS_exof‹k
),

65 "i" (
T_SYSCALL
)

67  
ªt
;

68 
	}
}

71 
ùc_£nd
(
ívid_t
 
to_ív
, 
uöt32_t
 
vÆue
, *
pg
, 
≥rm
);

72 
öt32_t
 
ùc_ªcv
(
ívid_t
 *
‰om_ív_°‹e
, *
pg
, *
≥rm_°‹e
);

73 
ívid_t
 
ùc_föd_ív
(
EnvTy≥
 
ty≥
);

76 
	#PTE_SHARE
 0x400

	)

77 
ívid_t
 
f‹k
();

78 
ívid_t
 
sf‹k
();

83 
	#O_RDONLY
 0x0000

	)

84 
	#O_WRONLY
 0x0001

	)

85 
	#O_RDWR
 0x0002

	)

86 
	#O_ACCMODE
 0x0003

	)

88 
	#O_CREAT
 0x0100

	)

89 
	#O_TRUNC
 0x0200

	)

90 
	#O_EXCL
 0x0400

	)

91 
	#O_MKDIR
 0x0800

	)

	@inc/memlayout.h

1 #i‚de‡
JOS_INC_MEMLAYOUT_H


2 
	#JOS_INC_MEMLAYOUT_H


	)

4 #i‚de‡
__ASSEMBLER__


5 
	~<öc/ty≥s.h
>

6 
	~<öc/mmu.h
>

15 
	#GD_KT
 0x08

16 
	#GD_KD
 0x10

17 
	#GD_UT
 0x18

18 
	#GD_UD
 0x20

19 
	#GD_TSS0
 0x28

20 

	)

87 
	#KERNBASE
 0xF0000000

	)

92 
	#IOPHYSMEM
 0x0A0000

	)

93 
	#EXTPHYSMEM
 0x100000

	)

96 
	#KSTACKTOP
 
KERNBASE


	)

97 
	#KSTKSIZE
 (8*
PGSIZE
)

98 
	#KSTKGAP
 (8*
PGSIZE
)

99 

	)

101 
	#MMIOLIM
 (
KSTACKTOP
 - 
PTSIZE
)

	)

102 
	#MMIOBASE
 (
MMIOLIM
 - 
PTSIZE
)

	)

104 
	#ULIM
 (
MMIOBASE
)

	)

112 
	#UVPT
 (
ULIM
 - 
PTSIZE
)

	)

114 
	#UPAGES
 (
UVPT
 - 
PTSIZE
)

	)

116 
	#UENVS
 (
UPAGES
 - 
PTSIZE
)

	)

123 
	#UTOP
 
UENVS


	)

125 
	#UXSTACKTOP
 
UTOP


	)

128 
	#USTACKTOP
 (
UTOP
 - 2*
PGSIZE
)

	)

131 
	#UTEXT
 (2*
PTSIZE
)

	)

134 
	#UTEMP
 ((*Ë
PTSIZE
)

	)

137 
	#PFTEMP
 (
UTEMP
 + 
PTSIZE
 - 
PGSIZE
)

	)

139 
	#USTABDATA
 (
PTSIZE
 / 2)

	)

142 
	#MPENTRY_PADDR
 0x7000

	)

144 #i‚de‡
__ASSEMBLER__


146 
uöt32_t
 
	t±e_t
;

147 
uöt32_t
 
	tpde_t
;

149 #i‡
JOS_USER


164 vﬁ©ûê
±e_t
 
uv±
[];

165 vﬁ©ûê
pde_t
 
uvpd
[];

178 
	sPageInfo
 {

180 
PageInfo
 *
	mµ_lök
;

187 
uöt16_t
 
	mµ_ªf
;

	@inc/mmu.h

1 #i‚de‡
JOS_INC_MMU_H


2 
	#JOS_INC_MMU_H


	)

30 
	#PGNUM
(
œ
Ë(((
uöçå_t
Ë÷a)Ë>> 
PTXSHIFT
)

	)

33 
	#PDX
(
œ
Ë((((
uöçå_t
Ë÷a)Ë>> 
PDXSHIFT
Ë& 0x3FF)

	)

36 
	#PTX
(
œ
Ë((((
uöçå_t
Ë÷a)Ë>> 
PTXSHIFT
Ë& 0x3FF)

	)

39 
	#PGOFF
(
œ
Ë(((
uöçå_t
Ë÷a)Ë& 0xFFF)

	)

42 
	#PGADDR
(
d
, 
t
, 
o
Ë((*Ë((dË<< 
PDXSHIFT
 | (tË<< 
PTXSHIFT
 | (o)))

	)

45 
	#NPDENTRIES
 1024

46 
	#NPTENTRIES
 1024

47 

	)

48 
	#PGSIZE
 4096

49 
	#PGSHIFT
 12

50 

	)

51 
	#PTSIZE
 (
PGSIZE
*
NPTENTRIES
)

52 
	#PTSHIFT
 22

53 

	)

54 
	#PTXSHIFT
 12

55 
	#PDXSHIFT
 22

56 

	)

58 
	#PTE_P
 0x001

59 
	#PTE_W
 0x002

60 
	#PTE_U
 0x004

61 
	#PTE_PWT
 0x008

62 
	#PTE_PCD
 0x010

63 
	#PTE_A
 0x020

64 
	#PTE_D
 0x040

65 
	#PTE_PS
 0x080

66 
	#PTE_G
 0x100

67 

	)

70 
	#PTE_AVAIL
 0xE00

71 

	)

73 
	#PTE_SYSCALL
 (
PTE_AVAIL
 | 
PTE_P
 | 
PTE_W
 | 
PTE_U
)

	)

76 
	#PTE_ADDR
(
±e
Ë((
phyßddr_t
Ë’ãË& ~0xFFF)

	)

79 
	#CR0_PE
 0x00000001

80 
	#CR0_MP
 0x00000002

81 
	#CR0_EM
 0x00000004

82 
	#CR0_TS
 0x00000008

83 
	#CR0_ET
 0x00000010

84 
	#CR0_NE
 0x00000020

85 
	#CR0_WP
 0x00010000

86 
	#CR0_AM
 0x00040000

87 
	#CR0_NW
 0x20000000

88 
	#CR0_CD
 0x40000000

89 
	#CR0_PG
 0x80000000

90 

	)

91 
	#CR4_PCE
 0x00000100

92 
	#CR4_MCE
 0x00000040

93 
	#CR4_PSE
 0x00000010

94 
	#CR4_DE
 0x00000008

95 
	#CR4_TSD
 0x00000004

96 
	#CR4_PVI
 0x00000002

97 
	#CR4_VME
 0x00000001

98 

	)

100 
	#FL_CF
 0x00000001

101 
	#FL_PF
 0x00000004

102 
	#FL_AF
 0x00000010

103 
	#FL_ZF
 0x00000040

104 
	#FL_SF
 0x00000080

105 
	#FL_TF
 0x00000100

106 
	#FL_IF
 0x00000200

107 
	#FL_DF
 0x00000400

108 
	#FL_OF
 0x00000800

109 
	#FL_IOPL_MASK
 0x00003000

110 
	#FL_IOPL_0
 0x00000000

111 
	#FL_IOPL_1
 0x00001000

112 
	#FL_IOPL_2
 0x00002000

113 
	#FL_IOPL_3
 0x00003000

114 
	#FL_NT
 0x00004000

115 
	#FL_RF
 0x00010000

116 
	#FL_VM
 0x00020000

117 
	#FL_AC
 0x00040000

118 
	#FL_VIF
 0x00080000

119 
	#FL_VIP
 0x00100000

120 
	#FL_ID
 0x00200000

121 

	)

123 
	#FEC_PR
 0x1

124 
	#FEC_WR
 0x2

125 
	#FEC_U
 0x4

126 

	)

134 #ifde‡
__ASSEMBLER__


139 
	#SEG_NULL
 \

140 .
w‹d
 0, 0; \

141 .
byã
 0, 0, 0, 0

	)

142 
	#SEG
(
ty≥
,
ba£
,
lim
) \

143 .
	`w‹d
 (((
lim
Ë>> 12Ë& 0xffff), ((
ba£
) & 0xffff); \

144 .
	`byã
 (((
ba£
Ë>> 16Ë& 0xff), (0x90 | (
ty≥
)), \

145 (0xC0 | (((
lim
Ë>> 28Ë& 0xf)), (((
ba£
Ë>> 24Ë& 0xff)

	)

149 
	~<öc/ty≥s.h
>

152 
	sSegdesc
 {

153 
	msd_lim_15_0
 : 16;

154 
	msd_ba£_15_0
 : 16;

155 
	msd_ba£_23_16
 : 8;

156 
	msd_ty≥
 : 4;

157 
	msd_s
 : 1;

158 
	msd_d∂
 : 2;

159 
	msd_p
 : 1;

160 
	msd_lim_19_16
 : 4;

161 
	msd_avl
 : 1;

162 
	msd_rsv1
 : 1;

163 
	msd_db
 : 1;

164 
	msd_g
 : 1;

165 
	msd_ba£_31_24
 : 8;

168 
	#SEG_NULL
 (
Segdesc
){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }

	)

170 
	#SEG_FAULT
 (
Segdesc
){ 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0 }

	)

172 
	#SEG
(
ty≥
, 
ba£
, 
lim
, 
d∂
Ë(
Segdesc
) \

173 { ((
lim
Ë>> 12Ë& 0xffff, (
ba£
) & 0xffff, ((base) >> 16) & 0xff, \

174 
ty≥
, 1, 
d∂
, 1, (Ë(
lim
) >> 28, 0, 0, 1, 1, \

175 (Ë(
ba£
Ë>> 24 }

	)

176 
	#SEG16
(
ty≥
, 
ba£
, 
lim
, 
d∂
Ë(
Segdesc
) \

177 { (
lim
Ë& 0xffff, (
ba£
) & 0xffff, ((base) >> 16) & 0xff, \

178 
ty≥
, 1, 
d∂
, 1, (Ë(
lim
) >> 16, 0, 0, 1, 0, \

179 (Ë(
ba£
Ë>> 24 }

	)

184 
	#STA_X
 0x8

185 
	#STA_E
 0x4

186 
	#STA_C
 0x4

187 
	#STA_W
 0x2

188 
	#STA_R
 0x2

189 
	#STA_A
 0x1

190 

	)

192 
	#STS_T16A
 0x1

193 
	#STS_LDT
 0x2

194 
	#STS_T16B
 0x3

195 
	#STS_CG16
 0x4

196 
	#STS_TG
 0x5

197 
	#STS_IG16
 0x6

198 
	#STS_TG16
 0x7

199 
	#STS_T32A
 0x9

200 
	#STS_T32B
 0xB

201 
	#STS_CG32
 0xC

202 
	#STS_IG32
 0xE

203 
	#STS_TG32
 0xF

204 

	)

212 #i‚de‡
__ASSEMBLER__


215 
	sTask°©e
 {

216 
uöt32_t
 
	mts_lök
;

217 
uöçå_t
 
	mts_e•0
;

218 
uöt16_t
 
	mts_ss0
;

219 
uöt16_t
 
	mts_∑ddög1
;

220 
uöçå_t
 
	mts_e•1
;

221 
uöt16_t
 
	mts_ss1
;

222 
uöt16_t
 
	mts_∑ddög2
;

223 
uöçå_t
 
	mts_e•2
;

224 
uöt16_t
 
	mts_ss2
;

225 
uöt16_t
 
	mts_∑ddög3
;

226 
phyßddr_t
 
	mts_¸3
;

227 
uöçå_t
 
	mts_eù
;

228 
uöt32_t
 
	mts_eÊags
;

229 
uöt32_t
 
	mts_óx
;

230 
uöt32_t
 
	mts_ecx
;

231 
uöt32_t
 
	mts_edx
;

232 
uöt32_t
 
	mts_ebx
;

233 
uöçå_t
 
	mts_e•
;

234 
uöçå_t
 
	mts_ebp
;

235 
uöt32_t
 
	mts_esi
;

236 
uöt32_t
 
	mts_edi
;

237 
uöt16_t
 
	mts_es
;

238 
uöt16_t
 
	mts_∑ddög4
;

239 
uöt16_t
 
	mts_cs
;

240 
uöt16_t
 
	mts_∑ddög5
;

241 
uöt16_t
 
	mts_ss
;

242 
uöt16_t
 
	mts_∑ddög6
;

243 
uöt16_t
 
	mts_ds
;

244 
uöt16_t
 
	mts_∑ddög7
;

245 
uöt16_t
 
	mts_fs
;

246 
uöt16_t
 
	mts_∑ddög8
;

247 
uöt16_t
 
	mts_gs
;

248 
uöt16_t
 
	mts_∑ddög9
;

249 
uöt16_t
 
	mts_ldt
;

250 
uöt16_t
 
	mts_∑ddög10
;

251 
uöt16_t
 
	mts_t
;

252 
uöt16_t
 
	mts_iomb
;

256 
	sG©edesc
 {

257 
	mgd_off_15_0
 : 16;

258 
	mgd_£l
 : 16;

259 
	mgd_¨gs
 : 5;

260 
	mgd_rsv1
 : 3;

261 
	mgd_ty≥
 : 4;

262 
	mgd_s
 : 1;

263 
	mgd_d∂
 : 2;

264 
	mgd_p
 : 1;

265 
	mgd_off_31_16
 : 16;

282 
	#SETGATE
(
g©e
, 
i°øp
, 
£l
, 
off
, 
d∂
) \

284 (
g©e
).
gd_off_15_0
 = (
uöt32_t
Ë(
off
) & 0xffff; \

285 (
g©e
).
gd_£l
 = (
£l
); \

286 (
g©e
).
gd_¨gs
 = 0; \

287 (
g©e
).
gd_rsv1
 = 0; \

288 (
g©e
).
gd_ty≥
 = (
i°øp
Ë? 
STS_TG32
 : 
STS_IG32
; \

289 (
g©e
).
gd_s
 = 0; \

290 (
g©e
).
gd_d∂
 = (
d∂
); \

291 (
g©e
).
gd_p
 = 1; \

292 (
g©e
).
gd_off_31_16
 = (
uöt32_t
Ë(
off
) >> 16; \

293 }

	)

296 
	#SETCALLGATE
(
g©e
, 
£l
, 
off
, 
d∂
) \

298 (
g©e
).
gd_off_15_0
 = (
uöt32_t
Ë(
off
) & 0xffff; \

299 (
g©e
).
gd_£l
 = (
£l
); \

300 (
g©e
).
gd_¨gs
 = 0; \

301 (
g©e
).
gd_rsv1
 = 0; \

302 (
g©e
).
gd_ty≥
 = 
STS_CG32
; \

303 (
g©e
).
gd_s
 = 0; \

304 (
g©e
).
gd_d∂
 = (
d∂
); \

305 (
g©e
).
gd_p
 = 1; \

306 (
g©e
).
gd_off_31_16
 = (
uöt32_t
Ë(
off
) >> 16; \

307 }

	)

310 
	sP£udodesc
 {

311 
uöt16_t
 
	mpd_lim
;

312 
uöt32_t
 
	mpd_ba£
;

313 } 
__©åibuã__
 ((
∑cked
));

	@inc/stab.h

1 #i‚de‡
JOS_STAB_H


2 
	#JOS_STAB_H


	)

3 
	~<öc/ty≥s.h
>

15 
	#N_GSYM
 0x20

16 
	#N_FNAME
 0x22

17 
	#N_FUN
 0x24

18 
	#N_STSYM
 0x26

19 
	#N_LCSYM
 0x28

20 
	#N_MAIN
 0x2a

21 
	#N_PC
 0x30

22 
	#N_RSYM
 0x40

23 
	#N_SLINE
 0x44

24 
	#N_DSLINE
 0x46

25 
	#N_BSLINE
 0x48

26 
	#N_SSYM
 0x60

27 
	#N_SO
 0x64

28 
	#N_LSYM
 0x80

29 
	#N_BINCL
 0x82

30 
	#N_SOL
 0x84

31 
	#N_PSYM
 0xa0

32 
	#N_EINCL
 0xa2

33 
	#N_ENTRY
 0xa4

34 
	#N_LBRAC
 0xc0

35 
	#N_EXCL
 0xc2

36 
	#N_RBRAC
 0xe0

37 
	#N_BCOMM
 0xe2

38 
	#N_ECOMM
 0xe4

39 
	#N_ECOML
 0xe8

40 
	#N_LENG
 0xfe

41 

	)

43 
	sSèb
 {

44 
uöt32_t
 
	mn_°rx
;

45 
uöt8_t
 
	mn_ty≥
;

46 
uöt8_t
 
	mn_Ÿhî
;

47 
uöt16_t
 
	mn_desc
;

48 
uöçå_t
 
	mn_vÆue
;

	@inc/stdarg.h

3 #i‚de‡
JOS_INC_STDARG_H


4 
	#JOS_INC_STDARG_H


	)

6 
__buûtö_va_li°
 
	tva_li°
;

8 
	#va_°¨t
(
≠
, 
œ°
Ë
	`__buûtö_va_°¨t
◊p,Üa°)

	)

10 
	#va_¨g
(
≠
, 
ty≥
Ë
	`__buûtö_va_¨g
◊p,Åy≥)

	)

12 
	#va_íd
(
≠
Ë
	`__buûtö_va_íd
◊p)

	)

	@inc/stdio.h

1 #i‚de‡
JOS_INC_STDIO_H


2 
	#JOS_INC_STDIO_H


	)

4 
	~<öc/°d¨g.h
>

6 #i‚de‡
NULL


7 
	#NULL
 ((*Ë0)

	)

11 
˝utch¨
(
c
);

12 
gëch¨
();

13 
isc⁄s
(
fd
);

16 
¥ötfmt
((*
putch
)(, *), *
putd©
, c⁄° *
fmt
, ...);

17 
	`v¥ötfmt
((*
putch
)(, *), *
putd©
, c⁄° *
fmt
, 
va_li°
);

18 
	`¢¥ötf
(*
°r
, 
size
, c⁄° *
fmt
, ...);

19 
	`v¢¥ötf
(*
°r
, 
size
, c⁄° *
fmt
, 
va_li°
);

22 
	`˝rötf
(c⁄° *
fmt
, ...);

23 
	`v˝rötf
(c⁄° *
fmt
, 
va_li°
);

26 
	`¥ötf
(c⁄° *
fmt
, ...);

27 
	`Ârötf
(
fd
, c⁄° *
fmt
, ...);

28 
	`vÂrötf
(
fd
, c⁄° *
fmt
, 
va_li°
);

31 * 
	`ªadlöe
(c⁄° *
¥om±
);

	@inc/string.h

1 #i‚de‡
JOS_INC_STRING_H


2 
	#JOS_INC_STRING_H


	)

4 
	~<öc/ty≥s.h
>

6 
°æí
(c⁄° *
s
);

7 
°∫Àn
(c⁄° *
s
, 
size_t
 
size
);

8 * 
°r˝y
(*
d°
, c⁄° *
§c
);

9 * 
°∫˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
size
);

10 * 
°rˇt
(*
d°
, c⁄° *
§c
);

11 
size_t
 
°æ˝y
(*
d°
, c⁄° *
§c
, size_à
size
);

12 
°rcmp
(c⁄° *
s1
, c⁄° *
s2
);

13 
°∫cmp
(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
size
);

14 * 
°rchr
(c⁄° *
s
, 
c
);

15 * 
°rföd
(c⁄° *
s
, 
c
);

17 * 
mem£t
(*
d°
, 
c
, 
size_t
 
Àn
);

18 * 
mem˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
Àn
);

19 * 
memmove
(*
d°
, c⁄° *
§c
, 
size_t
 
Àn
);

20 
memcmp
(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
Àn
);

21 * 
memföd
(c⁄° *
s
, 
c
, 
size_t
 
Àn
);

23 
°πﬁ
(c⁄° *
s
, **
íd±r
, 
ba£
);

	@inc/syscall.h

1 #i‚de‡
JOS_INC_SYSCALL_H


2 
	#JOS_INC_SYSCALL_H


	)

6 
	mSYS_˝uts
 = 0,

7 
	mSYS_cgëc
,

8 
	mSYS_gëívid
,

9 
	mSYS_ív_de°roy
,

10 
	mSYS_∑ge_Æloc
,

11 
	mSYS_∑ge_m≠
,

12 
	mSYS_∑ge_unm≠
,

13 
	mSYS_exof‹k
,

14 
	mSYS_ív_£t_°©us
,

15 
	mSYS_ív_£t_pgÁu…_upˇŒ
,

16 
	mSYS_yõld
,

17 
	mSYS_ùc_åy_£nd
,

18 
	mSYS_ùc_ªcv
,

19 
	mNSYSCALLS


	@inc/trap.h

1 #i‚de‡
JOS_INC_TRAP_H


2 
	#JOS_INC_TRAP_H


	)

6 
	#T_DIVIDE
 0

7 
	#T_DEBUG
 1

8 
	#T_NMI
 2

9 
	#T_BRKPT
 3

10 
	#T_OFLOW
 4

11 
	#T_BOUND
 5

12 
	#T_ILLOP
 6

13 
	#T_DEVICE
 7

14 
	#T_DBLFLT
 8

16 
	#T_TSS
 10

17 
	#T_SEGNP
 11

18 
	#T_STACK
 12

19 
	#T_GPFLT
 13

20 
	#T_PGFLT
 14

22 
	#T_FPERR
 16

23 
	#T_ALIGN
 17

24 
	#T_MCHK
 18

25 
	#T_SIMDERR
 19

26 

	)

29 
	#T_SYSCALL
 48

30 
	#T_DEFAULT
 500

31 

	)

32 
	#IRQ_OFFSET
 32

33 

	)

35 
	#IRQ_TIMER
 0

	)

36 
	#IRQ_KBD
 1

	)

37 
	#IRQ_SERIAL
 4

	)

38 
	#IRQ_SPURIOUS
 7

	)

39 
	#IRQ_IDE
 14

	)

40 
	#IRQ_ERROR
 19

	)

42 #i‚de‡
__ASSEMBLER__


44 
	~<öc/ty≥s.h
>

46 
	sPushRegs
 {

48 
uöt32_t
 
	mªg_edi
;

49 
uöt32_t
 
	mªg_esi
;

50 
uöt32_t
 
	mªg_ebp
;

51 
uöt32_t
 
	mªg_€•
;

52 
uöt32_t
 
	mªg_ebx
;

53 
uöt32_t
 
	mªg_edx
;

54 
uöt32_t
 
	mªg_ecx
;

55 
uöt32_t
 
	mªg_óx
;

56 } 
__©åibuã__
((
∑cked
));

58 
	sTøp‰ame
 {

59 
PushRegs
 
	mtf_ªgs
;

60 
uöt16_t
 
	mtf_es
;

61 
uöt16_t
 
	mtf_∑ddög1
;

62 
uöt16_t
 
	mtf_ds
;

63 
uöt16_t
 
	mtf_∑ddög2
;

64 
uöt32_t
 
	mtf_å≠no
;

66 
uöt32_t
 
	mtf_îr
;

67 
uöçå_t
 
	mtf_eù
;

68 
uöt16_t
 
	mtf_cs
;

69 
uöt16_t
 
	mtf_∑ddög3
;

70 
uöt32_t
 
	mtf_eÊags
;

72 
uöçå_t
 
	mtf_e•
;

73 
uöt16_t
 
	mtf_ss
;

74 
uöt16_t
 
	mtf_∑ddög4
;

75 } 
__©åibuã__
((
∑cked
));

77 
	sUTøp‰ame
 {

79 
uöt32_t
 
	mutf_Áu…_va
;

80 
uöt32_t
 
	mutf_îr
;

82 
PushRegs
 
	mutf_ªgs
;

83 
uöçå_t
 
	mutf_eù
;

84 
uöt32_t
 
	mutf_eÊags
;

86 
uöçå_t
 
	mutf_e•
;

87 } 
__©åibuã__
((
∑cked
));

	@inc/types.h

1 #i‚de‡
JOS_INC_TYPES_H


2 
	#JOS_INC_TYPES_H


	)

4 #i‚de‡
NULL


5 
	#NULL
 ((*Ë0)

	)

9 
_Boﬁ
 
	tboﬁ
;

10 íum { 
	mÁl£
, 
	måue
 };

13 
__sig√d
 
	töt8_t
;

14 
	tuöt8_t
;

15 
	töt16_t
;

16 
	tuöt16_t
;

17 
	töt32_t
;

18 
	tuöt32_t
;

19 
	töt64_t
;

20 
	tuöt64_t
;

26 
öt32_t
 
	töçå_t
;

27 
uöt32_t
 
	tuöçå_t
;

28 
uöt32_t
 
	tphyßddr_t
;

31 
uöt32_t
 
	tµn_t
;

34 
uöt32_t
 
	tsize_t
;

37 
öt32_t
 
	tssize_t
;

40 
öt32_t
 
	toff_t
;

43 
	#MIN
(
_a
, 
_b
) \

45 
	`ty≥of
(
_a
Ë
__a
 = (_a); \

46 
	`ty≥of
(
_b
Ë
__b
 = (_b); \

47 
__a
 <
__b
 ? __a : __b; \

48 })

	)

49 
	#MAX
(
_a
, 
_b
) \

51 
	`ty≥of
(
_a
Ë
__a
 = (_a); \

52 
	`ty≥of
(
_b
Ë
__b
 = (_b); \

53 
__a
 >
__b
 ? __a : __b; \

54 })

	)

58 
	#ROUNDDOWN
(
a
, 
n
) \

60 
uöt32_t
 
__a
 = (uöt32_tË(
a
); \

61 (
	`ty≥of
(
a
)Ë(
__a
 - __®% (
n
)); \

62 })

	)

64 
	#ROUNDUP
(
a
, 
n
) \

66 
uöt32_t
 
__n
 = (uöt32_tË(
n
); \

67 (
	`ty≥of
(
a
)Ë(
	`ROUNDDOWN
((
uöt32_t
Ë◊Ë+ 
__n
 - 1, __n)); \

68 })

	)

71 
	#off£tof
(
ty≥
, 
membî
Ë((
size_t
Ë(&(—y≥*)0)->membî))

	)

	@inc/x86.h

1 #i‚de‡
JOS_INC_X86_H


2 
	#JOS_INC_X86_H


	)

4 
	~<öc/ty≥s.h
>

6 
__ölöe
 
	$bªakpoöt
(Ë
	`__©åibuã__
((
Æways_ölöe
));

7 
__ölöe
 
uöt8_t
 
	$öb
(
p‹t
Ë
	`__©åibuã__
((
Æways_ölöe
));

8 
__ölöe
 
	$ösb
(
p‹t
, *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

9 
__ölöe
 
uöt16_t
 
	$öw
(
p‹t
Ë
	`__©åibuã__
((
Æways_ölöe
));

10 
__ölöe
 
	$ösw
(
p‹t
, *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

11 
__ölöe
 
uöt32_t
 
	$öl
(
p‹t
Ë
	`__©åibuã__
((
Æways_ölöe
));

12 
__ölöe
 
	$ö¶
(
p‹t
, *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

13 
__ölöe
 
	$outb
(
p‹t
, 
uöt8_t
 
d©a
Ë
	`__©åibuã__
((
Æways_ölöe
));

14 
__ölöe
 
	$outsb
(
p‹t
, c⁄° *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

15 
__ölöe
 
	$outw
(
p‹t
, 
uöt16_t
 
d©a
Ë
	`__©åibuã__
((
Æways_ölöe
));

16 
__ölöe
 
	$outsw
(
p‹t
, c⁄° *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

17 
__ölöe
 
	$out¶
(
p‹t
, c⁄° *
addr
, 
˙t
Ë
	`__©åibuã__
((
Æways_ölöe
));

18 
__ölöe
 
	$oué
(
p‹t
, 
uöt32_t
 
d©a
Ë
	`__©åibuã__
((
Æways_ölöe
));

19 
__ölöe
 
	$övÕg
(*
addr
Ë
	`__©åibuã__
((
Æways_ölöe
));

20 
__ölöe
 
	$lidt
(*
p
Ë
	`__©åibuã__
((
Æways_ölöe
));

21 
__ölöe
 
	$Œdt
(
uöt16_t
 
£l
Ë
	`__©åibuã__
((
Æways_ölöe
));

22 
__ölöe
 
	$…r
(
uöt16_t
 
£l
Ë
	`__©åibuã__
((
Æways_ölöe
));

23 
__ölöe
 
	$l¸0
(
uöt32_t
 
vÆ
Ë
	`__©åibuã__
((
Æways_ölöe
));

24 
__ölöe
 
uöt32_t
 
	$r¸0
(Ë
	`__©åibuã__
((
Æways_ölöe
));

25 
__ölöe
 
uöt32_t
 
	$r¸2
(Ë
	`__©åibuã__
((
Æways_ölöe
));

26 
__ölöe
 
	$l¸3
(
uöt32_t
 
vÆ
Ë
	`__©åibuã__
((
Æways_ölöe
));

27 
__ölöe
 
uöt32_t
 
	$r¸3
(Ë
	`__©åibuã__
((
Æways_ölöe
));

28 
__ölöe
 
	$l¸4
(
uöt32_t
 
vÆ
Ë
	`__©åibuã__
((
Æways_ölöe
));

29 
__ölöe
 
uöt32_t
 
	$r¸4
(Ë
	`__©åibuã__
((
Æways_ölöe
));

30 
__ölöe
 
	$ébÊush
(Ë
	`__©åibuã__
((
Æways_ölöe
));

31 
__ölöe
 
uöt32_t
 
	$ªad_eÊags
(Ë
	`__©åibuã__
((
Æways_ölöe
));

32 
__ölöe
 
	$wrôe_eÊags
(
uöt32_t
 
eÊags
Ë
	`__©åibuã__
((
Æways_ölöe
));

33 
__ölöe
 
uöt32_t
 
	$ªad_ebp
(Ë
	`__©åibuã__
((
Æways_ölöe
));

34 
__ölöe
 
uöt32_t
 
	$ªad_e•
(Ë
	`__©åibuã__
((
Æways_ölöe
));

35 
__ölöe
 
	`˝uid
(
uöt32_t
 
öfo
, uöt32_à*
óxp
, uöt32_à*
ebxp
, uöt32_à*
ecxp
, uöt32_à*
edxp
);

36 
__ölöe
 
uöt64_t
 
	$ªad_tsc
(Ë
	`__©åibuã__
((
Æways_ölöe
));

38 
__ölöe
 

39 
	$bªakpoöt
()

41 
__asm
 
	`__vﬁ©ûe
("int3");

42 
	}
}

44 
__ölöe
 
uöt8_t


45 
	$öb
(
p‹t
)

47 
uöt8_t
 
d©a
;

48 
__asm
 
	`__vﬁ©ûe
("öb %w1,%0" : "˜" (
d©a
Ë: "d" (
p‹t
));

49  
d©a
;

50 
	}
}

52 
__ölöe
 

53 
	$ösb
(
p‹t
, *
addr
, 
˙t
)

55 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\tinsb" :

56 "=D" (
addr
), "=c" (
˙t
) :

57 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

59 
	}
}

61 
__ölöe
 
uöt16_t


62 
	$öw
(
p‹t
)

64 
uöt16_t
 
d©a
;

65 
__asm
 
	`__vﬁ©ûe
("öw %w1,%0" : "˜" (
d©a
Ë: "d" (
p‹t
));

66  
d©a
;

67 
	}
}

69 
__ölöe
 

70 
	$ösw
(
p‹t
, *
addr
, 
˙t
)

72 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\tinsw" :

73 "=D" (
addr
), "=c" (
˙t
) :

74 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

76 
	}
}

78 
__ölöe
 
uöt32_t


79 
	$öl
(
p‹t
)

81 
uöt32_t
 
d©a
;

82 
__asm
 
	`__vﬁ©ûe
("ö»%w1,%0" : "˜" (
d©a
Ë: "d" (
p‹t
));

83  
d©a
;

84 
	}
}

86 
__ölöe
 

87 
	$ö¶
(
p‹t
, *
addr
, 
˙t
)

89 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\tinsl" :

90 "=D" (
addr
), "=c" (
˙t
) :

91 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

93 
	}
}

95 
__ölöe
 

96 
	$outb
(
p‹t
, 
uöt8_t
 
d©a
)

98 
__asm
 
	`__vﬁ©ûe
("outb %0,%w1" : : "a" (
d©a
), "d" (
p‹t
));

99 
	}
}

101 
__ölöe
 

102 
	$outsb
(
p‹t
, c⁄° *
addr
, 
˙t
)

104 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\toutsb" :

105 "=S" (
addr
), "=c" (
˙t
) :

106 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

108 
	}
}

110 
__ölöe
 

111 
	$outw
(
p‹t
, 
uöt16_t
 
d©a
)

113 
__asm
 
	`__vﬁ©ûe
("outw %0,%w1" : : "a" (
d©a
), "d" (
p‹t
));

114 
	}
}

116 
__ölöe
 

117 
	$outsw
(
p‹t
, c⁄° *
addr
, 
˙t
)

119 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\toutsw" :

120 "=S" (
addr
), "=c" (
˙t
) :

121 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

123 
	}
}

125 
__ölöe
 

126 
	$out¶
(
p‹t
, c⁄° *
addr
, 
˙t
)

128 
__asm
 
	`__vﬁ©ûe
("cld\n\trepne\n\toutsl" :

129 "=S" (
addr
), "=c" (
˙t
) :

130 "d" (
p‹t
), "0" (
addr
), "1" (
˙t
) :

132 
	}
}

134 
__ölöe
 

135 
	$oué
(
p‹t
, 
uöt32_t
 
d©a
)

137 
__asm
 
	`__vﬁ©ûe
("oué %0,%w1" : : "a" (
d©a
), "d" (
p‹t
));

138 
	}
}

140 
__ölöe
 

141 
	$övÕg
(*
addr
)

143 
__asm
 
	`__vﬁ©ûe
("övÕg (%0)" : : "r" (
addr
) : "memory");

144 
	}
}

146 
__ölöe
 

147 
	$lidt
(*
p
)

149 
__asm
 
	`__vﬁ©ûe
("lidà(%0)" : : "r" (
p
));

150 
	}
}

152 
__ölöe
 

153 
	$lgdt
(*
p
)

155 
__asm
 
	`__vﬁ©ûe
("lgdà(%0)" : : "r" (
p
));

156 
	}
}

158 
__ölöe
 

159 
	$Œdt
(
uöt16_t
 
£l
)

161 
__asm
 
	`__vﬁ©ûe
("Œdà%0" : : "r" (
£l
));

162 
	}
}

164 
__ölöe
 

165 
	$…r
(
uöt16_t
 
£l
)

167 
__asm
 
	`__vﬁ©ûe
("…∏%0" : : "r" (
£l
));

168 
	}
}

170 
__ölöe
 

171 
	$l¸0
(
uöt32_t
 
vÆ
)

173 
__asm
 
	`__vﬁ©ûe
("mov»%0,%%¸0" : : "r" (
vÆ
));

174 
	}
}

176 
__ölöe
 
uöt32_t


177 
	$r¸0
()

179 
uöt32_t
 
vÆ
;

180 
__asm
 
	`__vﬁ©ûe
("mov»%%¸0,%0" : "Ù" (
vÆ
));

181  
vÆ
;

182 
	}
}

184 
__ölöe
 
uöt32_t


185 
	$r¸2
()

187 
uöt32_t
 
vÆ
;

188 
__asm
 
	`__vﬁ©ûe
("mov»%%¸2,%0" : "Ù" (
vÆ
));

189  
vÆ
;

190 
	}
}

192 
__ölöe
 

193 
	$l¸3
(
uöt32_t
 
vÆ
)

195 
__asm
 
	`__vﬁ©ûe
("mov»%0,%%¸3" : : "r" (
vÆ
));

196 
	}
}

198 
__ölöe
 
uöt32_t


199 
	$r¸3
()

201 
uöt32_t
 
vÆ
;

202 
__asm
 
	`__vﬁ©ûe
("mov»%%¸3,%0" : "Ù" (
vÆ
));

203  
vÆ
;

204 
	}
}

206 
__ölöe
 

207 
	$l¸4
(
uöt32_t
 
vÆ
)

209 
__asm
 
	`__vﬁ©ûe
("mov»%0,%%¸4" : : "r" (
vÆ
));

210 
	}
}

212 
__ölöe
 
uöt32_t


213 
	$r¸4
()

215 
uöt32_t
 
¸4
;

216 
__asm
 
	`__vﬁ©ûe
("mov»%%¸4,%0" : "Ù" (
¸4
));

217  
¸4
;

218 
	}
}

220 
__ölöe
 

221 
	$ébÊush
()

223 
uöt32_t
 
¸3
;

224 
__asm
 
	`__vﬁ©ûe
("mov»%%¸3,%0" : "Ù" (
¸3
));

225 
__asm
 
	`__vﬁ©ûe
("mov»%0,%%¸3" : : "r" (
¸3
));

226 
	}
}

228 
__ölöe
 
uöt32_t


229 
	$ªad_eÊags
()

231 
uöt32_t
 
eÊags
;

232 
__asm
 
	`__vﬁ©ûe
("pushÊ;Ö›»%0" : "Ù" (
eÊags
));

233  
eÊags
;

234 
	}
}

236 
__ölöe
 

237 
	$wrôe_eÊags
(
uöt32_t
 
eÊags
)

239 
__asm
 
	`__vﬁ©ûe
("push»%0;Ö›Ê" : : "r" (
eÊags
));

240 
	}
}

242 
__ölöe
 
uöt32_t


243 
	$ªad_ebp
()

245 
uöt32_t
 
ebp
;

246 
__asm
 
	`__vﬁ©ûe
("mov»%%ebp,%0" : "Ù" (
ebp
));

247  
ebp
;

248 
	}
}

250 
__ölöe
 
uöt32_t


251 
	$ªad_e•
()

253 
uöt32_t
 
e•
;

254 
__asm
 
	`__vﬁ©ûe
("mov»%%e•,%0" : "Ù" (
e•
));

255  
e•
;

256 
	}
}

258 
__ölöe
 

259 
	$˝uid
(
uöt32_t
 
öfo
, uöt32_à*
óxp
, uöt32_à*
ebxp
, uöt32_à*
ecxp
, uöt32_à*
edxp
)

261 
uöt32_t
 
óx
, 
ebx
, 
ecx
, 
edx
;

262 
asm
 volatile("cpuid"

263 : "˜" (
óx
), "=b" (
ebx
), "=c" (
ecx
), "=d" (
edx
)

264 : "a" (
öfo
));

265 i‡(
óxp
)

266 *
óxp
 = 
óx
;

267 i‡(
ebxp
)

268 *
ebxp
 = 
ebx
;

269 i‡(
ecxp
)

270 *
ecxp
 = 
ecx
;

271 i‡(
edxp
)

272 *
edxp
 = 
edx
;

273 
	}
}

275 
__ölöe
 
uöt64_t


276 
	$ªad_tsc
()

278 
uöt64_t
 
tsc
;

279 
__asm
 
	`__vﬁ©ûe
("rdtsc" : "=A" (
tsc
));

280  
tsc
;

281 
	}
}

283 
ölöe
 
uöt32_t


284 
	$xchg
(vﬁ©ûê
uöt32_t
 *
addr
, uöt32_à
√wvÆ
)

286 
uöt32_t
 
ªsu…
;

289 
asm
 volatile("lock; xchgl %0, %1" :

290 "+m" (*
addr
), "˜" (
ªsu…
) :

291 "1" (
√wvÆ
) :

293  
ªsu…
;

294 
	}
}

	@kern/console.c

3 
	~<öc/x86.h
>

4 
	~<öc/memœyout.h
>

5 
	~<öc/kbdªg.h
>

6 
	~<öc/°rög.h
>

7 
	~<öc/as£π.h
>

9 
	~<kîn/c⁄sﬁe.h
>

10 
	~<kîn/picúq.h
>

12 
c⁄s_öå
((*
¥oc
)());

13 
	`c⁄s_putc
(
c
);

17 
	$dñay
()

19 
	`öb
(0x84);

20 
	`öb
(0x84);

21 
	`öb
(0x84);

22 
	`öb
(0x84);

23 
	}
}

27 
	#COM1
 0x3F8

	)

29 
	#COM_RX
 0

30 
	#COM_TX
 0

31 
	#COM_DLL
 0

32 
	#COM_DLM
 1

33 
	#COM_IER
 1

34 
	#COM_IER_RDI
 0x01

35 
	#COM_IIR
 2

36 
	#COM_FCR
 2

37 
	#COM_LCR
 3

38 
	#COM_LCR_DLAB
 0x80

39 
	#COM_LCR_WLEN8
 0x03

40 
	#COM_MCR
 4

41 
	#COM_MCR_RTS
 0x02

42 
	#COM_MCR_DTR
 0x01

43 
	#COM_MCR_OUT2
 0x08

44 
	#COM_LSR
 5

45 
	#COM_LSR_DATA
 0x01

46 
	#COM_LSR_TXRDY
 0x20

47 
	#COM_LSR_TSRE
 0x40

48 

	)

49 
boﬁ
 
	g£rül_exi°s
;

52 
	$£rül_¥oc_d©a
()

54 i‡(!(
	`öb
(
COM1
+
COM_LSR
Ë& 
COM_LSR_DATA
))

56  
	`öb
(
COM1
+
COM_RX
);

57 
	}
}

60 
	$£rül_öå
()

62 i‡(
£rül_exi°s
)

63 
	`c⁄s_öå
(
£rül_¥oc_d©a
);

64 
	}
}

67 
	$£rül_putc
(
c
)

69 
i
;

71 
i
 = 0;

72 !(
	`öb
(
COM1
 + 
COM_LSR
Ë& 
COM_LSR_TXRDY
Ë&& 
i
 < 12800;

73 
i
++)

74 
	`dñay
();

76 
	`outb
(
COM1
 + 
COM_TX
, 
c
);

77 
	}
}

80 
	$£rül_öô
()

83 
	`outb
(
COM1
+
COM_FCR
, 0);

86 
	`outb
(
COM1
+
COM_LCR
, 
COM_LCR_DLAB
);

87 
	`outb
(
COM1
+
COM_DLL
, (
uöt8_t
) (115200 / 9600));

88 
	`outb
(
COM1
+
COM_DLM
, 0);

91 
	`outb
(
COM1
+
COM_LCR
, 
COM_LCR_WLEN8
 & ~
COM_LCR_DLAB
);

94 
	`outb
(
COM1
+
COM_MCR
, 0);

96 
	`outb
(
COM1
+
COM_IER
, 
COM_IER_RDI
);

100 
£rül_exi°s
 = (
	`öb
(
COM1
+
COM_LSR
) != 0xFF);

101 (Ë
	`öb
(
COM1
+
COM_IIR
);

102 (Ë
	`öb
(
COM1
+
COM_RX
);

104 
	}
}

113 
	$Õt_putc
(
c
)

115 
i
;

117 
i
 = 0; !(
	`öb
(0x378+1) & 0x80) && i < 12800; i++)

118 
	`dñay
();

119 
	`outb
(0x378+0, 
c
);

120 
	`outb
(0x378+2, 0x08|0x04|0x01);

121 
	`outb
(0x378+2, 0x08);

122 
	}
}

129 
	gaddr_6845
;

130 
uöt16_t
 *
	g¸t_buf
;

131 
uöt16_t
 
	g¸t_pos
;

134 
	$cga_öô
()

136 vﬁ©ûê
uöt16_t
 *
˝
;

137 
uöt16_t
 
was
;

138 
pos
;

140 
˝
 = (
uöt16_t
*Ë(
KERNBASE
 + 
CGA_BUF
);

141 
was
 = *
˝
;

142 *
˝
 = (
uöt16_t
) 0xA55A;

143 i‡(*
˝
 != 0xA55A) {

144 
˝
 = (
uöt16_t
*Ë(
KERNBASE
 + 
MONO_BUF
);

145 
addr_6845
 = 
MONO_BASE
;

147 *
˝
 = 
was
;

148 
addr_6845
 = 
CGA_BASE
;

152 
	`outb
(
addr_6845
, 14);

153 
pos
 = 
	`öb
(
addr_6845
 + 1) << 8;

154 
	`outb
(
addr_6845
, 15);

155 
pos
 |
	`öb
(
addr_6845
 + 1);

157 
¸t_buf
 = (
uöt16_t
*Ë
˝
;

158 
¸t_pos
 = 
pos
;

159 
	}
}

164 
	$cga_putc
(
c
)

167 i‡(!(
c
 & ~0xFF))

168 
c
 |= 0x0700;

170 
c
 & 0xff) {

172 i‡(
¸t_pos
 > 0) {

173 
¸t_pos
--;

174 
¸t_buf
[
¸t_pos
] = (
c
 & ~0xff) | ' ';

178 
¸t_pos
 +
CRT_COLS
;

181 
¸t_pos
 -(¸t_po†% 
CRT_COLS
);

184 
	`c⁄s_putc
(' ');

185 
	`c⁄s_putc
(' ');

186 
	`c⁄s_putc
(' ');

187 
	`c⁄s_putc
(' ');

188 
	`c⁄s_putc
(' ');

191 
¸t_buf
[
¸t_pos
++] = 
c
;

196 i‡(
¸t_pos
 >
CRT_SIZE
) {

197 
i
;

199 
	`memmove
(
¸t_buf
, cπ_bu‡+ 
CRT_COLS
, (
CRT_SIZE
 - CRT_COLSË* (
uöt16_t
));

200 
i
 = 
CRT_SIZE
 - 
CRT_COLS
; i < CRT_SIZE; i++)

201 
¸t_buf
[
i
] = 0x0700 | ' ';

202 
¸t_pos
 -
CRT_COLS
;

206 
	`outb
(
addr_6845
, 14);

207 
	`outb
(
addr_6845
 + 1, 
¸t_pos
 >> 8);

208 
	`outb
(
addr_6845
, 15);

209 
	`outb
(
addr_6845
 + 1, 
¸t_pos
);

210 
	}
}

215 
	#NO
 0

	)

217 
	#SHIFT
 (1<<0)

	)

218 
	#CTL
 (1<<1)

	)

219 
	#ALT
 (1<<2)

	)

221 
	#CAPSLOCK
 (1<<3)

	)

222 
	#NUMLOCK
 (1<<4)

	)

223 
	#SCROLLLOCK
 (1<<5)

	)

225 
	#E0ESC
 (1<<6)

	)

227 
uöt8_t
 
	gshi·code
[256] =

229 [0x1D] = 
CTL
,

230 [0x2A] = 
SHIFT
,

231 [0x36] = 
SHIFT
,

232 [0x38] = 
ALT
,

233 [0x9D] = 
CTL
,

234 [0xB8] = 
ALT


237 
uöt8_t
 
	gtoggÀcode
[256] =

239 [0x3A] = 
CAPSLOCK
,

240 [0x45] = 
NUMLOCK
,

241 [0x46] = 
SCROLLLOCK


244 
uöt8_t
 
	gn‹mÆm≠
[256] =

246 
NO
, 0x1B, '1', '2', '3', '4', '5', '6',

249 'o', 'p', '[', ']', '\n', 
NO
, 'a', 's',

251 '\'', '`', 
NO
, '\\', 'z', 'x', 'c', 'v',

252 'b', 'n', 'm', ',', '.', '/', 
NO
, '*',

253 
NO
, ' ', NO, NO, NO, NO, NO, NO,

254 
NO
, NO, NO, NO, NO, NO, NO, '7',

256 '2', '3', '0', '.', 
NO
, NO, NO, NO,

257 [0xC7] = 
KEY_HOME
, [0x9C] = '\n' ,

258 [0xB5] = '/' , [0xC8] = 
KEY_UP
,

259 [0xC9] = 
KEY_PGUP
, [0xCB] = 
KEY_LF
,

260 [0xCD] = 
KEY_RT
, [0xCF] = 
KEY_END
,

261 [0xD0] = 
KEY_DN
, [0xD1] = 
KEY_PGDN
,

262 [0xD2] = 
KEY_INS
, [0xD3] = 
KEY_DEL


265 
uöt8_t
 
	gshi·m≠
[256] =

267 
NO
, 033, '!', '@', '#', '$', '%', '^',

270 'O', 'P', '{', '}', '\n', 
NO
, 'A', 'S',

272 '"', '~', 
NO
, '|', 'Z', 'X', 'C', 'V',

273 'B', 'N', 'M', '<', '>', '?', 
NO
, '*',

274 
NO
, ' ', NO, NO, NO, NO, NO, NO,

275 
NO
, NO, NO, NO, NO, NO, NO, '7',

277 '2', '3', '0', '.', 
NO
, NO, NO, NO,

278 [0xC7] = 
KEY_HOME
, [0x9C] = '\n' ,

279 [0xB5] = '/' , [0xC8] = 
KEY_UP
,

280 [0xC9] = 
KEY_PGUP
, [0xCB] = 
KEY_LF
,

281 [0xCD] = 
KEY_RT
, [0xCF] = 
KEY_END
,

282 [0xD0] = 
KEY_DN
, [0xD1] = 
KEY_PGDN
,

283 [0xD2] = 
KEY_INS
, [0xD3] = 
KEY_DEL


286 
	#C
(
x
Ë(x - '@')

	)

288 
uöt8_t
 
	g˘lm≠
[256] =

290 
NO
, NO, NO, NO, NO, NO, NO, NO,

291 
NO
, NO, NO, NO, NO, NO, NO, NO,

292 
C
('Q'), C('W'), C('E'), C('R'), C('T'), C('Y'), C('U'), C('I'),

293 
C
('O'), C('P'), 
NO
, NO, '\r', NO, C('A'), C('S'),

294 
C
('D'), C('F'), C('G'), C('H'), C('J'), C('K'), C('L'), 
NO
,

295 
NO
, NO, NO, 
C
('\\'), C('Z'), C('X'), C('C'), C('V'),

296 
C
('B'), C('N'), C('M'), 
NO
, NO, C('/'), NO, NO,

297 [0x97] = 
KEY_HOME
,

298 [0xB5] = 
C
('/'), [0xC8] = 
KEY_UP
,

299 [0xC9] = 
KEY_PGUP
, [0xCB] = 
KEY_LF
,

300 [0xCD] = 
KEY_RT
, [0xCF] = 
KEY_END
,

301 [0xD0] = 
KEY_DN
, [0xD1] = 
KEY_PGDN
,

302 [0xD2] = 
KEY_INS
, [0xD3] = 
KEY_DEL


305 
uöt8_t
 *
	gch¨code
[4] = {

306 
n‹mÆm≠
,

307 
shi·m≠
,

308 
˘lm≠
,

309 
˘lm≠


317 
	$kbd_¥oc_d©a
()

319 
c
;

320 
uöt8_t
 
d©a
;

321 
uöt32_t
 
shi·
;

323 i‡((
	`öb
(
KBSTATP
Ë& 
KBS_DIB
) == 0)

326 
d©a
 = 
	`öb
(
KBDATAP
);

328 i‡(
d©a
 == 0xE0) {

330 
shi·
 |
E0ESC
;

332 } i‡(
d©a
 & 0x80) {

334 
d©a
 = (
shi·
 & 
E0ESC
 ? data : data & 0x7F);

335 
shi·
 &~(
shi·code
[
d©a
] | 
E0ESC
);

337 } i‡(
shi·
 & 
E0ESC
) {

339 
d©a
 |= 0x80;

340 
shi·
 &~
E0ESC
;

343 
shi·
 |
shi·code
[
d©a
];

344 
shi·
 ^
toggÀcode
[
d©a
];

346 
c
 = 
ch¨code
[
shi·
 & (
CTL
 | 
SHIFT
)][
d©a
];

347 i‡(
shi·
 & 
CAPSLOCK
) {

348 i‡('a' <
c
 && c <= 'z')

349 
c
 += 'A' - 'a';

350 i‡('A' <
c
 && c <= 'Z')

351 
c
 += 'a' - 'A';

356 i‡(!(~
shi·
 & (
CTL
 | 
ALT
)Ë&& 
c
 =
KEY_DEL
) {

357 
	`˝rötf
("Rebooting!\n");

358 
	`outb
(0x92, 0x3);

361  
c
;

362 
	}
}

365 
	$kbd_öå
()

367 
	`c⁄s_öå
(
kbd_¥oc_d©a
);

368 
	}
}

371 
	$kbd_öô
()

374 
	`kbd_öå
();

375 
	`úq_£tmask_8259A
(
úq_mask_8259A
 & ~(1<<1));

376 
	}
}

385 
	#CONSBUFSIZE
 512

	)

388 
uöt8_t
 
	mbuf
[
CONSBUFSIZE
];

389 
uöt32_t
 
	mΩos
;

390 
uöt32_t
 
	mwpos
;

391 } 
	gc⁄s
;

396 
c⁄s_öå
((*
¥oc
)())

398 
c
;

400 (
c
 = (*
¥oc
)()) != -1) {

401 i‡(
c
 == 0)

403 
c⁄s
.
buf
[c⁄s.
wpos
++] = 
c
;

404 i‡(
c⁄s
.
wpos
 =
CONSBUFSIZE
)

405 
c⁄s
.
wpos
 = 0;

407 
	}
}

411 
	$c⁄s_gëc
()

413 
c
;

418 
	`£rül_öå
();

419 
	`kbd_öå
();

422 i‡(
c⁄s
.
Ωos
 !c⁄s.
wpos
) {

423 
c
 = 
c⁄s
.
buf
[c⁄s.
Ωos
++];

424 i‡(
c⁄s
.
Ωos
 =
CONSBUFSIZE
)

425 
c⁄s
.
Ωos
 = 0;

426  
c
;

429 
	}
}

433 
	$c⁄s_putc
(
c
)

435 
	`£rül_putc
(
c
);

436 
	`Õt_putc
(
c
);

437 
	`cga_putc
(
c
);

438 
	}
}

442 
	$c⁄s_öô
()

444 
	`cga_öô
();

445 
	`kbd_öô
();

446 
	`£rül_öô
();

448 i‡(!
£rül_exi°s
)

449 
	`˝rötf
("SerialÖort doesÇotÉxist!\n");

450 
	}
}

456 
	$˝utch¨
(
c
)

458 
	`c⁄s_putc
(
c
);

459 
	}
}

462 
	$gëch¨
()

464 
c
;

466 (
c
 = 
	`c⁄s_gëc
()) == 0)

468  
c
;

469 
	}
}

472 
	$isc⁄s
(
fdnum
)

476 
	}
}

	@kern/console.h

3 #i‚de‡
_CONSOLE_H_


4 
	#_CONSOLE_H_


	)

5 #i‚de‡
JOS_KERNEL


9 
	~<öc/ty≥s.h
>

11 
	#MONO_BASE
 0x3B4

	)

12 
	#MONO_BUF
 0xB0000

	)

13 
	#CGA_BASE
 0x3D4

	)

14 
	#CGA_BUF
 0xB8000

	)

16 
	#CRT_ROWS
 25

	)

17 
	#CRT_COLS
 80

	)

18 
	#CRT_SIZE
 (
CRT_ROWS
 * 
CRT_COLS
)

	)

20 
c⁄s_öô
();

21 
c⁄s_gëc
();

23 
kbd_öå
();

24 
£rül_öå
();

	@kern/cpu.h

2 #i‚de‡
JOS_INC_CPU_H


3 
	#JOS_INC_CPU_H


	)

5 
	~<öc/ty≥s.h
>

6 
	~<öc/memœyout.h
>

7 
	~<öc/mmu.h
>

8 
	~<öc/ív.h
>

11 
	#NCPU
 8

	)

15 
	mCPU_UNUSED
 = 0,

16 
	mCPU_STARTED
,

17 
	mCPU_HALTED
,

21 
	sCpuInfo
 {

22 
uöt8_t
 
	m˝u_id
;

23 vﬁ©ûê
	m˝u_°©us
;

24 
Env
 *
	m˝u_ív
;

25 
Task°©e
 
	m˝u_ts
;

29 
CpuInfo
 
˝us
[
NCPU
];

30 
n˝u
;

31 
CpuInfo
 *
boŸ˝u
;

32 
phyßddr_t
 
œpiˇddr
;

35 
≥r˝u_k°acks
[
NCPU
][
KSTKSIZE
];

37 
˝unum
();

38 
	#this˝u
 (&
˝us
[
	`˝unum
()])

	)

40 
mp_öô
();

41 
œpic_öô
();

42 
œpic_°¨èp
(
uöt8_t
 
≠icid
, 
uöt32_t
 
addr
);

43 
œpic_eoi
();

44 
œpic_ùi
(
ve˘‹
);

	@kern/entrypgdir.c

1 
	~<öc/mmu.h
>

2 
	~<öc/memœyout.h
>

4 
±e_t
 
	gíåy_pgèbÀ
[
NPTENTRIES
];

20 
__©åibuã__
((
	$__Æig√d__
(
PGSIZE
)))

21 
pde_t
 
íåy_pgdú
[
NPDENTRIES
] = {

24 ((
uöçå_t
)
íåy_pgèbÀ
 - 
KERNBASE
Ë+ 
PTE_P
,

26 [
KERNBASE
>>
PDXSHIFT
]

27 ((
uöçå_t
)
íåy_pgèbÀ
 - 
KERNBASE
Ë+ 
PTE_P
 + 
PTE_W


28 
	}
};

32 
__©åibuã__
((
	$__Æig√d__
(
PGSIZE
)))

33 
±e_t
 
íåy_pgèbÀ
[
NPTENTRIES
] = {

34 0x000000 | 
PTE_P
 | 
PTE_W
,

35 0x001000 | 
PTE_P
 | 
PTE_W
,

36 0x002000 | 
PTE_P
 | 
PTE_W
,

37 0x003000 | 
PTE_P
 | 
PTE_W
,

38 0x004000 | 
PTE_P
 | 
PTE_W
,

39 0x005000 | 
PTE_P
 | 
PTE_W
,

40 0x006000 | 
PTE_P
 | 
PTE_W
,

41 0x007000 | 
PTE_P
 | 
PTE_W
,

42 0x008000 | 
PTE_P
 | 
PTE_W
,

43 0x009000 | 
PTE_P
 | 
PTE_W
,

44 0x00a000 | 
PTE_P
 | 
PTE_W
,

45 0x00b000 | 
PTE_P
 | 
PTE_W
,

46 0x00c000 | 
PTE_P
 | 
PTE_W
,

47 0x00d000 | 
PTE_P
 | 
PTE_W
,

48 0x00e000 | 
PTE_P
 | 
PTE_W
,

49 0x00f000 | 
PTE_P
 | 
PTE_W
,

50 0x010000 | 
PTE_P
 | 
PTE_W
,

51 0x011000 | 
PTE_P
 | 
PTE_W
,

52 0x012000 | 
PTE_P
 | 
PTE_W
,

53 0x013000 | 
PTE_P
 | 
PTE_W
,

54 0x014000 | 
PTE_P
 | 
PTE_W
,

55 0x015000 | 
PTE_P
 | 
PTE_W
,

56 0x016000 | 
PTE_P
 | 
PTE_W
,

57 0x017000 | 
PTE_P
 | 
PTE_W
,

58 0x018000 | 
PTE_P
 | 
PTE_W
,

59 0x019000 | 
PTE_P
 | 
PTE_W
,

60 0x01a000 | 
PTE_P
 | 
PTE_W
,

61 0x01b000 | 
PTE_P
 | 
PTE_W
,

62 0x01c000 | 
PTE_P
 | 
PTE_W
,

63 0x01d000 | 
PTE_P
 | 
PTE_W
,

64 0x01e000 | 
PTE_P
 | 
PTE_W
,

65 0x01f000 | 
PTE_P
 | 
PTE_W
,

66 0x020000 | 
PTE_P
 | 
PTE_W
,

67 0x021000 | 
PTE_P
 | 
PTE_W
,

68 0x022000 | 
PTE_P
 | 
PTE_W
,

69 0x023000 | 
PTE_P
 | 
PTE_W
,

70 0x024000 | 
PTE_P
 | 
PTE_W
,

71 0x025000 | 
PTE_P
 | 
PTE_W
,

72 0x026000 | 
PTE_P
 | 
PTE_W
,

73 0x027000 | 
PTE_P
 | 
PTE_W
,

74 0x028000 | 
PTE_P
 | 
PTE_W
,

75 0x029000 | 
PTE_P
 | 
PTE_W
,

76 0x02a000 | 
PTE_P
 | 
PTE_W
,

77 0x02b000 | 
PTE_P
 | 
PTE_W
,

78 0x02c000 | 
PTE_P
 | 
PTE_W
,

79 0x02d000 | 
PTE_P
 | 
PTE_W
,

80 0x02e000 | 
PTE_P
 | 
PTE_W
,

81 0x02f000 | 
PTE_P
 | 
PTE_W
,

82 0x030000 | 
PTE_P
 | 
PTE_W
,

83 0x031000 | 
PTE_P
 | 
PTE_W
,

84 0x032000 | 
PTE_P
 | 
PTE_W
,

85 0x033000 | 
PTE_P
 | 
PTE_W
,

86 0x034000 | 
PTE_P
 | 
PTE_W
,

87 0x035000 | 
PTE_P
 | 
PTE_W
,

88 0x036000 | 
PTE_P
 | 
PTE_W
,

89 0x037000 | 
PTE_P
 | 
PTE_W
,

90 0x038000 | 
PTE_P
 | 
PTE_W
,

91 0x039000 | 
PTE_P
 | 
PTE_W
,

92 0x03a000 | 
PTE_P
 | 
PTE_W
,

93 0x03b000 | 
PTE_P
 | 
PTE_W
,

94 0x03c000 | 
PTE_P
 | 
PTE_W
,

95 0x03d000 | 
PTE_P
 | 
PTE_W
,

96 0x03e000 | 
PTE_P
 | 
PTE_W
,

97 0x03f000 | 
PTE_P
 | 
PTE_W
,

98 0x040000 | 
PTE_P
 | 
PTE_W
,

99 0x041000 | 
PTE_P
 | 
PTE_W
,

100 0x042000 | 
PTE_P
 | 
PTE_W
,

101 0x043000 | 
PTE_P
 | 
PTE_W
,

102 0x044000 | 
PTE_P
 | 
PTE_W
,

103 0x045000 | 
PTE_P
 | 
PTE_W
,

104 0x046000 | 
PTE_P
 | 
PTE_W
,

105 0x047000 | 
PTE_P
 | 
PTE_W
,

106 0x048000 | 
PTE_P
 | 
PTE_W
,

107 0x049000 | 
PTE_P
 | 
PTE_W
,

108 0x04a000 | 
PTE_P
 | 
PTE_W
,

109 0x04b000 | 
PTE_P
 | 
PTE_W
,

110 0x04c000 | 
PTE_P
 | 
PTE_W
,

111 0x04d000 | 
PTE_P
 | 
PTE_W
,

112 0x04e000 | 
PTE_P
 | 
PTE_W
,

113 0x04f000 | 
PTE_P
 | 
PTE_W
,

114 0x050000 | 
PTE_P
 | 
PTE_W
,

115 0x051000 | 
PTE_P
 | 
PTE_W
,

116 0x052000 | 
PTE_P
 | 
PTE_W
,

117 0x053000 | 
PTE_P
 | 
PTE_W
,

118 0x054000 | 
PTE_P
 | 
PTE_W
,

119 0x055000 | 
PTE_P
 | 
PTE_W
,

120 0x056000 | 
PTE_P
 | 
PTE_W
,

121 0x057000 | 
PTE_P
 | 
PTE_W
,

122 0x058000 | 
PTE_P
 | 
PTE_W
,

123 0x059000 | 
PTE_P
 | 
PTE_W
,

124 0x05a000 | 
PTE_P
 | 
PTE_W
,

125 0x05b000 | 
PTE_P
 | 
PTE_W
,

126 0x05c000 | 
PTE_P
 | 
PTE_W
,

127 0x05d000 | 
PTE_P
 | 
PTE_W
,

128 0x05e000 | 
PTE_P
 | 
PTE_W
,

129 0x05f000 | 
PTE_P
 | 
PTE_W
,

130 0x060000 | 
PTE_P
 | 
PTE_W
,

131 0x061000 | 
PTE_P
 | 
PTE_W
,

132 0x062000 | 
PTE_P
 | 
PTE_W
,

133 0x063000 | 
PTE_P
 | 
PTE_W
,

134 0x064000 | 
PTE_P
 | 
PTE_W
,

135 0x065000 | 
PTE_P
 | 
PTE_W
,

136 0x066000 | 
PTE_P
 | 
PTE_W
,

137 0x067000 | 
PTE_P
 | 
PTE_W
,

138 0x068000 | 
PTE_P
 | 
PTE_W
,

139 0x069000 | 
PTE_P
 | 
PTE_W
,

140 0x06a000 | 
PTE_P
 | 
PTE_W
,

141 0x06b000 | 
PTE_P
 | 
PTE_W
,

142 0x06c000 | 
PTE_P
 | 
PTE_W
,

143 0x06d000 | 
PTE_P
 | 
PTE_W
,

144 0x06e000 | 
PTE_P
 | 
PTE_W
,

145 0x06f000 | 
PTE_P
 | 
PTE_W
,

146 0x070000 | 
PTE_P
 | 
PTE_W
,

147 0x071000 | 
PTE_P
 | 
PTE_W
,

148 0x072000 | 
PTE_P
 | 
PTE_W
,

149 0x073000 | 
PTE_P
 | 
PTE_W
,

150 0x074000 | 
PTE_P
 | 
PTE_W
,

151 0x075000 | 
PTE_P
 | 
PTE_W
,

152 0x076000 | 
PTE_P
 | 
PTE_W
,

153 0x077000 | 
PTE_P
 | 
PTE_W
,

154 0x078000 | 
PTE_P
 | 
PTE_W
,

155 0x079000 | 
PTE_P
 | 
PTE_W
,

156 0x07a000 | 
PTE_P
 | 
PTE_W
,

157 0x07b000 | 
PTE_P
 | 
PTE_W
,

158 0x07c000 | 
PTE_P
 | 
PTE_W
,

159 0x07d000 | 
PTE_P
 | 
PTE_W
,

160 0x07e000 | 
PTE_P
 | 
PTE_W
,

161 0x07f000 | 
PTE_P
 | 
PTE_W
,

162 0x080000 | 
PTE_P
 | 
PTE_W
,

163 0x081000 | 
PTE_P
 | 
PTE_W
,

164 0x082000 | 
PTE_P
 | 
PTE_W
,

165 0x083000 | 
PTE_P
 | 
PTE_W
,

166 0x084000 | 
PTE_P
 | 
PTE_W
,

167 0x085000 | 
PTE_P
 | 
PTE_W
,

168 0x086000 | 
PTE_P
 | 
PTE_W
,

169 0x087000 | 
PTE_P
 | 
PTE_W
,

170 0x088000 | 
PTE_P
 | 
PTE_W
,

171 0x089000 | 
PTE_P
 | 
PTE_W
,

172 0x08a000 | 
PTE_P
 | 
PTE_W
,

173 0x08b000 | 
PTE_P
 | 
PTE_W
,

174 0x08c000 | 
PTE_P
 | 
PTE_W
,

175 0x08d000 | 
PTE_P
 | 
PTE_W
,

176 0x08e000 | 
PTE_P
 | 
PTE_W
,

177 0x08f000 | 
PTE_P
 | 
PTE_W
,

178 0x090000 | 
PTE_P
 | 
PTE_W
,

179 0x091000 | 
PTE_P
 | 
PTE_W
,

180 0x092000 | 
PTE_P
 | 
PTE_W
,

181 0x093000 | 
PTE_P
 | 
PTE_W
,

182 0x094000 | 
PTE_P
 | 
PTE_W
,

183 0x095000 | 
PTE_P
 | 
PTE_W
,

184 0x096000 | 
PTE_P
 | 
PTE_W
,

185 0x097000 | 
PTE_P
 | 
PTE_W
,

186 0x098000 | 
PTE_P
 | 
PTE_W
,

187 0x099000 | 
PTE_P
 | 
PTE_W
,

188 0x09a000 | 
PTE_P
 | 
PTE_W
,

189 0x09b000 | 
PTE_P
 | 
PTE_W
,

190 0x09c000 | 
PTE_P
 | 
PTE_W
,

191 0x09d000 | 
PTE_P
 | 
PTE_W
,

192 0x09e000 | 
PTE_P
 | 
PTE_W
,

193 0x09f000 | 
PTE_P
 | 
PTE_W
,

194 0x0a0000 | 
PTE_P
 | 
PTE_W
,

195 0x0a1000 | 
PTE_P
 | 
PTE_W
,

196 0x0a2000 | 
PTE_P
 | 
PTE_W
,

197 0x0a3000 | 
PTE_P
 | 
PTE_W
,

198 0x0a4000 | 
PTE_P
 | 
PTE_W
,

199 0x0a5000 | 
PTE_P
 | 
PTE_W
,

200 0x0a6000 | 
PTE_P
 | 
PTE_W
,

201 0x0a7000 | 
PTE_P
 | 
PTE_W
,

202 0x0a8000 | 
PTE_P
 | 
PTE_W
,

203 0x0a9000 | 
PTE_P
 | 
PTE_W
,

204 0x0Ø000 | 
PTE_P
 | 
PTE_W
,

205 0x0ab000 | 
PTE_P
 | 
PTE_W
,

206 0x0ac000 | 
PTE_P
 | 
PTE_W
,

207 0x0ad000 | 
PTE_P
 | 
PTE_W
,

208 0x0´000 | 
PTE_P
 | 
PTE_W
,

209 0x0af000 | 
PTE_P
 | 
PTE_W
,

210 0x0b0000 | 
PTE_P
 | 
PTE_W
,

211 0x0b1000 | 
PTE_P
 | 
PTE_W
,

212 0x0b2000 | 
PTE_P
 | 
PTE_W
,

213 0x0b3000 | 
PTE_P
 | 
PTE_W
,

214 0x0b4000 | 
PTE_P
 | 
PTE_W
,

215 0x0b5000 | 
PTE_P
 | 
PTE_W
,

216 0x0b6000 | 
PTE_P
 | 
PTE_W
,

217 0x0b7000 | 
PTE_P
 | 
PTE_W
,

218 0x0b8000 | 
PTE_P
 | 
PTE_W
,

219 0x0b9000 | 
PTE_P
 | 
PTE_W
,

220 0x0ba000 | 
PTE_P
 | 
PTE_W
,

221 0x0bb000 | 
PTE_P
 | 
PTE_W
,

222 0x0bc000 | 
PTE_P
 | 
PTE_W
,

223 0x0bd000 | 
PTE_P
 | 
PTE_W
,

224 0x0be000 | 
PTE_P
 | 
PTE_W
,

225 0x0bf000 | 
PTE_P
 | 
PTE_W
,

226 0x0c0000 | 
PTE_P
 | 
PTE_W
,

227 0x0c1000 | 
PTE_P
 | 
PTE_W
,

228 0x0c2000 | 
PTE_P
 | 
PTE_W
,

229 0x0c3000 | 
PTE_P
 | 
PTE_W
,

230 0x0c4000 | 
PTE_P
 | 
PTE_W
,

231 0x0c5000 | 
PTE_P
 | 
PTE_W
,

232 0x0c6000 | 
PTE_P
 | 
PTE_W
,

233 0x0c7000 | 
PTE_P
 | 
PTE_W
,

234 0x0c8000 | 
PTE_P
 | 
PTE_W
,

235 0x0c9000 | 
PTE_P
 | 
PTE_W
,

236 0x0ˇ000 | 
PTE_P
 | 
PTE_W
,

237 0x0cb000 | 
PTE_P
 | 
PTE_W
,

238 0x0cc000 | 
PTE_P
 | 
PTE_W
,

239 0x0cd000 | 
PTE_P
 | 
PTE_W
,

240 0x0˚000 | 
PTE_P
 | 
PTE_W
,

241 0x0cf000 | 
PTE_P
 | 
PTE_W
,

242 0x0d0000 | 
PTE_P
 | 
PTE_W
,

243 0x0d1000 | 
PTE_P
 | 
PTE_W
,

244 0x0d2000 | 
PTE_P
 | 
PTE_W
,

245 0x0d3000 | 
PTE_P
 | 
PTE_W
,

246 0x0d4000 | 
PTE_P
 | 
PTE_W
,

247 0x0d5000 | 
PTE_P
 | 
PTE_W
,

248 0x0d6000 | 
PTE_P
 | 
PTE_W
,

249 0x0d7000 | 
PTE_P
 | 
PTE_W
,

250 0x0d8000 | 
PTE_P
 | 
PTE_W
,

251 0x0d9000 | 
PTE_P
 | 
PTE_W
,

252 0x0da000 | 
PTE_P
 | 
PTE_W
,

253 0x0db000 | 
PTE_P
 | 
PTE_W
,

254 0x0dc000 | 
PTE_P
 | 
PTE_W
,

255 0x0dd000 | 
PTE_P
 | 
PTE_W
,

256 0x0de000 | 
PTE_P
 | 
PTE_W
,

257 0x0df000 | 
PTE_P
 | 
PTE_W
,

258 0x0e0000 | 
PTE_P
 | 
PTE_W
,

259 0x0e1000 | 
PTE_P
 | 
PTE_W
,

260 0x0e2000 | 
PTE_P
 | 
PTE_W
,

261 0x0e3000 | 
PTE_P
 | 
PTE_W
,

262 0x0e4000 | 
PTE_P
 | 
PTE_W
,

263 0x0e5000 | 
PTE_P
 | 
PTE_W
,

264 0x0e6000 | 
PTE_P
 | 
PTE_W
,

265 0x0e7000 | 
PTE_P
 | 
PTE_W
,

266 0x0e8000 | 
PTE_P
 | 
PTE_W
,

267 0x0e9000 | 
PTE_P
 | 
PTE_W
,

268 0x0ó000 | 
PTE_P
 | 
PTE_W
,

269 0x0eb000 | 
PTE_P
 | 
PTE_W
,

270 0x0ec000 | 
PTE_P
 | 
PTE_W
,

271 0x0ed000 | 
PTE_P
 | 
PTE_W
,

272 0x0ì000 | 
PTE_P
 | 
PTE_W
,

273 0x0ef000 | 
PTE_P
 | 
PTE_W
,

274 0x0f0000 | 
PTE_P
 | 
PTE_W
,

275 0x0f1000 | 
PTE_P
 | 
PTE_W
,

276 0x0f2000 | 
PTE_P
 | 
PTE_W
,

277 0x0f3000 | 
PTE_P
 | 
PTE_W
,

278 0x0f4000 | 
PTE_P
 | 
PTE_W
,

279 0x0f5000 | 
PTE_P
 | 
PTE_W
,

280 0x0f6000 | 
PTE_P
 | 
PTE_W
,

281 0x0f7000 | 
PTE_P
 | 
PTE_W
,

282 0x0f8000 | 
PTE_P
 | 
PTE_W
,

283 0x0f9000 | 
PTE_P
 | 
PTE_W
,

284 0x0Á000 | 
PTE_P
 | 
PTE_W
,

285 0x0fb000 | 
PTE_P
 | 
PTE_W
,

286 0x0fc000 | 
PTE_P
 | 
PTE_W
,

287 0x0fd000 | 
PTE_P
 | 
PTE_W
,

288 0x0„000 | 
PTE_P
 | 
PTE_W
,

289 0x0ff000 | 
PTE_P
 | 
PTE_W
,

290 0x100000 | 
PTE_P
 | 
PTE_W
,

291 0x101000 | 
PTE_P
 | 
PTE_W
,

292 0x102000 | 
PTE_P
 | 
PTE_W
,

293 0x103000 | 
PTE_P
 | 
PTE_W
,

294 0x104000 | 
PTE_P
 | 
PTE_W
,

295 0x105000 | 
PTE_P
 | 
PTE_W
,

296 0x106000 | 
PTE_P
 | 
PTE_W
,

297 0x107000 | 
PTE_P
 | 
PTE_W
,

298 0x108000 | 
PTE_P
 | 
PTE_W
,

299 0x109000 | 
PTE_P
 | 
PTE_W
,

300 0x10a000 | 
PTE_P
 | 
PTE_W
,

301 0x10b000 | 
PTE_P
 | 
PTE_W
,

302 0x10c000 | 
PTE_P
 | 
PTE_W
,

303 0x10d000 | 
PTE_P
 | 
PTE_W
,

304 0x10e000 | 
PTE_P
 | 
PTE_W
,

305 0x10f000 | 
PTE_P
 | 
PTE_W
,

306 0x110000 | 
PTE_P
 | 
PTE_W
,

307 0x111000 | 
PTE_P
 | 
PTE_W
,

308 0x112000 | 
PTE_P
 | 
PTE_W
,

309 0x113000 | 
PTE_P
 | 
PTE_W
,

310 0x114000 | 
PTE_P
 | 
PTE_W
,

311 0x115000 | 
PTE_P
 | 
PTE_W
,

312 0x116000 | 
PTE_P
 | 
PTE_W
,

313 0x117000 | 
PTE_P
 | 
PTE_W
,

314 0x118000 | 
PTE_P
 | 
PTE_W
,

315 0x119000 | 
PTE_P
 | 
PTE_W
,

316 0x11a000 | 
PTE_P
 | 
PTE_W
,

317 0x11b000 | 
PTE_P
 | 
PTE_W
,

318 0x11c000 | 
PTE_P
 | 
PTE_W
,

319 0x11d000 | 
PTE_P
 | 
PTE_W
,

320 0x11e000 | 
PTE_P
 | 
PTE_W
,

321 0x11f000 | 
PTE_P
 | 
PTE_W
,

322 0x120000 | 
PTE_P
 | 
PTE_W
,

323 0x121000 | 
PTE_P
 | 
PTE_W
,

324 0x122000 | 
PTE_P
 | 
PTE_W
,

325 0x123000 | 
PTE_P
 | 
PTE_W
,

326 0x124000 | 
PTE_P
 | 
PTE_W
,

327 0x125000 | 
PTE_P
 | 
PTE_W
,

328 0x126000 | 
PTE_P
 | 
PTE_W
,

329 0x127000 | 
PTE_P
 | 
PTE_W
,

330 0x128000 | 
PTE_P
 | 
PTE_W
,

331 0x129000 | 
PTE_P
 | 
PTE_W
,

332 0x12a000 | 
PTE_P
 | 
PTE_W
,

333 0x12b000 | 
PTE_P
 | 
PTE_W
,

334 0x12c000 | 
PTE_P
 | 
PTE_W
,

335 0x12d000 | 
PTE_P
 | 
PTE_W
,

336 0x12e000 | 
PTE_P
 | 
PTE_W
,

337 0x12f000 | 
PTE_P
 | 
PTE_W
,

338 0x130000 | 
PTE_P
 | 
PTE_W
,

339 0x131000 | 
PTE_P
 | 
PTE_W
,

340 0x132000 | 
PTE_P
 | 
PTE_W
,

341 0x133000 | 
PTE_P
 | 
PTE_W
,

342 0x134000 | 
PTE_P
 | 
PTE_W
,

343 0x135000 | 
PTE_P
 | 
PTE_W
,

344 0x136000 | 
PTE_P
 | 
PTE_W
,

345 0x137000 | 
PTE_P
 | 
PTE_W
,

346 0x138000 | 
PTE_P
 | 
PTE_W
,

347 0x139000 | 
PTE_P
 | 
PTE_W
,

348 0x13a000 | 
PTE_P
 | 
PTE_W
,

349 0x13b000 | 
PTE_P
 | 
PTE_W
,

350 0x13c000 | 
PTE_P
 | 
PTE_W
,

351 0x13d000 | 
PTE_P
 | 
PTE_W
,

352 0x13e000 | 
PTE_P
 | 
PTE_W
,

353 0x13f000 | 
PTE_P
 | 
PTE_W
,

354 0x140000 | 
PTE_P
 | 
PTE_W
,

355 0x141000 | 
PTE_P
 | 
PTE_W
,

356 0x142000 | 
PTE_P
 | 
PTE_W
,

357 0x143000 | 
PTE_P
 | 
PTE_W
,

358 0x144000 | 
PTE_P
 | 
PTE_W
,

359 0x145000 | 
PTE_P
 | 
PTE_W
,

360 0x146000 | 
PTE_P
 | 
PTE_W
,

361 0x147000 | 
PTE_P
 | 
PTE_W
,

362 0x148000 | 
PTE_P
 | 
PTE_W
,

363 0x149000 | 
PTE_P
 | 
PTE_W
,

364 0x14a000 | 
PTE_P
 | 
PTE_W
,

365 0x14b000 | 
PTE_P
 | 
PTE_W
,

366 0x14c000 | 
PTE_P
 | 
PTE_W
,

367 0x14d000 | 
PTE_P
 | 
PTE_W
,

368 0x14e000 | 
PTE_P
 | 
PTE_W
,

369 0x14f000 | 
PTE_P
 | 
PTE_W
,

370 0x150000 | 
PTE_P
 | 
PTE_W
,

371 0x151000 | 
PTE_P
 | 
PTE_W
,

372 0x152000 | 
PTE_P
 | 
PTE_W
,

373 0x153000 | 
PTE_P
 | 
PTE_W
,

374 0x154000 | 
PTE_P
 | 
PTE_W
,

375 0x155000 | 
PTE_P
 | 
PTE_W
,

376 0x156000 | 
PTE_P
 | 
PTE_W
,

377 0x157000 | 
PTE_P
 | 
PTE_W
,

378 0x158000 | 
PTE_P
 | 
PTE_W
,

379 0x159000 | 
PTE_P
 | 
PTE_W
,

380 0x15a000 | 
PTE_P
 | 
PTE_W
,

381 0x15b000 | 
PTE_P
 | 
PTE_W
,

382 0x15c000 | 
PTE_P
 | 
PTE_W
,

383 0x15d000 | 
PTE_P
 | 
PTE_W
,

384 0x15e000 | 
PTE_P
 | 
PTE_W
,

385 0x15f000 | 
PTE_P
 | 
PTE_W
,

386 0x160000 | 
PTE_P
 | 
PTE_W
,

387 0x161000 | 
PTE_P
 | 
PTE_W
,

388 0x162000 | 
PTE_P
 | 
PTE_W
,

389 0x163000 | 
PTE_P
 | 
PTE_W
,

390 0x164000 | 
PTE_P
 | 
PTE_W
,

391 0x165000 | 
PTE_P
 | 
PTE_W
,

392 0x166000 | 
PTE_P
 | 
PTE_W
,

393 0x167000 | 
PTE_P
 | 
PTE_W
,

394 0x168000 | 
PTE_P
 | 
PTE_W
,

395 0x169000 | 
PTE_P
 | 
PTE_W
,

396 0x16a000 | 
PTE_P
 | 
PTE_W
,

397 0x16b000 | 
PTE_P
 | 
PTE_W
,

398 0x16c000 | 
PTE_P
 | 
PTE_W
,

399 0x16d000 | 
PTE_P
 | 
PTE_W
,

400 0x16e000 | 
PTE_P
 | 
PTE_W
,

401 0x16f000 | 
PTE_P
 | 
PTE_W
,

402 0x170000 | 
PTE_P
 | 
PTE_W
,

403 0x171000 | 
PTE_P
 | 
PTE_W
,

404 0x172000 | 
PTE_P
 | 
PTE_W
,

405 0x173000 | 
PTE_P
 | 
PTE_W
,

406 0x174000 | 
PTE_P
 | 
PTE_W
,

407 0x175000 | 
PTE_P
 | 
PTE_W
,

408 0x176000 | 
PTE_P
 | 
PTE_W
,

409 0x177000 | 
PTE_P
 | 
PTE_W
,

410 0x178000 | 
PTE_P
 | 
PTE_W
,

411 0x179000 | 
PTE_P
 | 
PTE_W
,

412 0x17a000 | 
PTE_P
 | 
PTE_W
,

413 0x17b000 | 
PTE_P
 | 
PTE_W
,

414 0x17c000 | 
PTE_P
 | 
PTE_W
,

415 0x17d000 | 
PTE_P
 | 
PTE_W
,

416 0x17e000 | 
PTE_P
 | 
PTE_W
,

417 0x17f000 | 
PTE_P
 | 
PTE_W
,

418 0x180000 | 
PTE_P
 | 
PTE_W
,

419 0x181000 | 
PTE_P
 | 
PTE_W
,

420 0x182000 | 
PTE_P
 | 
PTE_W
,

421 0x183000 | 
PTE_P
 | 
PTE_W
,

422 0x184000 | 
PTE_P
 | 
PTE_W
,

423 0x185000 | 
PTE_P
 | 
PTE_W
,

424 0x186000 | 
PTE_P
 | 
PTE_W
,

425 0x187000 | 
PTE_P
 | 
PTE_W
,

426 0x188000 | 
PTE_P
 | 
PTE_W
,

427 0x189000 | 
PTE_P
 | 
PTE_W
,

428 0x18a000 | 
PTE_P
 | 
PTE_W
,

429 0x18b000 | 
PTE_P
 | 
PTE_W
,

430 0x18c000 | 
PTE_P
 | 
PTE_W
,

431 0x18d000 | 
PTE_P
 | 
PTE_W
,

432 0x18e000 | 
PTE_P
 | 
PTE_W
,

433 0x18f000 | 
PTE_P
 | 
PTE_W
,

434 0x190000 | 
PTE_P
 | 
PTE_W
,

435 0x191000 | 
PTE_P
 | 
PTE_W
,

436 0x192000 | 
PTE_P
 | 
PTE_W
,

437 0x193000 | 
PTE_P
 | 
PTE_W
,

438 0x194000 | 
PTE_P
 | 
PTE_W
,

439 0x195000 | 
PTE_P
 | 
PTE_W
,

440 0x196000 | 
PTE_P
 | 
PTE_W
,

441 0x197000 | 
PTE_P
 | 
PTE_W
,

442 0x198000 | 
PTE_P
 | 
PTE_W
,

443 0x199000 | 
PTE_P
 | 
PTE_W
,

444 0x19a000 | 
PTE_P
 | 
PTE_W
,

445 0x19b000 | 
PTE_P
 | 
PTE_W
,

446 0x19c000 | 
PTE_P
 | 
PTE_W
,

447 0x19d000 | 
PTE_P
 | 
PTE_W
,

448 0x19e000 | 
PTE_P
 | 
PTE_W
,

449 0x19f000 | 
PTE_P
 | 
PTE_W
,

450 0x1a0000 | 
PTE_P
 | 
PTE_W
,

451 0x1a1000 | 
PTE_P
 | 
PTE_W
,

452 0x1a2000 | 
PTE_P
 | 
PTE_W
,

453 0x1a3000 | 
PTE_P
 | 
PTE_W
,

454 0x1a4000 | 
PTE_P
 | 
PTE_W
,

455 0x1a5000 | 
PTE_P
 | 
PTE_W
,

456 0x1a6000 | 
PTE_P
 | 
PTE_W
,

457 0x1a7000 | 
PTE_P
 | 
PTE_W
,

458 0x1a8000 | 
PTE_P
 | 
PTE_W
,

459 0x1a9000 | 
PTE_P
 | 
PTE_W
,

460 0x1Ø000 | 
PTE_P
 | 
PTE_W
,

461 0x1ab000 | 
PTE_P
 | 
PTE_W
,

462 0x1ac000 | 
PTE_P
 | 
PTE_W
,

463 0x1ad000 | 
PTE_P
 | 
PTE_W
,

464 0x1´000 | 
PTE_P
 | 
PTE_W
,

465 0x1af000 | 
PTE_P
 | 
PTE_W
,

466 0x1b0000 | 
PTE_P
 | 
PTE_W
,

467 0x1b1000 | 
PTE_P
 | 
PTE_W
,

468 0x1b2000 | 
PTE_P
 | 
PTE_W
,

469 0x1b3000 | 
PTE_P
 | 
PTE_W
,

470 0x1b4000 | 
PTE_P
 | 
PTE_W
,

471 0x1b5000 | 
PTE_P
 | 
PTE_W
,

472 0x1b6000 | 
PTE_P
 | 
PTE_W
,

473 0x1b7000 | 
PTE_P
 | 
PTE_W
,

474 0x1b8000 | 
PTE_P
 | 
PTE_W
,

475 0x1b9000 | 
PTE_P
 | 
PTE_W
,

476 0x1ba000 | 
PTE_P
 | 
PTE_W
,

477 0x1bb000 | 
PTE_P
 | 
PTE_W
,

478 0x1bc000 | 
PTE_P
 | 
PTE_W
,

479 0x1bd000 | 
PTE_P
 | 
PTE_W
,

480 0x1be000 | 
PTE_P
 | 
PTE_W
,

481 0x1bf000 | 
PTE_P
 | 
PTE_W
,

482 0x1c0000 | 
PTE_P
 | 
PTE_W
,

483 0x1c1000 | 
PTE_P
 | 
PTE_W
,

484 0x1c2000 | 
PTE_P
 | 
PTE_W
,

485 0x1c3000 | 
PTE_P
 | 
PTE_W
,

486 0x1c4000 | 
PTE_P
 | 
PTE_W
,

487 0x1c5000 | 
PTE_P
 | 
PTE_W
,

488 0x1c6000 | 
PTE_P
 | 
PTE_W
,

489 0x1c7000 | 
PTE_P
 | 
PTE_W
,

490 0x1c8000 | 
PTE_P
 | 
PTE_W
,

491 0x1c9000 | 
PTE_P
 | 
PTE_W
,

492 0x1ˇ000 | 
PTE_P
 | 
PTE_W
,

493 0x1cb000 | 
PTE_P
 | 
PTE_W
,

494 0x1cc000 | 
PTE_P
 | 
PTE_W
,

495 0x1cd000 | 
PTE_P
 | 
PTE_W
,

496 0x1˚000 | 
PTE_P
 | 
PTE_W
,

497 0x1cf000 | 
PTE_P
 | 
PTE_W
,

498 0x1d0000 | 
PTE_P
 | 
PTE_W
,

499 0x1d1000 | 
PTE_P
 | 
PTE_W
,

500 0x1d2000 | 
PTE_P
 | 
PTE_W
,

501 0x1d3000 | 
PTE_P
 | 
PTE_W
,

502 0x1d4000 | 
PTE_P
 | 
PTE_W
,

503 0x1d5000 | 
PTE_P
 | 
PTE_W
,

504 0x1d6000 | 
PTE_P
 | 
PTE_W
,

505 0x1d7000 | 
PTE_P
 | 
PTE_W
,

506 0x1d8000 | 
PTE_P
 | 
PTE_W
,

507 0x1d9000 | 
PTE_P
 | 
PTE_W
,

508 0x1da000 | 
PTE_P
 | 
PTE_W
,

509 0x1db000 | 
PTE_P
 | 
PTE_W
,

510 0x1dc000 | 
PTE_P
 | 
PTE_W
,

511 0x1dd000 | 
PTE_P
 | 
PTE_W
,

512 0x1de000 | 
PTE_P
 | 
PTE_W
,

513 0x1df000 | 
PTE_P
 | 
PTE_W
,

514 0x1e0000 | 
PTE_P
 | 
PTE_W
,

515 0x1e1000 | 
PTE_P
 | 
PTE_W
,

516 0x1e2000 | 
PTE_P
 | 
PTE_W
,

517 0x1e3000 | 
PTE_P
 | 
PTE_W
,

518 0x1e4000 | 
PTE_P
 | 
PTE_W
,

519 0x1e5000 | 
PTE_P
 | 
PTE_W
,

520 0x1e6000 | 
PTE_P
 | 
PTE_W
,

521 0x1e7000 | 
PTE_P
 | 
PTE_W
,

522 0x1e8000 | 
PTE_P
 | 
PTE_W
,

523 0x1e9000 | 
PTE_P
 | 
PTE_W
,

524 0x1ó000 | 
PTE_P
 | 
PTE_W
,

525 0x1eb000 | 
PTE_P
 | 
PTE_W
,

526 0x1ec000 | 
PTE_P
 | 
PTE_W
,

527 0x1ed000 | 
PTE_P
 | 
PTE_W
,

528 0x1ì000 | 
PTE_P
 | 
PTE_W
,

529 0x1ef000 | 
PTE_P
 | 
PTE_W
,

530 0x1f0000 | 
PTE_P
 | 
PTE_W
,

531 0x1f1000 | 
PTE_P
 | 
PTE_W
,

532 0x1f2000 | 
PTE_P
 | 
PTE_W
,

533 0x1f3000 | 
PTE_P
 | 
PTE_W
,

534 0x1f4000 | 
PTE_P
 | 
PTE_W
,

535 0x1f5000 | 
PTE_P
 | 
PTE_W
,

536 0x1f6000 | 
PTE_P
 | 
PTE_W
,

537 0x1f7000 | 
PTE_P
 | 
PTE_W
,

538 0x1f8000 | 
PTE_P
 | 
PTE_W
,

539 0x1f9000 | 
PTE_P
 | 
PTE_W
,

540 0x1Á000 | 
PTE_P
 | 
PTE_W
,

541 0x1fb000 | 
PTE_P
 | 
PTE_W
,

542 0x1fc000 | 
PTE_P
 | 
PTE_W
,

543 0x1fd000 | 
PTE_P
 | 
PTE_W
,

544 0x1„000 | 
PTE_P
 | 
PTE_W
,

545 0x1ff000 | 
PTE_P
 | 
PTE_W
,

546 0x200000 | 
PTE_P
 | 
PTE_W
,

547 0x201000 | 
PTE_P
 | 
PTE_W
,

548 0x202000 | 
PTE_P
 | 
PTE_W
,

549 0x203000 | 
PTE_P
 | 
PTE_W
,

550 0x204000 | 
PTE_P
 | 
PTE_W
,

551 0x205000 | 
PTE_P
 | 
PTE_W
,

552 0x206000 | 
PTE_P
 | 
PTE_W
,

553 0x207000 | 
PTE_P
 | 
PTE_W
,

554 0x208000 | 
PTE_P
 | 
PTE_W
,

555 0x209000 | 
PTE_P
 | 
PTE_W
,

556 0x20a000 | 
PTE_P
 | 
PTE_W
,

557 0x20b000 | 
PTE_P
 | 
PTE_W
,

558 0x20c000 | 
PTE_P
 | 
PTE_W
,

559 0x20d000 | 
PTE_P
 | 
PTE_W
,

560 0x20e000 | 
PTE_P
 | 
PTE_W
,

561 0x20f000 | 
PTE_P
 | 
PTE_W
,

562 0x210000 | 
PTE_P
 | 
PTE_W
,

563 0x211000 | 
PTE_P
 | 
PTE_W
,

564 0x212000 | 
PTE_P
 | 
PTE_W
,

565 0x213000 | 
PTE_P
 | 
PTE_W
,

566 0x214000 | 
PTE_P
 | 
PTE_W
,

567 0x215000 | 
PTE_P
 | 
PTE_W
,

568 0x216000 | 
PTE_P
 | 
PTE_W
,

569 0x217000 | 
PTE_P
 | 
PTE_W
,

570 0x218000 | 
PTE_P
 | 
PTE_W
,

571 0x219000 | 
PTE_P
 | 
PTE_W
,

572 0x21a000 | 
PTE_P
 | 
PTE_W
,

573 0x21b000 | 
PTE_P
 | 
PTE_W
,

574 0x21c000 | 
PTE_P
 | 
PTE_W
,

575 0x21d000 | 
PTE_P
 | 
PTE_W
,

576 0x21e000 | 
PTE_P
 | 
PTE_W
,

577 0x21f000 | 
PTE_P
 | 
PTE_W
,

578 0x220000 | 
PTE_P
 | 
PTE_W
,

579 0x221000 | 
PTE_P
 | 
PTE_W
,

580 0x222000 | 
PTE_P
 | 
PTE_W
,

581 0x223000 | 
PTE_P
 | 
PTE_W
,

582 0x224000 | 
PTE_P
 | 
PTE_W
,

583 0x225000 | 
PTE_P
 | 
PTE_W
,

584 0x226000 | 
PTE_P
 | 
PTE_W
,

585 0x227000 | 
PTE_P
 | 
PTE_W
,

586 0x228000 | 
PTE_P
 | 
PTE_W
,

587 0x229000 | 
PTE_P
 | 
PTE_W
,

588 0x22a000 | 
PTE_P
 | 
PTE_W
,

589 0x22b000 | 
PTE_P
 | 
PTE_W
,

590 0x22c000 | 
PTE_P
 | 
PTE_W
,

591 0x22d000 | 
PTE_P
 | 
PTE_W
,

592 0x22e000 | 
PTE_P
 | 
PTE_W
,

593 0x22f000 | 
PTE_P
 | 
PTE_W
,

594 0x230000 | 
PTE_P
 | 
PTE_W
,

595 0x231000 | 
PTE_P
 | 
PTE_W
,

596 0x232000 | 
PTE_P
 | 
PTE_W
,

597 0x233000 | 
PTE_P
 | 
PTE_W
,

598 0x234000 | 
PTE_P
 | 
PTE_W
,

599 0x235000 | 
PTE_P
 | 
PTE_W
,

600 0x236000 | 
PTE_P
 | 
PTE_W
,

601 0x237000 | 
PTE_P
 | 
PTE_W
,

602 0x238000 | 
PTE_P
 | 
PTE_W
,

603 0x239000 | 
PTE_P
 | 
PTE_W
,

604 0x23a000 | 
PTE_P
 | 
PTE_W
,

605 0x23b000 | 
PTE_P
 | 
PTE_W
,

606 0x23c000 | 
PTE_P
 | 
PTE_W
,

607 0x23d000 | 
PTE_P
 | 
PTE_W
,

608 0x23e000 | 
PTE_P
 | 
PTE_W
,

609 0x23f000 | 
PTE_P
 | 
PTE_W
,

610 0x240000 | 
PTE_P
 | 
PTE_W
,

611 0x241000 | 
PTE_P
 | 
PTE_W
,

612 0x242000 | 
PTE_P
 | 
PTE_W
,

613 0x243000 | 
PTE_P
 | 
PTE_W
,

614 0x244000 | 
PTE_P
 | 
PTE_W
,

615 0x245000 | 
PTE_P
 | 
PTE_W
,

616 0x246000 | 
PTE_P
 | 
PTE_W
,

617 0x247000 | 
PTE_P
 | 
PTE_W
,

618 0x248000 | 
PTE_P
 | 
PTE_W
,

619 0x249000 | 
PTE_P
 | 
PTE_W
,

620 0x24a000 | 
PTE_P
 | 
PTE_W
,

621 0x24b000 | 
PTE_P
 | 
PTE_W
,

622 0x24c000 | 
PTE_P
 | 
PTE_W
,

623 0x24d000 | 
PTE_P
 | 
PTE_W
,

624 0x24e000 | 
PTE_P
 | 
PTE_W
,

625 0x24f000 | 
PTE_P
 | 
PTE_W
,

626 0x250000 | 
PTE_P
 | 
PTE_W
,

627 0x251000 | 
PTE_P
 | 
PTE_W
,

628 0x252000 | 
PTE_P
 | 
PTE_W
,

629 0x253000 | 
PTE_P
 | 
PTE_W
,

630 0x254000 | 
PTE_P
 | 
PTE_W
,

631 0x255000 | 
PTE_P
 | 
PTE_W
,

632 0x256000 | 
PTE_P
 | 
PTE_W
,

633 0x257000 | 
PTE_P
 | 
PTE_W
,

634 0x258000 | 
PTE_P
 | 
PTE_W
,

635 0x259000 | 
PTE_P
 | 
PTE_W
,

636 0x25a000 | 
PTE_P
 | 
PTE_W
,

637 0x25b000 | 
PTE_P
 | 
PTE_W
,

638 0x25c000 | 
PTE_P
 | 
PTE_W
,

639 0x25d000 | 
PTE_P
 | 
PTE_W
,

640 0x25e000 | 
PTE_P
 | 
PTE_W
,

641 0x25f000 | 
PTE_P
 | 
PTE_W
,

642 0x260000 | 
PTE_P
 | 
PTE_W
,

643 0x261000 | 
PTE_P
 | 
PTE_W
,

644 0x262000 | 
PTE_P
 | 
PTE_W
,

645 0x263000 | 
PTE_P
 | 
PTE_W
,

646 0x264000 | 
PTE_P
 | 
PTE_W
,

647 0x265000 | 
PTE_P
 | 
PTE_W
,

648 0x266000 | 
PTE_P
 | 
PTE_W
,

649 0x267000 | 
PTE_P
 | 
PTE_W
,

650 0x268000 | 
PTE_P
 | 
PTE_W
,

651 0x269000 | 
PTE_P
 | 
PTE_W
,

652 0x26a000 | 
PTE_P
 | 
PTE_W
,

653 0x26b000 | 
PTE_P
 | 
PTE_W
,

654 0x26c000 | 
PTE_P
 | 
PTE_W
,

655 0x26d000 | 
PTE_P
 | 
PTE_W
,

656 0x26e000 | 
PTE_P
 | 
PTE_W
,

657 0x26f000 | 
PTE_P
 | 
PTE_W
,

658 0x270000 | 
PTE_P
 | 
PTE_W
,

659 0x271000 | 
PTE_P
 | 
PTE_W
,

660 0x272000 | 
PTE_P
 | 
PTE_W
,

661 0x273000 | 
PTE_P
 | 
PTE_W
,

662 0x274000 | 
PTE_P
 | 
PTE_W
,

663 0x275000 | 
PTE_P
 | 
PTE_W
,

664 0x276000 | 
PTE_P
 | 
PTE_W
,

665 0x277000 | 
PTE_P
 | 
PTE_W
,

666 0x278000 | 
PTE_P
 | 
PTE_W
,

667 0x279000 | 
PTE_P
 | 
PTE_W
,

668 0x27a000 | 
PTE_P
 | 
PTE_W
,

669 0x27b000 | 
PTE_P
 | 
PTE_W
,

670 0x27c000 | 
PTE_P
 | 
PTE_W
,

671 0x27d000 | 
PTE_P
 | 
PTE_W
,

672 0x27e000 | 
PTE_P
 | 
PTE_W
,

673 0x27f000 | 
PTE_P
 | 
PTE_W
,

674 0x280000 | 
PTE_P
 | 
PTE_W
,

675 0x281000 | 
PTE_P
 | 
PTE_W
,

676 0x282000 | 
PTE_P
 | 
PTE_W
,

677 0x283000 | 
PTE_P
 | 
PTE_W
,

678 0x284000 | 
PTE_P
 | 
PTE_W
,

679 0x285000 | 
PTE_P
 | 
PTE_W
,

680 0x286000 | 
PTE_P
 | 
PTE_W
,

681 0x287000 | 
PTE_P
 | 
PTE_W
,

682 0x288000 | 
PTE_P
 | 
PTE_W
,

683 0x289000 | 
PTE_P
 | 
PTE_W
,

684 0x28a000 | 
PTE_P
 | 
PTE_W
,

685 0x28b000 | 
PTE_P
 | 
PTE_W
,

686 0x28c000 | 
PTE_P
 | 
PTE_W
,

687 0x28d000 | 
PTE_P
 | 
PTE_W
,

688 0x28e000 | 
PTE_P
 | 
PTE_W
,

689 0x28f000 | 
PTE_P
 | 
PTE_W
,

690 0x290000 | 
PTE_P
 | 
PTE_W
,

691 0x291000 | 
PTE_P
 | 
PTE_W
,

692 0x292000 | 
PTE_P
 | 
PTE_W
,

693 0x293000 | 
PTE_P
 | 
PTE_W
,

694 0x294000 | 
PTE_P
 | 
PTE_W
,

695 0x295000 | 
PTE_P
 | 
PTE_W
,

696 0x296000 | 
PTE_P
 | 
PTE_W
,

697 0x297000 | 
PTE_P
 | 
PTE_W
,

698 0x298000 | 
PTE_P
 | 
PTE_W
,

699 0x299000 | 
PTE_P
 | 
PTE_W
,

700 0x29a000 | 
PTE_P
 | 
PTE_W
,

701 0x29b000 | 
PTE_P
 | 
PTE_W
,

702 0x29c000 | 
PTE_P
 | 
PTE_W
,

703 0x29d000 | 
PTE_P
 | 
PTE_W
,

704 0x29e000 | 
PTE_P
 | 
PTE_W
,

705 0x29f000 | 
PTE_P
 | 
PTE_W
,

706 0x2a0000 | 
PTE_P
 | 
PTE_W
,

707 0x2a1000 | 
PTE_P
 | 
PTE_W
,

708 0x2a2000 | 
PTE_P
 | 
PTE_W
,

709 0x2a3000 | 
PTE_P
 | 
PTE_W
,

710 0x2a4000 | 
PTE_P
 | 
PTE_W
,

711 0x2a5000 | 
PTE_P
 | 
PTE_W
,

712 0x2a6000 | 
PTE_P
 | 
PTE_W
,

713 0x2a7000 | 
PTE_P
 | 
PTE_W
,

714 0x2a8000 | 
PTE_P
 | 
PTE_W
,

715 0x2a9000 | 
PTE_P
 | 
PTE_W
,

716 0x2Ø000 | 
PTE_P
 | 
PTE_W
,

717 0x2ab000 | 
PTE_P
 | 
PTE_W
,

718 0x2ac000 | 
PTE_P
 | 
PTE_W
,

719 0x2ad000 | 
PTE_P
 | 
PTE_W
,

720 0x2´000 | 
PTE_P
 | 
PTE_W
,

721 0x2af000 | 
PTE_P
 | 
PTE_W
,

722 0x2b0000 | 
PTE_P
 | 
PTE_W
,

723 0x2b1000 | 
PTE_P
 | 
PTE_W
,

724 0x2b2000 | 
PTE_P
 | 
PTE_W
,

725 0x2b3000 | 
PTE_P
 | 
PTE_W
,

726 0x2b4000 | 
PTE_P
 | 
PTE_W
,

727 0x2b5000 | 
PTE_P
 | 
PTE_W
,

728 0x2b6000 | 
PTE_P
 | 
PTE_W
,

729 0x2b7000 | 
PTE_P
 | 
PTE_W
,

730 0x2b8000 | 
PTE_P
 | 
PTE_W
,

731 0x2b9000 | 
PTE_P
 | 
PTE_W
,

732 0x2ba000 | 
PTE_P
 | 
PTE_W
,

733 0x2bb000 | 
PTE_P
 | 
PTE_W
,

734 0x2bc000 | 
PTE_P
 | 
PTE_W
,

735 0x2bd000 | 
PTE_P
 | 
PTE_W
,

736 0x2be000 | 
PTE_P
 | 
PTE_W
,

737 0x2bf000 | 
PTE_P
 | 
PTE_W
,

738 0x2c0000 | 
PTE_P
 | 
PTE_W
,

739 0x2c1000 | 
PTE_P
 | 
PTE_W
,

740 0x2c2000 | 
PTE_P
 | 
PTE_W
,

741 0x2c3000 | 
PTE_P
 | 
PTE_W
,

742 0x2c4000 | 
PTE_P
 | 
PTE_W
,

743 0x2c5000 | 
PTE_P
 | 
PTE_W
,

744 0x2c6000 | 
PTE_P
 | 
PTE_W
,

745 0x2c7000 | 
PTE_P
 | 
PTE_W
,

746 0x2c8000 | 
PTE_P
 | 
PTE_W
,

747 0x2c9000 | 
PTE_P
 | 
PTE_W
,

748 0x2ˇ000 | 
PTE_P
 | 
PTE_W
,

749 0x2cb000 | 
PTE_P
 | 
PTE_W
,

750 0x2cc000 | 
PTE_P
 | 
PTE_W
,

751 0x2cd000 | 
PTE_P
 | 
PTE_W
,

752 0x2˚000 | 
PTE_P
 | 
PTE_W
,

753 0x2cf000 | 
PTE_P
 | 
PTE_W
,

754 0x2d0000 | 
PTE_P
 | 
PTE_W
,

755 0x2d1000 | 
PTE_P
 | 
PTE_W
,

756 0x2d2000 | 
PTE_P
 | 
PTE_W
,

757 0x2d3000 | 
PTE_P
 | 
PTE_W
,

758 0x2d4000 | 
PTE_P
 | 
PTE_W
,

759 0x2d5000 | 
PTE_P
 | 
PTE_W
,

760 0x2d6000 | 
PTE_P
 | 
PTE_W
,

761 0x2d7000 | 
PTE_P
 | 
PTE_W
,

762 0x2d8000 | 
PTE_P
 | 
PTE_W
,

763 0x2d9000 | 
PTE_P
 | 
PTE_W
,

764 0x2da000 | 
PTE_P
 | 
PTE_W
,

765 0x2db000 | 
PTE_P
 | 
PTE_W
,

766 0x2dc000 | 
PTE_P
 | 
PTE_W
,

767 0x2dd000 | 
PTE_P
 | 
PTE_W
,

768 0x2de000 | 
PTE_P
 | 
PTE_W
,

769 0x2df000 | 
PTE_P
 | 
PTE_W
,

770 0x2e0000 | 
PTE_P
 | 
PTE_W
,

771 0x2e1000 | 
PTE_P
 | 
PTE_W
,

772 0x2e2000 | 
PTE_P
 | 
PTE_W
,

773 0x2e3000 | 
PTE_P
 | 
PTE_W
,

774 0x2e4000 | 
PTE_P
 | 
PTE_W
,

775 0x2e5000 | 
PTE_P
 | 
PTE_W
,

776 0x2e6000 | 
PTE_P
 | 
PTE_W
,

777 0x2e7000 | 
PTE_P
 | 
PTE_W
,

778 0x2e8000 | 
PTE_P
 | 
PTE_W
,

779 0x2e9000 | 
PTE_P
 | 
PTE_W
,

780 0x2ó000 | 
PTE_P
 | 
PTE_W
,

781 0x2eb000 | 
PTE_P
 | 
PTE_W
,

782 0x2ec000 | 
PTE_P
 | 
PTE_W
,

783 0x2ed000 | 
PTE_P
 | 
PTE_W
,

784 0x2ì000 | 
PTE_P
 | 
PTE_W
,

785 0x2ef000 | 
PTE_P
 | 
PTE_W
,

786 0x2f0000 | 
PTE_P
 | 
PTE_W
,

787 0x2f1000 | 
PTE_P
 | 
PTE_W
,

788 0x2f2000 | 
PTE_P
 | 
PTE_W
,

789 0x2f3000 | 
PTE_P
 | 
PTE_W
,

790 0x2f4000 | 
PTE_P
 | 
PTE_W
,

791 0x2f5000 | 
PTE_P
 | 
PTE_W
,

792 0x2f6000 | 
PTE_P
 | 
PTE_W
,

793 0x2f7000 | 
PTE_P
 | 
PTE_W
,

794 0x2f8000 | 
PTE_P
 | 
PTE_W
,

795 0x2f9000 | 
PTE_P
 | 
PTE_W
,

796 0x2Á000 | 
PTE_P
 | 
PTE_W
,

797 0x2fb000 | 
PTE_P
 | 
PTE_W
,

798 0x2fc000 | 
PTE_P
 | 
PTE_W
,

799 0x2fd000 | 
PTE_P
 | 
PTE_W
,

800 0x2„000 | 
PTE_P
 | 
PTE_W
,

801 0x2ff000 | 
PTE_P
 | 
PTE_W
,

802 0x300000 | 
PTE_P
 | 
PTE_W
,

803 0x301000 | 
PTE_P
 | 
PTE_W
,

804 0x302000 | 
PTE_P
 | 
PTE_W
,

805 0x303000 | 
PTE_P
 | 
PTE_W
,

806 0x304000 | 
PTE_P
 | 
PTE_W
,

807 0x305000 | 
PTE_P
 | 
PTE_W
,

808 0x306000 | 
PTE_P
 | 
PTE_W
,

809 0x307000 | 
PTE_P
 | 
PTE_W
,

810 0x308000 | 
PTE_P
 | 
PTE_W
,

811 0x309000 | 
PTE_P
 | 
PTE_W
,

812 0x30a000 | 
PTE_P
 | 
PTE_W
,

813 0x30b000 | 
PTE_P
 | 
PTE_W
,

814 0x30c000 | 
PTE_P
 | 
PTE_W
,

815 0x30d000 | 
PTE_P
 | 
PTE_W
,

816 0x30e000 | 
PTE_P
 | 
PTE_W
,

817 0x30f000 | 
PTE_P
 | 
PTE_W
,

818 0x310000 | 
PTE_P
 | 
PTE_W
,

819 0x311000 | 
PTE_P
 | 
PTE_W
,

820 0x312000 | 
PTE_P
 | 
PTE_W
,

821 0x313000 | 
PTE_P
 | 
PTE_W
,

822 0x314000 | 
PTE_P
 | 
PTE_W
,

823 0x315000 | 
PTE_P
 | 
PTE_W
,

824 0x316000 | 
PTE_P
 | 
PTE_W
,

825 0x317000 | 
PTE_P
 | 
PTE_W
,

826 0x318000 | 
PTE_P
 | 
PTE_W
,

827 0x319000 | 
PTE_P
 | 
PTE_W
,

828 0x31a000 | 
PTE_P
 | 
PTE_W
,

829 0x31b000 | 
PTE_P
 | 
PTE_W
,

830 0x31c000 | 
PTE_P
 | 
PTE_W
,

831 0x31d000 | 
PTE_P
 | 
PTE_W
,

832 0x31e000 | 
PTE_P
 | 
PTE_W
,

833 0x31f000 | 
PTE_P
 | 
PTE_W
,

834 0x320000 | 
PTE_P
 | 
PTE_W
,

835 0x321000 | 
PTE_P
 | 
PTE_W
,

836 0x322000 | 
PTE_P
 | 
PTE_W
,

837 0x323000 | 
PTE_P
 | 
PTE_W
,

838 0x324000 | 
PTE_P
 | 
PTE_W
,

839 0x325000 | 
PTE_P
 | 
PTE_W
,

840 0x326000 | 
PTE_P
 | 
PTE_W
,

841 0x327000 | 
PTE_P
 | 
PTE_W
,

842 0x328000 | 
PTE_P
 | 
PTE_W
,

843 0x329000 | 
PTE_P
 | 
PTE_W
,

844 0x32a000 | 
PTE_P
 | 
PTE_W
,

845 0x32b000 | 
PTE_P
 | 
PTE_W
,

846 0x32c000 | 
PTE_P
 | 
PTE_W
,

847 0x32d000 | 
PTE_P
 | 
PTE_W
,

848 0x32e000 | 
PTE_P
 | 
PTE_W
,

849 0x32f000 | 
PTE_P
 | 
PTE_W
,

850 0x330000 | 
PTE_P
 | 
PTE_W
,

851 0x331000 | 
PTE_P
 | 
PTE_W
,

852 0x332000 | 
PTE_P
 | 
PTE_W
,

853 0x333000 | 
PTE_P
 | 
PTE_W
,

854 0x334000 | 
PTE_P
 | 
PTE_W
,

855 0x335000 | 
PTE_P
 | 
PTE_W
,

856 0x336000 | 
PTE_P
 | 
PTE_W
,

857 0x337000 | 
PTE_P
 | 
PTE_W
,

858 0x338000 | 
PTE_P
 | 
PTE_W
,

859 0x339000 | 
PTE_P
 | 
PTE_W
,

860 0x33a000 | 
PTE_P
 | 
PTE_W
,

861 0x33b000 | 
PTE_P
 | 
PTE_W
,

862 0x33c000 | 
PTE_P
 | 
PTE_W
,

863 0x33d000 | 
PTE_P
 | 
PTE_W
,

864 0x33e000 | 
PTE_P
 | 
PTE_W
,

865 0x33f000 | 
PTE_P
 | 
PTE_W
,

866 0x340000 | 
PTE_P
 | 
PTE_W
,

867 0x341000 | 
PTE_P
 | 
PTE_W
,

868 0x342000 | 
PTE_P
 | 
PTE_W
,

869 0x343000 | 
PTE_P
 | 
PTE_W
,

870 0x344000 | 
PTE_P
 | 
PTE_W
,

871 0x345000 | 
PTE_P
 | 
PTE_W
,

872 0x346000 | 
PTE_P
 | 
PTE_W
,

873 0x347000 | 
PTE_P
 | 
PTE_W
,

874 0x348000 | 
PTE_P
 | 
PTE_W
,

875 0x349000 | 
PTE_P
 | 
PTE_W
,

876 0x34a000 | 
PTE_P
 | 
PTE_W
,

877 0x34b000 | 
PTE_P
 | 
PTE_W
,

878 0x34c000 | 
PTE_P
 | 
PTE_W
,

879 0x34d000 | 
PTE_P
 | 
PTE_W
,

880 0x34e000 | 
PTE_P
 | 
PTE_W
,

881 0x34f000 | 
PTE_P
 | 
PTE_W
,

882 0x350000 | 
PTE_P
 | 
PTE_W
,

883 0x351000 | 
PTE_P
 | 
PTE_W
,

884 0x352000 | 
PTE_P
 | 
PTE_W
,

885 0x353000 | 
PTE_P
 | 
PTE_W
,

886 0x354000 | 
PTE_P
 | 
PTE_W
,

887 0x355000 | 
PTE_P
 | 
PTE_W
,

888 0x356000 | 
PTE_P
 | 
PTE_W
,

889 0x357000 | 
PTE_P
 | 
PTE_W
,

890 0x358000 | 
PTE_P
 | 
PTE_W
,

891 0x359000 | 
PTE_P
 | 
PTE_W
,

892 0x35a000 | 
PTE_P
 | 
PTE_W
,

893 0x35b000 | 
PTE_P
 | 
PTE_W
,

894 0x35c000 | 
PTE_P
 | 
PTE_W
,

895 0x35d000 | 
PTE_P
 | 
PTE_W
,

896 0x35e000 | 
PTE_P
 | 
PTE_W
,

897 0x35f000 | 
PTE_P
 | 
PTE_W
,

898 0x360000 | 
PTE_P
 | 
PTE_W
,

899 0x361000 | 
PTE_P
 | 
PTE_W
,

900 0x362000 | 
PTE_P
 | 
PTE_W
,

901 0x363000 | 
PTE_P
 | 
PTE_W
,

902 0x364000 | 
PTE_P
 | 
PTE_W
,

903 0x365000 | 
PTE_P
 | 
PTE_W
,

904 0x366000 | 
PTE_P
 | 
PTE_W
,

905 0x367000 | 
PTE_P
 | 
PTE_W
,

906 0x368000 | 
PTE_P
 | 
PTE_W
,

907 0x369000 | 
PTE_P
 | 
PTE_W
,

908 0x36a000 | 
PTE_P
 | 
PTE_W
,

909 0x36b000 | 
PTE_P
 | 
PTE_W
,

910 0x36c000 | 
PTE_P
 | 
PTE_W
,

911 0x36d000 | 
PTE_P
 | 
PTE_W
,

912 0x36e000 | 
PTE_P
 | 
PTE_W
,

913 0x36f000 | 
PTE_P
 | 
PTE_W
,

914 0x370000 | 
PTE_P
 | 
PTE_W
,

915 0x371000 | 
PTE_P
 | 
PTE_W
,

916 0x372000 | 
PTE_P
 | 
PTE_W
,

917 0x373000 | 
PTE_P
 | 
PTE_W
,

918 0x374000 | 
PTE_P
 | 
PTE_W
,

919 0x375000 | 
PTE_P
 | 
PTE_W
,

920 0x376000 | 
PTE_P
 | 
PTE_W
,

921 0x377000 | 
PTE_P
 | 
PTE_W
,

922 0x378000 | 
PTE_P
 | 
PTE_W
,

923 0x379000 | 
PTE_P
 | 
PTE_W
,

924 0x37a000 | 
PTE_P
 | 
PTE_W
,

925 0x37b000 | 
PTE_P
 | 
PTE_W
,

926 0x37c000 | 
PTE_P
 | 
PTE_W
,

927 0x37d000 | 
PTE_P
 | 
PTE_W
,

928 0x37e000 | 
PTE_P
 | 
PTE_W
,

929 0x37f000 | 
PTE_P
 | 
PTE_W
,

930 0x380000 | 
PTE_P
 | 
PTE_W
,

931 0x381000 | 
PTE_P
 | 
PTE_W
,

932 0x382000 | 
PTE_P
 | 
PTE_W
,

933 0x383000 | 
PTE_P
 | 
PTE_W
,

934 0x384000 | 
PTE_P
 | 
PTE_W
,

935 0x385000 | 
PTE_P
 | 
PTE_W
,

936 0x386000 | 
PTE_P
 | 
PTE_W
,

937 0x387000 | 
PTE_P
 | 
PTE_W
,

938 0x388000 | 
PTE_P
 | 
PTE_W
,

939 0x389000 | 
PTE_P
 | 
PTE_W
,

940 0x38a000 | 
PTE_P
 | 
PTE_W
,

941 0x38b000 | 
PTE_P
 | 
PTE_W
,

942 0x38c000 | 
PTE_P
 | 
PTE_W
,

943 0x38d000 | 
PTE_P
 | 
PTE_W
,

944 0x38e000 | 
PTE_P
 | 
PTE_W
,

945 0x38f000 | 
PTE_P
 | 
PTE_W
,

946 0x390000 | 
PTE_P
 | 
PTE_W
,

947 0x391000 | 
PTE_P
 | 
PTE_W
,

948 0x392000 | 
PTE_P
 | 
PTE_W
,

949 0x393000 | 
PTE_P
 | 
PTE_W
,

950 0x394000 | 
PTE_P
 | 
PTE_W
,

951 0x395000 | 
PTE_P
 | 
PTE_W
,

952 0x396000 | 
PTE_P
 | 
PTE_W
,

953 0x397000 | 
PTE_P
 | 
PTE_W
,

954 0x398000 | 
PTE_P
 | 
PTE_W
,

955 0x399000 | 
PTE_P
 | 
PTE_W
,

956 0x39a000 | 
PTE_P
 | 
PTE_W
,

957 0x39b000 | 
PTE_P
 | 
PTE_W
,

958 0x39c000 | 
PTE_P
 | 
PTE_W
,

959 0x39d000 | 
PTE_P
 | 
PTE_W
,

960 0x39e000 | 
PTE_P
 | 
PTE_W
,

961 0x39f000 | 
PTE_P
 | 
PTE_W
,

962 0x3a0000 | 
PTE_P
 | 
PTE_W
,

963 0x3a1000 | 
PTE_P
 | 
PTE_W
,

964 0x3a2000 | 
PTE_P
 | 
PTE_W
,

965 0x3a3000 | 
PTE_P
 | 
PTE_W
,

966 0x3a4000 | 
PTE_P
 | 
PTE_W
,

967 0x3a5000 | 
PTE_P
 | 
PTE_W
,

968 0x3a6000 | 
PTE_P
 | 
PTE_W
,

969 0x3a7000 | 
PTE_P
 | 
PTE_W
,

970 0x3a8000 | 
PTE_P
 | 
PTE_W
,

971 0x3a9000 | 
PTE_P
 | 
PTE_W
,

972 0x3Ø000 | 
PTE_P
 | 
PTE_W
,

973 0x3ab000 | 
PTE_P
 | 
PTE_W
,

974 0x3ac000 | 
PTE_P
 | 
PTE_W
,

975 0x3ad000 | 
PTE_P
 | 
PTE_W
,

976 0x3´000 | 
PTE_P
 | 
PTE_W
,

977 0x3af000 | 
PTE_P
 | 
PTE_W
,

978 0x3b0000 | 
PTE_P
 | 
PTE_W
,

979 0x3b1000 | 
PTE_P
 | 
PTE_W
,

980 0x3b2000 | 
PTE_P
 | 
PTE_W
,

981 0x3b3000 | 
PTE_P
 | 
PTE_W
,

982 0x3b4000 | 
PTE_P
 | 
PTE_W
,

983 0x3b5000 | 
PTE_P
 | 
PTE_W
,

984 0x3b6000 | 
PTE_P
 | 
PTE_W
,

985 0x3b7000 | 
PTE_P
 | 
PTE_W
,

986 0x3b8000 | 
PTE_P
 | 
PTE_W
,

987 0x3b9000 | 
PTE_P
 | 
PTE_W
,

988 0x3ba000 | 
PTE_P
 | 
PTE_W
,

989 0x3bb000 | 
PTE_P
 | 
PTE_W
,

990 0x3bc000 | 
PTE_P
 | 
PTE_W
,

991 0x3bd000 | 
PTE_P
 | 
PTE_W
,

992 0x3be000 | 
PTE_P
 | 
PTE_W
,

993 0x3bf000 | 
PTE_P
 | 
PTE_W
,

994 0x3c0000 | 
PTE_P
 | 
PTE_W
,

995 0x3c1000 | 
PTE_P
 | 
PTE_W
,

996 0x3c2000 | 
PTE_P
 | 
PTE_W
,

997 0x3c3000 | 
PTE_P
 | 
PTE_W
,

998 0x3c4000 | 
PTE_P
 | 
PTE_W
,

999 0x3c5000 | 
PTE_P
 | 
PTE_W
,

1000 0x3c6000 | 
PTE_P
 | 
PTE_W
,

1001 0x3c7000 | 
PTE_P
 | 
PTE_W
,

1002 0x3c8000 | 
PTE_P
 | 
PTE_W
,

1003 0x3c9000 | 
PTE_P
 | 
PTE_W
,

1004 0x3ˇ000 | 
PTE_P
 | 
PTE_W
,

1005 0x3cb000 | 
PTE_P
 | 
PTE_W
,

1006 0x3cc000 | 
PTE_P
 | 
PTE_W
,

1007 0x3cd000 | 
PTE_P
 | 
PTE_W
,

1008 0x3˚000 | 
PTE_P
 | 
PTE_W
,

1009 0x3cf000 | 
PTE_P
 | 
PTE_W
,

1010 0x3d0000 | 
PTE_P
 | 
PTE_W
,

1011 0x3d1000 | 
PTE_P
 | 
PTE_W
,

1012 0x3d2000 | 
PTE_P
 | 
PTE_W
,

1013 0x3d3000 | 
PTE_P
 | 
PTE_W
,

1014 0x3d4000 | 
PTE_P
 | 
PTE_W
,

1015 0x3d5000 | 
PTE_P
 | 
PTE_W
,

1016 0x3d6000 | 
PTE_P
 | 
PTE_W
,

1017 0x3d7000 | 
PTE_P
 | 
PTE_W
,

1018 0x3d8000 | 
PTE_P
 | 
PTE_W
,

1019 0x3d9000 | 
PTE_P
 | 
PTE_W
,

1020 0x3da000 | 
PTE_P
 | 
PTE_W
,

1021 0x3db000 | 
PTE_P
 | 
PTE_W
,

1022 0x3dc000 | 
PTE_P
 | 
PTE_W
,

1023 0x3dd000 | 
PTE_P
 | 
PTE_W
,

1024 0x3de000 | 
PTE_P
 | 
PTE_W
,

1025 0x3df000 | 
PTE_P
 | 
PTE_W
,

1026 0x3e0000 | 
PTE_P
 | 
PTE_W
,

1027 0x3e1000 | 
PTE_P
 | 
PTE_W
,

1028 0x3e2000 | 
PTE_P
 | 
PTE_W
,

1029 0x3e3000 | 
PTE_P
 | 
PTE_W
,

1030 0x3e4000 | 
PTE_P
 | 
PTE_W
,

1031 0x3e5000 | 
PTE_P
 | 
PTE_W
,

1032 0x3e6000 | 
PTE_P
 | 
PTE_W
,

1033 0x3e7000 | 
PTE_P
 | 
PTE_W
,

1034 0x3e8000 | 
PTE_P
 | 
PTE_W
,

1035 0x3e9000 | 
PTE_P
 | 
PTE_W
,

1036 0x3ó000 | 
PTE_P
 | 
PTE_W
,

1037 0x3eb000 | 
PTE_P
 | 
PTE_W
,

1038 0x3ec000 | 
PTE_P
 | 
PTE_W
,

1039 0x3ed000 | 
PTE_P
 | 
PTE_W
,

1040 0x3ì000 | 
PTE_P
 | 
PTE_W
,

1041 0x3ef000 | 
PTE_P
 | 
PTE_W
,

1042 0x3f0000 | 
PTE_P
 | 
PTE_W
,

1043 0x3f1000 | 
PTE_P
 | 
PTE_W
,

1044 0x3f2000 | 
PTE_P
 | 
PTE_W
,

1045 0x3f3000 | 
PTE_P
 | 
PTE_W
,

1046 0x3f4000 | 
PTE_P
 | 
PTE_W
,

1047 0x3f5000 | 
PTE_P
 | 
PTE_W
,

1048 0x3f6000 | 
PTE_P
 | 
PTE_W
,

1049 0x3f7000 | 
PTE_P
 | 
PTE_W
,

1050 0x3f8000 | 
PTE_P
 | 
PTE_W
,

1051 0x3f9000 | 
PTE_P
 | 
PTE_W
,

1052 0x3Á000 | 
PTE_P
 | 
PTE_W
,

1053 0x3fb000 | 
PTE_P
 | 
PTE_W
,

1054 0x3fc000 | 
PTE_P
 | 
PTE_W
,

1055 0x3fd000 | 
PTE_P
 | 
PTE_W
,

1056 0x3„000 | 
PTE_P
 | 
PTE_W
,

1057 0x3ff000 | 
PTE_P
 | 
PTE_W
,

1058 
	}
};

	@kern/env.c

3 
	~<öc/x86.h
>

4 
	~<öc/mmu.h
>

5 
	~<öc/îr‹.h
>

6 
	~<öc/°rög.h
>

7 
	~<öc/as£π.h
>

8 
	~<öc/ñf.h
>

10 
	~<kîn/ív.h
>

11 
	~<kîn/pm≠.h
>

12 
	~<kîn/å≠.h
>

13 
	~<kîn/m⁄ô‹.h
>

14 
	~<kîn/sched.h
>

15 
	~<kîn/˝u.h
>

16 
	~<kîn/•ölock.h
>

18 
Env
 *
	gívs
 = 
NULL
;

19 
Env
 *
	gív_‰ì_li°
;

22 
	#ENVGENSHIFT
 12

23 

	)

39 
Segdesc
 
	ggdt
[
NCPU
 + 5] =

42 
SEG_NULL
,

45 [
GD_KT
 >> 3] = 
SEG
(
STA_X
 | 
STA_R
, 0x0, 0xffffffff, 0),

48 [
GD_KD
 >> 3] = 
SEG
(
STA_W
, 0x0, 0xffffffff, 0),

51 [
GD_UT
 >> 3] = 
SEG
(
STA_X
 | 
STA_R
, 0x0, 0xffffffff, 3),

54 [
GD_UD
 >> 3] = 
SEG
(
STA_W
, 0x0, 0xffffffff, 3),

58 [
GD_TSS0
 >> 3] = 
SEG_NULL


61 
P£udodesc
 
	ggdt_pd
 = {

62 (
gdt
) - 1, () gdt

76 
	$ívid2ív
(
ívid_t
 
ívid
, 
Env
 **
ív_°‹e
, 
boﬁ
 
check≥rm
)

78 
Env
 *
e
;

81 i‡(
ívid
 == 0) {

82 *
ív_°‹e
 = 
cuªnv
;

91 
e
 = &
ívs
[
	`ENVX
(
ívid
)];

92 i‡(
e
->
ív_°©us
 =
ENV_FREE
 ||É->
ív_id
 !
ívid
) {

93 *
ív_°‹e
 = 0;

94  -
E_BAD_ENV
;

102 i‡(
check≥rm
 && 
e
 !
cuªnv
 &&É->
ív_∑ª¡_id
 !cuªnv->
ív_id
) {

103 *
ív_°‹e
 = 0;

104  -
E_BAD_ENV
;

107 *
ív_°‹e
 = 
e
;

109 
	}
}

118 
	$ív_öô
()

122 
i
;

124 
i
 = 
NENV
 - 1; i > -1; i--) {

125 
ívs
[
i
].
ív_°©us
 = 
ENV_FREE
;

126 
ívs
[
i
].
ív_id
 = 0;

127 
ívs
[
i
].
ív_lök
 = 
ív_‰ì_li°
;

128 
ív_‰ì_li°
 = &
ívs
[
i
];

132 
	`ív_öô_≥r˝u
();

133 
	}
}

137 
	$ív_öô_≥r˝u
()

139 
	`lgdt
(&
gdt_pd
);

142 
asm
 vﬁ©ûe("movw %%ax,%%gs" :: "a" (
GD_UD
|3));

143 
asm
 vﬁ©ûe("movw %%ax,%%fs" :: "a" (
GD_UD
|3));

146 
asm
 vﬁ©ûe("movw %%ax,%%es" :: "a" (
GD_KD
));

147 
asm
 vﬁ©ûe("movw %%ax,%%ds" :: "a" (
GD_KD
));

148 
asm
 vﬁ©ûe("movw %%ax,%%ss" :: "a" (
GD_KD
));

150 
asm
 vﬁ©ûe("ljm∞%0,$1f\¿1:\n" :: "i" (
GD_KT
));

153 
	`Œdt
(0);

154 
	}
}

167 
	$ív_£tup_vm
(
Env
 *
e
)

169 
i
;

170 
PageInfo
 *
p
 = 
NULL
;

173 i‡(!(
p
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
)))

174  -
E_NO_MEM
;

193 
e
->
ív_pgdú
 = 
	`∑ge2kva
(
p
);

194 
	`mem£t
(
e
->
ív_pgdú
, 0, 
PGSIZE
);

195 
p
->
µ_ªf
++;

196 
i
 = 
	`PDX
(
UTOP
); i < 
NPDENTRIES
; i++)

197 
e
->
ív_pgdú
[
i
] = 
kîn_pgdú
[i];

201 
e
->
ív_pgdú
[
	`PDX
(
UVPT
)] = 
	`PADDR
”->ív_pgdúË| 
PTE_P
 | 
PTE_U
;

204 
	}
}

215 
	$ív_Æloc
(
Env
 **
√wív_°‹e
, 
ívid_t
 
∑ª¡_id
)

217 
öt32_t
 
gíî©i⁄
;

218 
r
;

219 
Env
 *
e
;

221 i‡(!(
e
 = 
ív_‰ì_li°
))

222  -
E_NO_FREE_ENV
;

225 i‡((
r
 = 
	`ív_£tup_vm
(
e
)) < 0)

226  
r
;

229 
gíî©i⁄
 = (
e
->
ív_id
 + (1 << 
ENVGENSHIFT
)Ë& ~(
NENV
 - 1);

230 i‡(
gíî©i⁄
 <= 0)

231 
gíî©i⁄
 = 1 << 
ENVGENSHIFT
;

232 
e
->
ív_id
 = 
gíî©i⁄
 | (ê- 
ívs
);

235 
e
->
ív_∑ª¡_id
 = 
∑ª¡_id
;

236 
e
->
ív_ty≥
 = 
ENV_TYPE_USER
;

237 
e
->
ív_°©us
 = 
ENV_RUNNABLE
;

238 
e
->
ív_runs
 = 0;

244 
	`mem£t
(&
e
->
ív_tf
, 0, (e->env_tf));

254 
e
->
ív_tf
.
tf_ds
 = 
GD_UD
 | 3;

255 
e
->
ív_tf
.
tf_es
 = 
GD_UD
 | 3;

256 
e
->
ív_tf
.
tf_ss
 = 
GD_UD
 | 3;

257 
e
->
ív_tf
.
tf_e•
 = 
USTACKTOP
;

258 
e
->
ív_tf
.
tf_cs
 = 
GD_UT
 | 3;

265 
e
->
ív_pgÁu…_upˇŒ
 = 0;

268 
e
->
ív_ùc_ªcvög
 = 0;

271 
ív_‰ì_li°
 = 
e
->
ív_lök
;

272 *
√wív_°‹e
 = 
e
;

274 
	`˝rötf
("[%08x]ÇewÉnv %08x\n", 
cuªnv
 ? cuªnv->
ív_id
 : 0, 
e
->env_id);

276 
	}
}

286 
	$ªgi⁄_Æloc
(
Env
 *
e
, *
va
, 
size_t
 
Àn
)

295 
PageInfo
 *
µ
;

296 
i
;

297 
va
 = 
	`ROUNDDOWN
(va, 
PGSIZE
);

298 
Àn
 = (
size_t
)
	`ROUNDUP
(
va
 +Üí, 
PGSIZE
);

299 ;(
size_t
)
va
 < 
Àn
; v®+
PGSIZE
){

300 if(!(
µ
 = 
	`∑ge_Æloc
(0)))

301 
	`∑nic
("region_alloc:Page_alloc fails!");

302 
i
 = 
	`∑ge_ö£π
(
e
->
ív_pgdú
, 
µ
, 
va
, 
PTE_U
 | 
PTE_W
);

303 if(
i
)

304 
	`∑nic
("ªgi⁄_Æloc:Page_ö£π faûs!--%e", 
i
);

306 
	}
}

331 
	$lﬂd_icode
(
Env
 *
e
, 
uöt8_t
 *
bö¨y
, 
size_t
 
size
)

362 
Elf
 *
¥og
;

363 
Proghdr
 *
ph
, *
ïh
;

365 
¥og
 = (
Elf
 *)
bö¨y
;

366 i‡(
¥og
->
e_magic
 !
ELF_MAGIC
)

367 
	`∑nic
("The binary isÇot userÖrogerm!");

369 
ph
 = (
Proghdr
 *Ë(
bö¨y
 + 
¥og
->
e_phoff
);

370 
	`l¸3
(
	`PADDR
(
e
->
ív_pgdú
));

371 
ïh
 = 
ph
 + 
¥og
->
e_phnum
;

372 ; 
ph
 < 
ïh
;Öh++){

373 i‡(
ph
->
p_fûesz
 >Öh->
p_memsz
)

374 
	`∑nic
("load_icode:ph->p_filesz >Öh->p_memsz!");

375 if(
ph
->
p_ty≥
 =
ELF_PROG_LOAD
){

376 
	`ªgi⁄_Æloc
(
e
, (*)
ph
->
p_va
,Öh->
p_memsz
);

377 
	`memmove
((*Ë
ph
->
p_va
, 
bö¨y
 +Öh->
p_off£t
,

378 
ph
->
p_fûesz
);

379 
	`mem£t
(((*Ë
ph
->
p_va
Ë+Öh->
p_fûesz
, 0,

380 
ph
->
p_memsz
 -Öh->
p_fûesz
);

383 
e
->
ív_tf
.
tf_eù
 = 
¥og
->
e_íåy
;

388 
	`ªgi⁄_Æloc
(
e
, (*)
USTACKTOP
 - 
PGSIZE
, PGSIZE);

389 
	`l¸3
(
	`PADDR
(
kîn_pgdú
));

390 
	}
}

400 
	$ív_¸óã
(
uöt8_t
 *
bö¨y
, 
size_t
 
size
, 
EnvTy≥
 
ty≥
)

403 
Env
 *
e
;

404 
i
;

406 
i
 = 
	`ív_Æloc
(&
e
, 0);

407 if(
i
)

408 
	`∑nic
("ív_¸óã:%e", 
i
);

409 
	`lﬂd_icode
(
e
, 
bö¨y
, 
size
);

410 
e
->
ív_ty≥
 = 
ty≥
;

411 
	}
}

417 
	$ív_‰ì
(
Env
 *
e
)

419 
±e_t
 *
±
;

420 
uöt32_t
 
pdío
, 
±ío
;

421 
phyßddr_t
 
∑
;

426 i‡(
e
 =
cuªnv
)

427 
	`l¸3
(
	`PADDR
(
kîn_pgdú
));

430 
	`˝rötf
("[%08x] fªêív %08x\n", 
cuªnv
 ? cuªnv->
ív_id
 : 0, 
e
->env_id);

433 
	`°©ic_as£π
(
UTOP
 % 
PTSIZE
 == 0);

434 
pdío
 = 0;Ödíÿ< 
	`PDX
(
UTOP
);Ödeno++) {

437 i‡(!(
e
->
ív_pgdú
[
pdío
] & 
PTE_P
))

441 
∑
 = 
	`PTE_ADDR
(
e
->
ív_pgdú
[
pdío
]);

442 
±
 = (
±e_t
*Ë
	`KADDR
(
∑
);

445 
±ío
 = 0;Öãnÿ<
	`PTX
(~0);Öteno++) {

446 i‡(
±
[
±ío
] & 
PTE_P
)

447 
	`∑ge_ªmove
(
e
->
ív_pgdú
, 
	`PGADDR
(
pdío
, 
±ío
, 0));

451 
e
->
ív_pgdú
[
pdío
] = 0;

452 
	`∑ge_de¸ef
(
	`∑2∑ge
(
∑
));

456 
∑
 = 
	`PADDR
(
e
->
ív_pgdú
);

457 
e
->
ív_pgdú
 = 0;

458 
	`∑ge_de¸ef
(
	`∑2∑ge
(
∑
));

461 
e
->
ív_°©us
 = 
ENV_FREE
;

462 
e
->
ív_lök
 = 
ív_‰ì_li°
;

463 
ív_‰ì_li°
 = 
e
;

464 
	}
}

472 
	$ív_de°roy
(
Env
 *
e
)

477 i‡(
e
->
ív_°©us
 =
ENV_RUNNING
 && 
cuªnv
 !=É) {

478 
e
->
ív_°©us
 = 
ENV_DYING
;

482 
	`ív_‰ì
(
e
);

484 i‡(
cuªnv
 =
e
) {

485 
cuªnv
 = 
NULL
;

486 
	`sched_yõld
();

488 
	}
}

498 
	$ív_p›_tf
(
Tøp‰ame
 *
tf
)

501 
cuªnv
->
ív_˝unum
 = 
	`˝unum
();

503 
__asm
 
	`__vﬁ©ûe
("movl %0,%%esp\n"

509 : : "g" (
tf
) : "memory");

510 
	`∑nic
("iret failed");

511 
	}
}

520 
	$ív_run
(
Env
 *
e
)

540 i‡(
cuªnv
 !
e
)

541 i‡(
cuªnv
)

542 if(
cuªnv
->
ív_°©us
 =
ENV_RUNNING
)

543 
cuªnv
->
ív_°©us
 = 
ENV_RUNNABLE
;

544 
cuªnv
 = 
e
;

545 
e
->
ív_˝unum
 = 
	`˝unum
();

546 
e
->
ív_°©us
 = 
ENV_RUNNING
;

547 
e
->
ív_runs
++;

548 
	`l¸3
(
	`PADDR
(
e
->
ív_pgdú
));

550 
	`u∆ock_kî√l
();

552 
	`ív_p›_tf
(&
cuªnv
->
ív_tf
);

554 
	}
}

	@kern/env.h

3 #i‚de‡
JOS_KERN_ENV_H


4 
	#JOS_KERN_ENV_H


	)

6 
	~<öc/ív.h
>

7 
	~<kîn/˝u.h
>

9 
Env
 *
ívs
;

10 
	#cuªnv
 (
this˝u
->
˝u_ív
)

11 
Segdesc
 
gdt
[];

	)

13 
ív_öô
();

14 
ív_öô_≥r˝u
();

15 
ív_Æloc
(
Env
 **
e
, 
ívid_t
 
∑ª¡_id
);

16 
ív_‰ì
(
Env
 *
e
);

17 
ív_¸óã
(
uöt8_t
 *
bö¨y
, 
size_t
 
size
, 
EnvTy≥
 
ty≥
);

18 
ív_de°roy
(
Env
 *
e
);

20 
ívid2ív
(
ívid_t
 
ívid
, 
Env
 **
ív_°‹e
, 
boﬁ
 
check≥rm
);

22 
	$ív_run
(
Env
 *
e
Ë
	`__©åibuã__
((
n‹ëu∫
));

23 
	$ív_p›_tf
(
Tøp‰ame
 *
tf
Ë
	`__©åibuã__
((
n‹ëu∫
));

27 
	#ENV_PASTE3
(
x
, 
y
, 
z
Ëx ## y ## 
	)
z

29 
	#ENV_CREATE
(
x
, 
ty≥
) \

31 
uöt8_t
 
	`ENV_PASTE3
(
_bö¨y_obj_
, 
x
, 
_°¨t
)[], \

32 
	`ENV_PASTE3
(
_bö¨y_obj_
, 
x
, 
_size
)[]; \

33 
	`ív_¸óã
(
	`ENV_PASTE3
(
_bö¨y_obj_
, 
x
, 
_°¨t
), \

34 ()
	`ENV_PASTE3
(
_bö¨y_obj_
, 
x
, 
_size
), \

35 
ty≥
); \

36 
	}
} 0)

	)

	@kern/init.c

3 
	~<öc/°dio.h
>

4 
	~<öc/°rög.h
>

5 
	~<öc/as£π.h
>

7 
	~<kîn/m⁄ô‹.h
>

8 
	~<kîn/c⁄sﬁe.h
>

9 
	~<kîn/pm≠.h
>

10 
	~<kîn/k˛ock.h
>

11 
	~<kîn/ív.h
>

12 
	~<kîn/å≠.h
>

13 
	~<kîn/sched.h
>

14 
	~<kîn/picúq.h
>

15 
	~<kîn/˝u.h
>

16 
	~<kîn/•ölock.h
>

18 
boŸ_≠s
();

22 
	$i386_öô
()

24 
ed©a
[], 
íd
[];

29 
	`mem£t
(
ed©a
, 0, 
íd
 -Édata);

33 
	`c⁄s_öô
();

35 
	`˝rötf
("6828 decimal is %o octal!\n", 6828);

38 
	`mem_öô
();

41 
	`ív_öô
();

42 
	`å≠_öô
();

45 
	`mp_öô
();

46 
	`œpic_öô
();

49 
	`pic_öô
();

53 
	`lock_kî√l
();

56 
	`boŸ_≠s
();

58 #i‡
	`deföed
(
TEST
)

60 
	`ENV_CREATE
(
TEST
, 
ENV_TYPE_USER
);

63 
	`ENV_CREATE
(
u£r_Áu…ªgs
, 
ENV_TYPE_USER
);

67 
	`sched_yõld
();

68 
	}
}

73 *
	gm≥¡ry_k°ack
;

77 
	$boŸ_≠s
()

79 
m≥¡ry_°¨t
[], 
m≥¡ry_íd
[];

80 *
code
;

81 
CpuInfo
 *
c
;

84 
code
 = 
	`KADDR
(
MPENTRY_PADDR
);

85 
	`memmove
(
code
, 
m≥¡ry_°¨t
, 
m≥¡ry_íd
 - mpentry_start);

88 
c
 = 
˝us
; c < cpu†+ 
n˝u
; c++) {

89 i‡(
c
 =
˝us
 + 
	`˝unum
())

93 
m≥¡ry_k°ack
 = 
≥r˝u_k°acks
[
c
 - 
˝us
] + 
KSTKSIZE
;

95 
	`œpic_°¨èp
(
c
->
˝u_id
, 
	`PADDR
(
code
));

97 
c
->
˝u_°©us
 !
CPU_STARTED
)

100 
	}
}

104 
	$mp_maö
()

107 
	`l¸3
(
	`PADDR
(
kîn_pgdú
));

108 
	`˝rötf
("SMP: CPU %d sèπög\n", 
	`˝unum
());

110 
	`œpic_öô
();

111 
	`ív_öô_≥r˝u
();

112 
	`å≠_öô_≥r˝u
();

113 
	`xchg
(&
this˝u
->
˝u_°©us
, 
CPU_STARTED
);

120 
	`lock_kî√l
();

124 
	}
}

130 c⁄° *
	g∑nic°r
;

137 
	$_∑nic
(c⁄° *
fûe
, 
löe
, c⁄° *
fmt
,...)

139 
va_li°
 
≠
;

141 i‡(
∑nic°r
)

142 
dód
;

143 
∑nic°r
 = 
fmt
;

146 
__asm
 
	`__vﬁ©ûe
("cli; cld");

148 
	`va_°¨t
(
≠
, 
fmt
);

149 
	`˝rötf
("kî√»∑ni¯⁄ CPU %dáà%s:%d: ", 
	`˝unum
(), 
fûe
, 
löe
);

150 
	`v˝rötf
(
fmt
, 
≠
);

151 
	`˝rötf
("\n");

152 
	`va_íd
(
≠
);

154 
dód
:

157 
	`m⁄ô‹
(
NULL
);

158 
	}
}

162 
	$_w¨n
(c⁄° *
fûe
, 
löe
, c⁄° *
fmt
,...)

164 
va_li°
 
≠
;

166 
	`va_°¨t
(
≠
, 
fmt
);

167 
	`˝rötf
("kî√»w¨nögáà%s:%d: ", 
fûe
, 
löe
);

168 
	`v˝rötf
(
fmt
, 
≠
);

169 
	`˝rötf
("\n");

170 
	`va_íd
(
≠
);

171 
	}
}

	@kern/kclock.c

5 
	~<öc/x86.h
>

7 
	~<kîn/k˛ock.h
>

11 
	$mc146818_ªad
(
ªg
)

13 
	`outb
(
IO_RTC
, 
ªg
);

14  
	`öb
(
IO_RTC
+1);

15 
	}
}

18 
	$mc146818_wrôe
(
ªg
, 
d©um
)

20 
	`outb
(
IO_RTC
, 
ªg
);

21 
	`outb
(
IO_RTC
+1, 
d©um
);

22 
	}
}

	@kern/kclock.h

3 #i‚de‡
JOS_KERN_KCLOCK_H


4 
	#JOS_KERN_KCLOCK_H


	)

5 #i‚de‡
JOS_KERNEL


9 
	#IO_RTC
 0x070

	)

11 
	#MC_NVRAM_START
 0xê

	)

12 
	#MC_NVRAM_SIZE
 50

	)

15 
	#NVRAM_BASELO
 (
MC_NVRAM_START
 + 7Ë

	)

16 
	#NVRAM_BASEHI
 (
MC_NVRAM_START
 + 8Ë

	)

19 
	#NVRAM_EXTLO
 (
MC_NVRAM_START
 + 9Ë

	)

20 
	#NVRAM_EXTHI
 (
MC_NVRAM_START
 + 10Ë

	)

23 
	#NVRAM_PEXTLO
 (
MC_NVRAM_START
 + 34Ë

	)

24 
	#NVRAM_PEXTHI
 (
MC_NVRAM_START
 + 35Ë

	)

27 
	#NVRAM_CENTURY
 (
MC_NVRAM_START
 + 36Ë

	)

29 
mc146818_ªad
(
ªg
);

30 
mc146818_wrôe
(
ªg
, 
d©um
);

	@kern/kdebug.c

1 
	~<öc/°ab.h
>

2 
	~<öc/°rög.h
>

3 
	~<öc/memœyout.h
>

4 
	~<öc/as£π.h
>

6 
	~<kîn/kdebug.h
>

7 
	~<kîn/pm≠.h
>

8 
	~<kîn/ív.h
>

10 c⁄° 
Sèb
 
__STAB_BEGIN__
[];

11 c⁄° 
Sèb
 
__STAB_END__
[];

12 c⁄° 
__STABSTR_BEGIN__
[];

13 c⁄° 
__STABSTR_END__
[];

15 
	sU£rSèbD©a
 {

16 c⁄° 
Sèb
 *
	m°abs
;

17 c⁄° 
Sèb
 *
	m°ab_íd
;

18 c⁄° *
	m°ab°r
;

19 c⁄° *
	m°ab°r_íd
;

60 
	$°ab_bö£¨ch
(c⁄° 
Sèb
 *
°abs
, *
ªgi⁄_À·
, *
ªgi⁄_right
,

61 
ty≥
, 
uöçå_t
 
addr
)

63 
l
 = *
ªgi⁄_À·
, 
r
 = *
ªgi⁄_right
, 
™y_m©ches
 = 0;

65 
l
 <
r
) {

66 
åue_m
 = (
l
 + 
r
Ë/ 2, 
m
 =Årue_m;

69 
m
 >
l
 && 
°abs
[m].
n_ty≥
 !
ty≥
)

70 
m
--;

71 i‡(
m
 < 
l
) {

72 
l
 = 
åue_m
 + 1;

77 
™y_m©ches
 = 1;

78 i‡(
°abs
[
m
].
n_vÆue
 < 
addr
) {

79 *
ªgi⁄_À·
 = 
m
;

80 
l
 = 
åue_m
 + 1;

81 } i‡(
°abs
[
m
].
n_vÆue
 > 
addr
) {

82 *
ªgi⁄_right
 = 
m
 - 1;

83 
r
 = 
m
 - 1;

87 *
ªgi⁄_À·
 = 
m
;

88 
l
 = 
m
;

89 
addr
++;

93 i‡(!
™y_m©ches
)

94 *
ªgi⁄_right
 = *
ªgi⁄_À·
 - 1;

97 
l
 = *
ªgi⁄_right
;

98 
l
 > *
ªgi⁄_À·
 && 
°abs
[l].
n_ty≥
 !
ty≥
;

99 
l
--)

101 *
ªgi⁄_À·
 = 
l
;

103 
	}
}

114 
	$debugöfo_eù
(
uöçå_t
 
addr
, 
Eùdebugöfo
 *
öfo
)

116 c⁄° 
Sèb
 *
°abs
, *
°ab_íd
;

117 c⁄° *
°ab°r
, *
°ab°r_íd
;

118 
lfûe
, 
rfûe
, 
lfun
, 
rfun
, 
Œöe
, 
æöe
;

121 
öfo
->
eù_fûe
 = "<unknown>";

122 
öfo
->
eù_löe
 = 0;

123 
öfo
->
eù_‚_«me
 = "<unknown>";

124 
öfo
->
eù_‚_«mñí
 = 9;

125 
öfo
->
eù_‚_addr
 = 
addr
;

126 
öfo
->
eù_‚_«rg
 = 0;

129 i‡(
addr
 >
ULIM
) {

130 
°abs
 = 
__STAB_BEGIN__
;

131 
°ab_íd
 = 
__STAB_END__
;

132 
°ab°r
 = 
__STABSTR_BEGIN__
;

133 
°ab°r_íd
 = 
__STABSTR_END__
;

140 c⁄° 
U£rSèbD©a
 *
usd
 = (c⁄° U£rSèbD©®*Ë
USTABDATA
;

146 
°abs
 = 
usd
->stabs;

147 
°ab_íd
 = 
usd
->stab_end;

148 
°ab°r
 = 
usd
->stabstr;

149 
°ab°r_íd
 = 
usd
->stabstr_end;

156 i‡(
°ab°r_íd
 <
°ab°r
 || stabstr_end[-1] != 0)

165 
lfûe
 = 0;

166 
rfûe
 = (
°ab_íd
 - 
°abs
) - 1;

167 
	`°ab_bö£¨ch
(
°abs
, &
lfûe
, &
rfûe
, 
N_SO
, 
addr
);

168 i‡(
lfûe
 == 0)

173 
lfun
 = 
lfûe
;

174 
rfun
 = 
rfûe
;

175 
	`°ab_bö£¨ch
(
°abs
, &
lfun
, &
rfun
, 
N_FUN
, 
addr
);

177 i‡(
lfun
 <
rfun
) {

180 i‡(
°abs
[
lfun
].
n_°rx
 < 
°ab°r_íd
 - 
°ab°r
)

181 
öfo
->
eù_‚_«me
 = 
°ab°r
 + 
°abs
[
lfun
].
n_°rx
;

182 
öfo
->
eù_‚_addr
 = 
°abs
[
lfun
].
n_vÆue
;

183 
addr
 -
öfo
->
eù_‚_addr
;

185 
Œöe
 = 
lfun
;

186 
æöe
 = 
rfun
;

190 
öfo
->
eù_‚_addr
 = 
addr
;

191 
Œöe
 = 
lfûe
;

192 
æöe
 = 
rfûe
;

195 
öfo
->
eù_‚_«mñí
 = 
	`°rföd
(öfo->
eù_‚_«me
, ':') - info->eip_fn_name;

207 
	`°ab_bö£¨ch
(
°abs
, &
Œöe
, &
æöe
, 
N_SLINE
, 
addr
);

208 i‡(
°abs
[
Œöe
].
n_°rx
 < 
°ab°r_íd
 - 
°ab°r
)

209 {
öfo
->
eù_löe
 = ( )(*(
°ab°r
 + 
°abs
[
Œöe
].
n_°rx
));

210 
	`˝rötf
("%d\n",
°abs
[
Œöe
].
n_°rx
);}

218 
Œöe
 >
lfûe


219 && 
°abs
[
Œöe
].
n_ty≥
 !
N_SOL


220 && (
°abs
[
Œöe
].
n_ty≥
 !
N_SO
 || !°abs[Œöe].
n_vÆue
))

221 
Œöe
--;

222 i‡(
Œöe
 >
lfûe
 && 
°abs
[Œöe].
n_°rx
 < 
°ab°r_íd
 - 
°ab°r
)

223 
öfo
->
eù_fûe
 = 
°ab°r
 + 
°abs
[
Œöe
].
n_°rx
;

228 i‡(
lfun
 < 
rfun
)

229 
Œöe
 = 
lfun
 + 1;

230 
Œöe
 < 
rfun
 && 
°abs
[Œöe].
n_ty≥
 =
N_PSYM
;

231 
Œöe
++)

232 
öfo
->
eù_‚_«rg
++;

235 
	}
}

	@kern/kdebug.h

1 #i‚de‡
JOS_KERN_KDEBUG_H


2 
	#JOS_KERN_KDEBUG_H


	)

4 
	~<öc/ty≥s.h
>

7 
	sEùdebugöfo
 {

8 c⁄° *
	meù_fûe
;

9 
	meù_löe
;

11 c⁄° *
	meù_‚_«me
;

13 
	meù_‚_«mñí
;

14 
uöçå_t
 
	meù_‚_addr
;

15 
	meù_‚_«rg
;

18 
debugöfo_eù
(
uöçå_t
 
eù
, 
Eùdebugöfo
 *
öfo
);

	@kern/lapic.c

4 
	~<öc/ty≥s.h
>

5 
	~<öc/memœyout.h
>

6 
	~<öc/å≠.h
>

7 
	~<öc/mmu.h
>

8 
	~<öc/°dio.h
>

9 
	~<öc/x86.h
>

10 
	~<kîn/pm≠.h
>

11 
	~<kîn/˝u.h
>

14 
	#ID
 (0x0020/4)

15 
	#VER
 (0x0030/4)

16 
	#TPR
 (0x0080/4)

17 
	#EOI
 (0x00B0/4)

18 
	#SVR
 (0x00F0/4)

19 
	#ENABLE
 0x00000100

20 
	#ESR
 (0x0280/4)

21 
	#ICRLO
 (0x0300/4)

22 
	#INIT
 0x00000500

23 
	#STARTUP
 0x00000600

24 
	#DELIVS
 0x00001000

25 
	#ASSERT
 0x00004000

26 
	#DEASSERT
 0x00000000

	)

27 
	#LEVEL
 0x00008000

28 
	#BCAST
 0x00080000

29 
	#OTHERS
 0x000C0000

30 
	#BUSY
 0x00001000

	)

31 
	#FIXED
 0x00000000

	)

32 
	#ICRHI
 (0x0310/4)

33 
	#TIMER
 (0x0320/4)

34 
	#X1
 0x0000000B

35 
	#PERIODIC
 0x00020000

36 
	#PCINT
 (0x0340/4)

37 
	#LINT0
 (0x0350/4)

38 
	#LINT1
 (0x0360/4)

39 
	#ERROR
 (0x0370/4)

40 
	#MASKED
 0x00010000

41 
	#TICR
 (0x0380/4)

42 
	#TCCR
 (0x0390/4)

43 
	#TDCR
 (0x03E0/4)

44 

	)

45 
phyßddr_t
 
	gœpiˇddr
;

46 vﬁ©ûê
uöt32_t
 *
	gœpic
;

49 
	$œpicw
(
ödex
, 
vÆue
)

51 
œpic
[
ödex
] = 
vÆue
;

52 
œpic
[
ID
];

53 
	}
}

56 
	$œpic_öô
()

58 i‡(!
œpiˇddr
)

63 
œpic
 = 
	`mmio_m≠_ªgi⁄
(
œpiˇddr
, 4096);

66 
	`œpicw
(
SVR
, 
ENABLE
 | (
IRQ_OFFSET
 + 
IRQ_SPURIOUS
));

72 
	`œpicw
(
TDCR
, 
X1
);

73 
	`œpicw
(
TIMER
, 
PERIODIC
 | (
IRQ_OFFSET
 + 
IRQ_TIMER
));

74 
	`œpicw
(
TICR
, 10000000);

83 i‡(
this˝u
 !
boŸ˝u
)

84 
	`œpicw
(
LINT0
, 
MASKED
);

87 
	`œpicw
(
LINT1
, 
MASKED
);

91 i‡(((
œpic
[
VER
]>>16) & 0xFF) >= 4)

92 
	`œpicw
(
PCINT
, 
MASKED
);

95 
	`œpicw
(
ERROR
, 
IRQ_OFFSET
 + 
IRQ_ERROR
);

98 
	`œpicw
(
ESR
, 0);

99 
	`œpicw
(
ESR
, 0);

102 
	`œpicw
(
EOI
, 0);

105 
	`œpicw
(
ICRHI
, 0);

106 
	`œpicw
(
ICRLO
, 
BCAST
 | 
INIT
 | 
LEVEL
);

107 
œpic
[
ICRLO
] & 
DELIVS
)

111 
	`œpicw
(
TPR
, 0);

112 
	}
}

115 
	$˝unum
()

117 i‡(
œpic
)

118  
œpic
[
ID
] >> 24;

120 
	}
}

124 
	$œpic_eoi
()

126 i‡(
œpic
)

127 
	`œpicw
(
EOI
, 0);

128 
	}
}

133 
	$mi¸odñay
(
us
)

135 
	}
}

137 
	#IO_RTC
 0x70

	)

142 
	$œpic_°¨èp
(
uöt8_t
 
≠icid
, 
uöt32_t
 
addr
)

144 
i
;

145 
uöt16_t
 *
wrv
;

150 
	`outb
(
IO_RTC
, 0xF);

151 
	`outb
(
IO_RTC
+1, 0x0A);

152 
wrv
 = (
uöt16_t
 *)
	`KADDR
((0x40 << 4 | 0x67));

153 
wrv
[0] = 0;

154 
wrv
[1] = 
addr
 >> 4;

158 
	`œpicw
(
ICRHI
, 
≠icid
 << 24);

159 
	`œpicw
(
ICRLO
, 
INIT
 | 
LEVEL
 | 
ASSERT
);

160 
	`mi¸odñay
(200);

161 
	`œpicw
(
ICRLO
, 
INIT
 | 
LEVEL
);

162 
	`mi¸odñay
(100);

169 
i
 = 0; i < 2; i++) {

170 
	`œpicw
(
ICRHI
, 
≠icid
 << 24);

171 
	`œpicw
(
ICRLO
, 
STARTUP
 | (
addr
 >> 12));

172 
	`mi¸odñay
(200);

174 
	}
}

177 
	$œpic_ùi
(
ve˘‹
)

179 
	`œpicw
(
ICRLO
, 
OTHERS
 | 
FIXED
 | 
ve˘‹
);

180 
œpic
[
ICRLO
] & 
DELIVS
)

182 
	}
}

	@kern/monitor.c

4 
	~<öc/°dio.h
>

5 
	~<öc/°rög.h
>

6 
	~<öc/memœyout.h
>

7 
	~<öc/as£π.h
>

8 
	~<öc/x86.h
>

10 
	~<kîn/c⁄sﬁe.h
>

11 
	~<kîn/m⁄ô‹.h
>

12 
	~<kîn/kdebug.h
>

13 
	~<kîn/å≠.h
>

15 
	#CMDBUF_SIZE
 80

16 

	)

18 
	sComm™d
 {

19 c⁄° *
	m«me
;

20 c⁄° *
	mdesc
;

22 (*
	mfunc
)(
	m¨gc
, ** 
	m¨gv
, 
Tøp‰ame
* 
	mtf
);

25 
Comm™d
 
	gcomm™ds
[] = {

26 { "hñp", "Di•œyÅhi†li° o‡comm™ds", 
m⁄_hñp
 },

27 { "kînöfo", "Di•œy inf‹m©i⁄ábouàthêkî√l", 
m⁄_kînöfo
 },

28 { "backåa˚", "Di•œy backåa˚", 
m⁄_backåa˚
}

30 
	#NCOMMANDS
 ((
comm™ds
)/(comm™ds[0]))

	)

35 
	$m⁄_hñp
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
)

37 
i
;

39 
i
 = 0; i < 
NCOMMANDS
; i++)

40 
	`˝rötf
("%†- %s\n", 
comm™ds
[
i
].
«me
, comm™ds[i].
desc
);

42 
	}
}

45 
	$m⁄_kînöfo
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
)

47 
_°¨t
[], 
íåy
[], 
ëext
[], 
ed©a
[], 
íd
[];

49 
	`˝rötf
("Special kernel symbols:\n");

50 
	`˝rötf
(" _°¨à %08x (phys)\n", 
_°¨t
);

51 
	`˝rötf
("É¡ry %08x (vútË %08x (phys)\n", 
íåy
,É¡ry - 
KERNBASE
);

52 
	`˝rötf
("Éãxà %08x (vútË %08x (phys)\n", 
ëext
,Éãxà- 
KERNBASE
);

53 
	`˝rötf
("Éd©® %08x (vútË %08x (phys)\n", 
ed©a
,Éd©®- 
KERNBASE
);

54 
	`˝rötf
("Énd %08x (vútË %08x (phys)\n", 
íd
,Énd - 
KERNBASE
);

55 
	`˝rötf
("KernelÉxecutable memory footprint: %dKB\n",

56 
	`ROUNDUP
(
íd
 - 
íåy
, 1024) / 1024);

58 
	}
}

61 
	$m⁄_backåa˚
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
)

63 
uöt32_t
 *
p
,
ebp
;

64 
Eùdebugöfo
 *
pöfo
,
öfo
;

65 
pöfo
=&
öfo
;

66 
uöçå_t
 
eù
;

67 
	`˝rötf
("Stack backtrace:\n");

68 
ebp
 = 
	`ªad_ebp
();

69 
p
 = (
uöt32_t
 *)
ebp
;

70 
ebp
)

72 
	`˝rötf
("Éb∞%08xÉù %08xárg†%08x %08x %08x %08x %08x\n",*(
p
),*(p+1),*(p+2),*(p+3),*(p+4),*(p+5),*(p+6));

73 
eù
=(
uöçå_t
)(*(
p
+1));

74 
	`debugöfo_eù
(
eù
,
pöfo
);

75 
	`˝rötf
(" %s:%d: %s\n",
pöfo
->
eù_fûe
,pöfo->
eù_löe
,pöfo->
eù_‚_«me
);

76 
p
=(
uöt32_t
 *)*p;

77 
ebp
=*
p
;

79 
	`˝rötf
("Éb∞%08xÉù %08xárg†%08x %08x %08x %08x %08x\n",*(
p
),*(p+1),*(p+2),*(p+3),*(p+4),*(p+5),*(p+6));

81 
	}
}

87 
	#WHITESPACE
 "\t\r\¿"

	)

88 
	#MAXARGS
 16

	)

91 
	$runcmd
(*
buf
, 
Tøp‰ame
 *
tf
)

93 
¨gc
;

94 *
¨gv
[
MAXARGS
];

95 
i
;

98 
¨gc
 = 0;

99 
¨gv
[
¨gc
] = 0;

102 *
buf
 && 
	`°rchr
(
WHITESPACE
, *buf))

103 *
buf
++ = 0;

104 i‡(*
buf
 == 0)

108 i‡(
¨gc
 =
MAXARGS
-1) {

109 
	`˝rötf
("Toÿm™yárgumít†(max %d)\n", 
MAXARGS
);

112 
¨gv
[
¨gc
++] = 
buf
;

113 *
buf
 && !
	`°rchr
(
WHITESPACE
, *buf))

114 
buf
++;

116 
¨gv
[
¨gc
] = 0;

119 i‡(
¨gc
 == 0)

121 
i
 = 0; i < 
NCOMMANDS
; i++) {

122 i‡(
	`°rcmp
(
¨gv
[0], 
comm™ds
[
i
].
«me
) == 0)

123  
comm™ds
[
i
].
	`func
(
¨gc
, 
¨gv
, 
tf
);

125 
	`˝rötf
("Unknow¿comm™d '%s'\n", 
¨gv
[0]);

127 
	}
}

130 
	$m⁄ô‹
(
Tøp‰ame
 *
tf
)

132 *
buf
;

134 
	`˝rötf
("WelcomeÅoÅhe JOS kernel monitor!\n");

135 
	`˝rötf
("Type 'help' foráÜist of commands.\n");

137 i‡(
tf
 !
NULL
)

138 
	`¥öt_å≠‰ame
(
tf
);

141 
buf
 = 
	`ªadlöe
("K> ");

142 i‡(
buf
 !
NULL
)

143 i‡(
	`runcmd
(
buf
, 
tf
) < 0)

146 
	}
}

	@kern/monitor.h

1 #i‚de‡
JOS_KERN_MONITOR_H


2 
	#JOS_KERN_MONITOR_H


	)

3 #i‚de‡
JOS_KERNEL


7 
	gTøp‰ame
;

12 
m⁄ô‹
(
Tøp‰ame
 *
tf
);

15 
m⁄_hñp
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
);

16 
m⁄_kînöfo
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
);

17 
m⁄_backåa˚
(
¨gc
, **
¨gv
, 
Tøp‰ame
 *
tf
);

	@kern/mpconfig.c

4 
	~<öc/ty≥s.h
>

5 
	~<öc/°rög.h
>

6 
	~<öc/memœyout.h
>

7 
	~<öc/x86.h
>

8 
	~<öc/mmu.h
>

9 
	~<öc/ív.h
>

10 
	~<kîn/˝u.h
>

11 
	~<kîn/pm≠.h
>

13 
CpuInfo
 
	g˝us
[
NCPU
];

14 
CpuInfo
 *
	gboŸ˝u
;

15 
	gismp
;

16 
	gn˝u
;

19 
	g≥r˝u_k°acks
[
NCPU
][
KSTKSIZE
]

20 
__©åibuã__
 ((
Æig√d
(
PGSIZE
)));

25 
	smp
 {

26 
uöt8_t
 
	msig«tuª
[4];

27 
phyßddr_t
 
	mphyßddr
;

28 
uöt8_t
 
	mÀngth
;

29 
uöt8_t
 
	m•e¸ev
;

30 
uöt8_t
 
	mchecksum
;

31 
uöt8_t
 
	mty≥
;

32 
uöt8_t
 
	mim¸p
;

33 
uöt8_t
 
	mª£rved
[3];

34 } 
__©åibuã__
((
__∑cked__
));

36 
	smpc⁄f
 {

37 
uöt8_t
 
	msig«tuª
[4];

38 
uöt16_t
 
	mÀngth
;

39 
uöt8_t
 
	mvîsi⁄
;

40 
uöt8_t
 
	mchecksum
;

41 
uöt8_t
 
	m¥odu˘
[20];

42 
phyßddr_t
 
	m€mèbÀ
;

43 
uöt16_t
 
	m€mÀngth
;

44 
uöt16_t
 
	míåy
;

45 
phyßddr_t
 
	mœpiˇddr
;

46 
uöt16_t
 
	mxÀngth
;

47 
uöt8_t
 
	mxchecksum
;

48 
uöt8_t
 
	mª£rved
;

49 
uöt8_t
 
	míåõs
[0];

50 } 
__©åibuã__
((
__∑cked__
));

52 
	smµroc
 {

53 
uöt8_t
 
	mty≥
;

54 
uöt8_t
 
	m≠icid
;

55 
uöt8_t
 
	mvîsi⁄
;

56 
uöt8_t
 
	mÊags
;

57 
uöt8_t
 
	msig«tuª
[4];

58 
uöt32_t
 
	m„©uª
;

59 
uöt8_t
 
	mª£rved
[8];

60 } 
__©åibuã__
((
__∑cked__
));

63 
	#MPPROC_BOOT
 0x02

64 

	)

66 
	#MPPROC
 0x00

67 
	#MPBUS
 0x01

68 
	#MPIOAPIC
 0x02

69 
	#MPIOINTR
 0x03

70 
	#MPLINTR
 0x04

71 

	)

72 
uöt8_t


73 
	$sum
(*
addr
, 
Àn
)

75 
i
, 
sum
;

77 
sum
 = 0;

78 
i
 = 0; i < 
Àn
; i++)

79 
sum
 +((
uöt8_t
 *)
addr
)[
i
];

80  
sum
;

81 
	}
}

84 
mp
 *

85 
	$mp£¨ch1
(
phyßddr_t
 
a
, 
Àn
)

87 
mp
 *m∞
	`KADDR
(
a
), *
íd
 = KADDR◊ + 
Àn
);

89 ; 
mp
 < 
íd
; mp++)

90 i‡(
	`memcmp
(
mp
->
sig«tuª
, "_MP_", 4) == 0 &&

91 
	`sum
(
mp
, (*mp)) == 0)

92  
mp
;

93  
NULL
;

94 
	}
}

101 
mp
 *

102 
	$mp£¨ch
()

104 
uöt8_t
 *
bda
;

105 
uöt32_t
 
p
;

106 
mp
 *mp;

108 
	`°©ic_as£π
((*
mp
) == 16);

111 
bda
 = (
uöt8_t
 *Ë
	`KADDR
(0x40 << 4);

115 i‡((
p
 = *(
uöt16_t
 *Ë(
bda
 + 0x0E))) {

116 
p
 <<= 4;

117 i‡((
mp
 = 
	`mp£¨ch1
(
p
, 1024)))

118  
mp
;

122 
p
 = *(
uöt16_t
 *Ë(
bda
 + 0x13) * 1024;

123 i‡((
mp
 = 
	`mp£¨ch1
(
p
 - 1024, 1024)))

124  
mp
;

126  
	`mp£¨ch1
(0xF0000, 0x10000);

127 
	}
}

132 
mpc⁄f
 *

133 
	$mpc⁄fig
(
mp
 **
pmp
)

135 
mpc⁄f
 *
c⁄f
;

136 
mp
 *mp;

138 i‡((
mp
 = 
	`mp£¨ch
()) == 0)

139  
NULL
;

140 i‡(
mp
->
phyßddr
 =0 || mp->
ty≥
 != 0) {

141 
	`˝rötf
("SMP: Default configurationsÇot implemented\n");

142  
NULL
;

144 
c⁄f
 = (
mpc⁄f
 *Ë
	`KADDR
(
mp
->
phyßddr
);

145 i‡(
	`memcmp
(
c⁄f
, "PCMP", 4) != 0) {

146 
	`˝rötf
("SMP: Incorrect MP configurationÅable signature\n");

147  
NULL
;

149 i‡(
	`sum
(
c⁄f
, c⁄f->
Àngth
) != 0) {

150 
	`˝rötf
("SMP: Bad MP configuration checksum\n");

151  
NULL
;

153 i‡(
c⁄f
->
vîsi⁄
 != 1 && conf->version != 4) {

154 
	`˝rötf
("SMP: Unsuµ‹ãd MP vîsi⁄ %d\n", 
c⁄f
->
vîsi⁄
);

155  
NULL
;

157 i‡(
	`sum
((
uöt8_t
 *)
c⁄f
 + c⁄f->
Àngth
, c⁄f->
xÀngth
Ë!c⁄f->
xchecksum
) {

158 
	`˝rötf
("SMP: Bad MP configurationÉxtended checksum\n");

159  
NULL
;

161 *
pmp
 = 
mp
;

162  
c⁄f
;

163 
	}
}

166 
	$mp_öô
()

168 
mp
 *mp;

169 
mpc⁄f
 *
c⁄f
;

170 
mµroc
 *
¥oc
;

171 
uöt8_t
 *
p
;

172 
i
;

174 
boŸ˝u
 = &
˝us
[0];

175 i‡((
c⁄f
 = 
	`mpc⁄fig
(&
mp
)) == 0)

177 
ismp
 = 1;

178 
œpiˇddr
 = 
c⁄f
->lapicaddr;

180 
p
 = 
c⁄f
->
íåõs
, 
i
 = 0; i < c⁄f->
íåy
; i++) {

181 *
p
) {

182 
MPPROC
:

183 
¥oc
 = (
mµroc
 *)
p
;

184 i‡(
¥oc
->
Êags
 & 
MPPROC_BOOT
)

185 
boŸ˝u
 = &
˝us
[
n˝u
];

186 i‡(
n˝u
 < 
NCPU
) {

187 
˝us
[
n˝u
].
˝u_id
 =Çcpu;

188 
n˝u
++;

190 
	`˝rötf
("SMP:Åoo many CPUs, CPU %d disabled\n",

191 
¥oc
->
≠icid
);

193 
p
 +(
mµroc
);

195 
MPBUS
:

196 
MPIOAPIC
:

197 
MPIOINTR
:

198 
MPLINTR
:

199 
p
 += 8;

202 
	`˝rötf
("mpöô: unknow¿c⁄figÅy≥ %x\n", *
p
);

203 
ismp
 = 0;

204 
i
 = 
c⁄f
->
íåy
;

208 
boŸ˝u
->
˝u_°©us
 = 
CPU_STARTED
;

209 i‡(!
ismp
) {

211 
n˝u
 = 1;

212 
œpiˇddr
 = 0;

213 
	`˝rötf
("SMP: configurationÇot found, SMP disabled\n");

216 
	`˝rötf
("SMP: CPU %d found %d CPU(s)\n", 
boŸ˝u
->
˝u_id
, 
n˝u
);

218 i‡(
mp
->
im¸p
) {

221 
	`˝rötf
("SMP: Setting IMCRÅo switch from PIC modeÅo symmetric I/O mode\n");

222 
	`outb
(0x22, 0x70);

223 
	`outb
(0x23, 
	`öb
(0x23) | 1);

225 
	}
}

	@kern/picirq.c

3 
	~<öc/as£π.h
>

4 
	~<öc/å≠.h
>

6 
	~<kîn/picúq.h
>

11 
uöt16_t
 
	gúq_mask_8259A
 = 0xFFFF & ~(1<<
IRQ_SLAVE
);

12 
boﬁ
 
	gdidöô
;

16 
	$pic_öô
()

18 
didöô
 = 1;

21 
	`outb
(
IO_PIC1
+1, 0xFF);

22 
	`outb
(
IO_PIC2
+1, 0xFF);

30 
	`outb
(
IO_PIC1
, 0x11);

33 
	`outb
(
IO_PIC1
+1, 
IRQ_OFFSET
);

37 
	`outb
(
IO_PIC1
+1, 1<<
IRQ_SLAVE
);

47 
	`outb
(
IO_PIC1
+1, 0x3);

50 
	`outb
(
IO_PIC2
, 0x11);

51 
	`outb
(
IO_PIC2
+1, 
IRQ_OFFSET
 + 8);

52 
	`outb
(
IO_PIC2
+1, 
IRQ_SLAVE
);

55 
	`outb
(
IO_PIC2
+1, 0x01);

61 
	`outb
(
IO_PIC1
, 0x68);

62 
	`outb
(
IO_PIC1
, 0x0a);

64 
	`outb
(
IO_PIC2
, 0x68);

65 
	`outb
(
IO_PIC2
, 0x0a);

67 i‡(
úq_mask_8259A
 != 0xFFFF)

68 
	`úq_£tmask_8259A
(
úq_mask_8259A
);

69 
	}
}

72 
	$úq_£tmask_8259A
(
uöt16_t
 
mask
)

74 
i
;

75 
úq_mask_8259A
 = 
mask
;

76 i‡(!
didöô
)

78 
	`outb
(
IO_PIC1
+1, ()
mask
);

79 
	`outb
(
IO_PIC2
+1, ()(
mask
 >> 8));

80 
	`˝rötf
("enabled interrupts:");

81 
i
 = 0; i < 16; i++)

82 i‡(~
mask
 & (1<<
i
))

83 
	`˝rötf
(" %d", 
i
);

84 
	`˝rötf
("\n");

85 
	}
}

	@kern/picirq.h

3 #i‚de‡
JOS_KERN_PICIRQ_H


4 
	#JOS_KERN_PICIRQ_H


	)

5 #i‚de‡
JOS_KERNEL


9 
	#MAX_IRQS
 16

10 

	)

12 
	#IO_PIC1
 0x20

13 
	#IO_PIC2
 0xA0

14 

	)

15 
	#IRQ_SLAVE
 2

16 

	)

18 #i‚de‡
__ASSEMBLER__


20 
	~<öc/ty≥s.h
>

21 
	~<öc/x86.h
>

23 
uöt16_t
 
úq_mask_8259A
;

24 
pic_öô
();

25 
úq_£tmask_8259A
(
uöt16_t
 
mask
);

	@kern/pmap.c

3 
	~<öc/x86.h
>

4 
	~<öc/mmu.h
>

5 
	~<öc/îr‹.h
>

6 
	~<öc/°rög.h
>

7 
	~<öc/as£π.h
>

9 
	~<kîn/pm≠.h
>

10 
	~<kîn/k˛ock.h
>

11 
	~<kîn/ív.h
>

12 
	~<kîn/˝u.h
>

15 
size_t
 
	g≈ages
;

16 
size_t
 
	g≈ages_ba£mem
;

19 
pde_t
 *
	gkîn_pgdú
;

20 
PageInfo
 *
	g∑ges
;

21 
PageInfo
 *
	g∑ge_‰ì_li°
;

29 
	$nvøm_ªad
(
r
)

31  
	`mc146818_ªad
(
r
) | (mc146818_read(r + 1) << 8);

32 
	}
}

35 
	$i386_dëe˘_mem‹y
()

37 
size_t
 
≈ages_extmem
;

41 
≈ages_ba£mem
 = (
	`nvøm_ªad
(
NVRAM_BASELO
Ë* 1024Ë/ 
PGSIZE
;

42 
≈ages_extmem
 = (
	`nvøm_ªad
(
NVRAM_EXTLO
Ë* 1024Ë/ 
PGSIZE
;

46 i‡(
≈ages_extmem
)

47 
≈ages
 = (
EXTPHYSMEM
 / 
PGSIZE
Ë+ 
≈ages_extmem
;

49 
≈ages
 = 
≈ages_ba£mem
;

51 
	`˝rötf
("Physical memory: %uKávailable, base = %uK,Éxtended = %uK\n",

52 
≈ages
 * 
PGSIZE
 / 1024,

53 
≈ages_ba£mem
 * 
PGSIZE
 / 1024,

54 
≈ages_extmem
 * 
PGSIZE
 / 1024);

55 
	}
}

62 
mem_öô_mp
();

63 
boŸ_m≠_ªgi⁄
(
pde_t
 *
pgdú
, 
uöçå_t
 
va
, 
size_t
 
size
, 
phyßddr_t
 
∑
, 
≥rm
);

64 
check_∑ge_‰ì_li°
(
boﬁ
 
⁄ly_low_mem‹y
);

65 
check_∑ge_Æloc
();

66 
check_kîn_pgdú
();

67 
phyßddr_t
 
check_va2∑
(
pde_t
 *
pgdú
, 
uöçå_t
 
va
);

68 
check_∑ge
();

69 
check_∑ge_ö°ÆÀd_pgdú
();

84 
	$boŸ_Æloc
(
uöt32_t
 
n
)

86 *
√xt‰ì
;

87 *
ªsu…
;

94 i‡(!
√xt‰ì
) {

95 
íd
[];

96 
√xt‰ì
 = 
	`ROUNDUP
((*Ë
íd
, 
PGSIZE
);

104 
√xt‰ì
 = 
	`ROUNDUP
((*Ë√xt‰ì, 
PGSIZE
);

105 
ªsu…
 = 
√xt‰ì
;

106 
√xt‰ì
 +
n
;

107 i‡(
	`PADDR
(
√xt‰ì
Ë>
≈ages
 * 
PGSIZE
)

108 
	`∑nic
("NoÉnough memory");

109  
ªsu…
;

110 
	}
}

122 
	$mem_öô
()

124 
uöt32_t
 
¸0
;

125 
size_t
 
n
;

128 
	`i386_dëe˘_mem‹y
();

135 
kîn_pgdú
 = (
pde_t
 *Ë
	`boŸ_Æloc
(
PGSIZE
);

136 
	`mem£t
(
kîn_pgdú
, 0, 
PGSIZE
);

145 
kîn_pgdú
[
	`PDX
(
UVPT
)] = 
	`PADDR
(kîn_pgdúË| 
PTE_U
 | 
PTE_P
;

153 
∑ges
 = 
	`boŸ_Æloc
(
≈ages
 * (
PageInfo
));

158 
ívs
 = 
	`boŸ_Æloc
(
NENV
 * (
Env
));

166 
	`∑ge_öô
();

168 
	`check_∑ge_‰ì_li°
(1);

169 
	`check_∑ge_Æloc
();

170 
	`check_∑ge
();

182 
	`boŸ_m≠_ªgi⁄
(
kîn_pgdú
, 
UPAGES
,

183 
	`ROUNDUP
(
≈ages
 * (
PageInfo
), 
PGSIZE
),

184 
	`PADDR
(
∑ges
), 
PTE_U
);

193 
	`boŸ_m≠_ªgi⁄
(
kîn_pgdú
, 
UENVS
,

194 
	`ROUNDUP
(
NENV
 * (
Env
), 
PGSIZE
),

195 
	`PADDR
(
ívs
), 
PTE_U
);

208 
	`boŸ_m≠_ªgi⁄
(
kîn_pgdú
, 
KSTACKTOP
 - 
KSTKSIZE
,

209 
	`ROUNDUP
(
KSTKSIZE
, 
PGSIZE
),

210 
	`PADDR
(
boŸ°ack
), 
PTE_W
);

220 
	`boŸ_m≠_ªgi⁄
(
kîn_pgdú
, 
KERNBASE
, 0x10000000, 0, 
PTE_W
);

223 
	`mem_öô_mp
();

226 
	`check_kîn_pgdú
();

235 
	`l¸3
(
	`PADDR
(
kîn_pgdú
));

237 
	`check_∑ge_‰ì_li°
(0);

241 
¸0
 = 
	`r¸0
();

242 
¸0
 |
CR0_PE
|
CR0_PG
|
CR0_AM
|
CR0_WP
|
CR0_NE
|
CR0_MP
;

243 
¸0
 &~(
CR0_TS
|
CR0_EM
);

244 
	`l¸0
(
¸0
);

247 
	`check_∑ge_ö°ÆÀd_pgdú
();

248 
	}
}

254 
	$mem_öô_mp
()

272 
i
;

273 
i
 = 0; i < 
NCPU
; i++)

274 
	`boŸ_m≠_ªgi⁄
(
kîn_pgdú
,

275 
KSTACKTOP
 - 
i
 * (
KSTKSIZE
 + 
KSTKGAP
) - KSTKSIZE,

276 
	`ROUNDUP
(
KSTKSIZE
, 
PGSIZE
), 
	`PADDR
(
≥r˝u_k°acks
[
i
]), 
PTE_W
);

278 
	}
}

293 
	$∑ge_öô
()

316 
size_t
 
i
, 
n
;

317 
i
 = 0; i < 
≈ages
; i++) {

318 
∑ges
[
i
].
µ_ªf
 = 0;

319 
∑ges
[
i
].
µ_lök
 = 
∑ge_‰ì_li°
;

320 
∑ge_‰ì_li°
 = &
∑ges
[
i
];

322 
n
 = 
	`ROUNDUP
(
	`PADDR
(
∑ges
 + 
≈ages
 * (
PageInfo
)), 
PGSIZE
) / PGSIZE;

323 
∑ges
[
n
].
µ_lök
 = &∑ges[
≈ages_ba£mem
-1];

324 
∑ges
[
MPENTRY_PADDR
 / 
PGSIZE
 + 1].
µ_lök
 = &pages[MPENTRY_PADDR / PGSIZE - 1];

325 
∑ges
[1].
µ_lök
 = 
NULL
;

326 
	}
}

337 
PageInfo
 *

338 
	$∑ge_Æloc
(
Æloc_Êags
)

341 
PageInfo
 *
µ
;

342 if(
∑ge_‰ì_li°
){

343 
µ
 = 
∑ge_‰ì_li°
;

344 
∑ge_‰ì_li°
 =Öage_‰ì_li° -> 
µ_lök
;

345 if(
Æloc_Êags
 & 
ALLOC_ZERO
)

346 
	`mem£t
(
	`∑ge2kva
(
µ
), 0, 
PGSIZE
);

347  
µ
;

349  
NULL
;

350 
	}
}

357 
	$∑ge_‰ì
(
PageInfo
 *
µ
)

360 
µ
->
µ_lök
 = 
∑ge_‰ì_li°
;

361 
∑ge_‰ì_li°
 = 
µ
;

362 
	}
}

369 
	$∑ge_de¸ef
(
PageInfo
* 
µ
)

371 i‡(--
µ
->
µ_ªf
 == 0)

372 
	`∑ge_‰ì
(
µ
);

373 
	}
}

397 
±e_t
 *

398 
	$pgdú_wÆk
(
pde_t
 *
pgdú
, c⁄° *
va
, 
¸óã
)

401 
PageInfo
 *
µ
;

402 
±e_t
 *
±e
;

403 if(
pgdú
[
	`PDX
(
va
)] == 0){

404 if(
¸óã
 =
Ál£
)

405  
NULL
;

406 if(((
µ
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
))) == 0)

407  
NULL
;

408 
pgdú
[
	`PDX
(
va
)] = 
	`∑ge2∑
(
µ
Ë| 
PTE_U
 | 
PTE_W
 | 
PTE_P
;

409 
µ
->
µ_ªf
 = 1;

410 
±e
 = 
	`∑ge2kva
(
µ
);

412 
±e
 = 
	`KADDR
(
	`PTE_ADDR
(
pgdú
[
	`PDX
(
va
)]));

413  
±e
 + 
	`PTX
(
va
);

414 
	}
}

427 
	$boŸ_m≠_ªgi⁄
(
pde_t
 *
pgdú
, 
uöçå_t
 
va
, 
size_t
 
size
, 
phyßddr_t
 
∑
, 
≥rm
)

430 
uöt32_t
 
i
;

431 
±e_t
 *
±e
;

432 if(
size
 % 
PGSIZE
 != 0)

433 
	`∑nic
("Size isÇotá multiple of PGSIZE.");

434 
i
 = 0; i < 
size
; i +
PGSIZE
){

435 
±e
 = 
	`pgdú_wÆk
(
pgdú
, (*)(
va
 + 
i
), 1);

436 if(
±e
 =
NULL
)

437 
	`∑nic
("Can't getÖageÅableÖage!");

438 *
±e
 = (
∑
 + 
i
Ë| 
≥rm
 | 
PTE_P
;

440 
	}
}

468 
	$∑ge_ö£π
(
pde_t
 *
pgdú
, 
PageInfo
 *
µ
, *
va
, 
≥rm
)

471 
±e_t
 *
±e
;

472 
±e
 = 
	`pgdú_wÆk
(
pgdú
, (*)
va
, 1);

473 if(
±e
 =
NULL
)

474  -
E_NO_MEM
;

475 if(*
±e
 != 0){

476 if(
	`PTE_ADDR
(*
±e
Ë=
	`∑ge2∑
(
µ
))

477 
µ
->
µ_ªf
--;

479 
	`∑ge_ªmove
(
pgdú
, (*)
va
);

480 if(
µ
->
µ_ªf
 != 0)

481 
	`éb_övÆid©e
(
pgdú
, (*)
va
);

484 
µ
->
µ_ªf
++;

485 *
±e
 = 
	`∑ge2∑
(
µ
Ë| 
≥rm
 | 
PTE_P
;

487 
	}
}

500 
PageInfo
 *

501 
	$∑ge_lookup
(
pde_t
 *
pgdú
, *
va
, 
±e_t
 **
±e_°‹e
)

504 
±e_t
 *
±e
;

505 
±e
 = 
	`pgdú_wÆk
(
pgdú
, (*)
va
, 0);

506 if(
±e
 == 0 || *pte == 0)

507  
NULL
;

508 if(*
±e_°‹e
)

509 *
±e_°‹e
 = 
±e
;

510  
	`∑2∑ge
(
	`PTE_ADDR
(*
±e
));

511 
	}
}

529 
	$∑ge_ªmove
(
pde_t
 *
pgdú
, *
va
)

532 
PageInfo
 *
µ
;

533 
±e_t
 *
±e
;

535 if((
µ
 = 
	`∑ge_lookup
(
pgdú
, (*)
va
, &
±e
)) == 0)

537 i‡(
±e
 =
NULL
)

539 
	`∑ge_de¸ef
(
µ
);

540 *
±e
 = 0;

541 
	`éb_övÆid©e
(
pgdú
, 
va
);

542 
	}
}

549 
	$éb_övÆid©e
(
pde_t
 *
pgdú
, *
va
)

552 i‡(!
cuªnv
 || cuªnv->
ív_pgdú
 =
pgdú
)

553 
	`övÕg
(
va
);

554 
	}
}

562 
	$mmio_m≠_ªgi⁄
(
phyßddr_t
 
∑
, 
size_t
 
size
)

568 
uöçå_t
 
ba£
 = 
MMIOBASE
;

588 *
ªsu…
;

590 
size
 = 
	`ROUNDUP
(size, 
PGSIZE
);

591 
	`boŸ_m≠_ªgi⁄
(
kîn_pgdú
, 
ba£
, 
size
, 
∑
, 
PTE_PCD
|
PTE_PWT
|
PTE_W
);

592 
ªsu…
 = (*)
ba£
;

593 
ba£
 +
size
;

594  
ªsu…
;

596 
	}
}

598 
uöçå_t
 
	gu£r_mem_check_addr
;

619 
	$u£r_mem_check
(
Env
 *
ív
, c⁄° *
va
, 
size_t
 
Àn
, 
≥rm
)

622 
i
;

623 
uöt32_t
 
addr
;

624 
±e_t
 *
±e
;

626 
addr
 = (
uöt32_t
)
	`ROUNDDOWN
(
va
, 
PGSIZE
);

627 
≥rm
 |
PTE_P
;

628 
i
 = 0; i <
Àn
 / 
PGSIZE
; i++, 
addr
 += i * PGSIZE){

629 i‡(
va
 >(*)
ULIM
){

630 
u£r_mem_check_addr
 = (
uöçå_t
)
va
 > 
addr
 ? (uintptr_t)va :áddr;

631  -
E_FAULT
;

633 
±e
 = 
	`pgdú_wÆk
(
ív
->
ív_pgdú
, (*)
addr
, 0);

634 i‡(
±e
 =
NULL
 || (*±ê& 
≥rm
) !=Öerm) {

635 
u£r_mem_check_addr
 = (
uöçå_t
)
va
 > 
addr
 ? (uintptr_t)va :áddr;

636  -
E_FAULT
;

640 
	}
}

650 
	$u£r_mem_as£π
(
Env
 *
ív
, c⁄° *
va
, 
size_t
 
Àn
, 
≥rm
)

652 i‡(
	`u£r_mem_check
(
ív
, 
va
, 
Àn
, 
≥rm
 | 
PTE_U
) < 0) {

653 
	`˝rötf
("[%08x] user_mem_checkássertion failure for "

654 "v®%08x\n", 
ív
->
ív_id
, 
u£r_mem_check_addr
);

655 
	`ív_de°roy
(
ív
);

657 
	}
}

668 
	$check_∑ge_‰ì_li°
(
boﬁ
 
⁄ly_low_mem‹y
)

670 
PageInfo
 *
µ
;

671 
pdx_limô
 = 
⁄ly_low_mem‹y
 ? 1 : 
NPDENTRIES
;

672 
n‰ì_ba£mem
 = 0, 
n‰ì_extmem
 = 0;

673 *
fú°_‰ì_∑ge
;

675 i‡(!
∑ge_‰ì_li°
)

676 
	`∑nic
("'page_free_list' isáÇullÖointer!");

677 i‡(
⁄ly_low_mem‹y
) {

680 
PageInfo
 *
µ1
, *
µ2
;

681 
PageInfo
 **
ç
[2] = { &
µ1
, &
µ2
 };

682 
µ
 = 
∑ge_‰ì_li°
;Öp;Ö∞µ->
µ_lök
) {

683 
∑gëy≥
 = 
	`PDX
(
	`∑ge2∑
(
µ
)Ë>
pdx_limô
;

684 *
ç
[
∑gëy≥
] = 
µ
;

685 
ç
[
∑gëy≥
] = &
µ
->
µ_lök
;

687 *
ç
[1] = 0;

688 *
ç
[0] = 
µ2
;

689 
∑ge_‰ì_li°
 = 
µ1
;

694 
µ
 = 
∑ge_‰ì_li°
;Öp;Ö∞µ->
µ_lök
)

695 i‡(
	`PDX
(
	`∑ge2∑
(
µ
)Ë< 
pdx_limô
)

696 
	`mem£t
(
	`∑ge2kva
(
µ
), 0x97, 128);

697 
fú°_‰ì_∑ge
 = (*Ë
	`boŸ_Æloc
(0);

698 
µ
 = 
∑ge_‰ì_li°
;Öp;Ö∞µ->
µ_lök
) {

701 
	`as£π
(
µ
 >
∑ges
);

702 
	`as£π
(
µ
 < 
∑ges
 + 
≈ages
);

703 
	`as£π
(((*Ë
µ
 - (*Ë
∑ges
) % (*pp) == 0);

706 
	`as£π
(
	`∑ge2∑
(
µ
) != 0);

707 
	`as£π
(
	`∑ge2∑
(
µ
Ë!
IOPHYSMEM
);

708 
	`as£π
(
	`∑ge2∑
(
µ
Ë!
EXTPHYSMEM
 - 
PGSIZE
);

709 
	`as£π
(
	`∑ge2∑
(
µ
Ë!
EXTPHYSMEM
);

710 
	`as£π
(
	`∑ge2∑
(
µ
Ë< 
EXTPHYSMEM
 || (*Ë
	`∑ge2kva
’pË>
fú°_‰ì_∑ge
);

712 
	`as£π
(
	`∑ge2∑
(
µ
Ë!
MPENTRY_PADDR
);

714 i‡(
	`∑ge2∑
(
µ
Ë< 
EXTPHYSMEM
)

715 ++
n‰ì_ba£mem
;

717 ++
n‰ì_extmem
;

719 
	`as£π
(
n‰ì_ba£mem
 > 0);

720 
	`as£π
(
n‰ì_extmem
 > 0);

721 
	}
}

728 
	$check_∑ge_Æloc
()

730 
PageInfo
 *
µ
, *
µ0
, *
µ1
, *
µ2
;

731 
n‰ì
;

732 
PageInfo
 *
Ê
;

733 *
c
;

734 
i
;

736 i‡(!
∑ges
)

737 
	`∑nic
("'pages' isáÇullÖointer!");

740 
µ
 = 
∑ge_‰ì_li°
, 
n‰ì
 = 0;Öp;Ö∞µ->
µ_lök
)

741 ++
n‰ì
;

744 
µ0
 = 
µ1
 = 
µ2
 = 0;

745 
	`as£π
((
µ0
 = 
	`∑ge_Æloc
(0)));

746 
	`as£π
((
µ1
 = 
	`∑ge_Æloc
(0)));

747 
	`as£π
((
µ2
 = 
	`∑ge_Æloc
(0)));

749 
	`as£π
(
µ0
);

750 
	`as£π
(
µ1
 &&Öp1 !
µ0
);

751 
	`as£π
(
µ2
 &&Öp2 !
µ1
 &&Öp2 !
µ0
);

752 
	`as£π
(
	`∑ge2∑
(
µ0
Ë< 
≈ages
*
PGSIZE
);

753 
	`as£π
(
	`∑ge2∑
(
µ1
Ë< 
≈ages
*
PGSIZE
);

754 
	`as£π
(
	`∑ge2∑
(
µ2
Ë< 
≈ages
*
PGSIZE
);

757 
Ê
 = 
∑ge_‰ì_li°
;

758 
∑ge_‰ì_li°
 = 0;

761 
	`as£π
(!
	`∑ge_Æloc
(0));

764 
	`∑ge_‰ì
(
µ0
);

765 
	`∑ge_‰ì
(
µ1
);

766 
	`∑ge_‰ì
(
µ2
);

767 
µ0
 = 
µ1
 = 
µ2
 = 0;

768 
	`as£π
((
µ0
 = 
	`∑ge_Æloc
(0)));

769 
	`as£π
((
µ1
 = 
	`∑ge_Æloc
(0)));

770 
	`as£π
((
µ2
 = 
	`∑ge_Æloc
(0)));

771 
	`as£π
(
µ0
);

772 
	`as£π
(
µ1
 &&Öp1 !
µ0
);

773 
	`as£π
(
µ2
 &&Öp2 !
µ1
 &&Öp2 !
µ0
);

774 
	`as£π
(!
	`∑ge_Æloc
(0));

777 
	`mem£t
(
	`∑ge2kva
(
µ0
), 1, 
PGSIZE
);

778 
	`∑ge_‰ì
(
µ0
);

779 
	`as£π
((
µ
 = 
	`∑ge_Æloc
(
ALLOC_ZERO
)));

780 
	`as£π
(
µ
 && 
µ0
 ==Öp);

781 
c
 = 
	`∑ge2kva
(
µ
);

782 
i
 = 0; i < 
PGSIZE
; i++)

783 
	`as£π
(
c
[
i
] == 0);

786 
∑ge_‰ì_li°
 = 
Ê
;

789 
	`∑ge_‰ì
(
µ0
);

790 
	`∑ge_‰ì
(
µ1
);

791 
	`∑ge_‰ì
(
µ2
);

794 
µ
 = 
∑ge_‰ì_li°
;Öp;Ö∞µ->
µ_lök
)

795 --
n‰ì
;

796 
	`as£π
(
n‰ì
 == 0);

798 
	`˝rötf
("check_page_alloc() succeeded!\n");

799 
	}
}

810 
	$check_kîn_pgdú
()

812 
uöt32_t
 
i
, 
n
;

813 
pde_t
 *
pgdú
;

815 
pgdú
 = 
kîn_pgdú
;

818 
n
 = 
	`ROUNDUP
(
≈ages
*(
PageInfo
), 
PGSIZE
);

819 
i
 = 0; i < 
n
; i +
PGSIZE
)

820 
	`as£π
(
	`check_va2∑
(
pgdú
, 
UPAGES
 + 
i
Ë=
	`PADDR
(
∑ges
) + i);

823 
n
 = 
	`ROUNDUP
(
NENV
*(
Env
), 
PGSIZE
);

824 
i
 = 0; i < 
n
; i +
PGSIZE
)

825 
	`as£π
(
	`check_va2∑
(
pgdú
, 
UENVS
 + 
i
Ë=
	`PADDR
(
ívs
) + i);

828 
i
 = 0; i < 
≈ages
 * 
PGSIZE
; i += PGSIZE)

829 
	`as£π
(
	`check_va2∑
(
pgdú
, 
KERNBASE
 + 
i
) == i);

833 
n
 = 0;Ç < 
NCPU
;Ç++) {

834 
uöt32_t
 
ba£
 = 
KSTACKTOP
 - (
KSTKSIZE
 + 
KSTKGAP
Ë* (
n
 + 1);

835 
i
 = 0; i < 
KSTKSIZE
; i +
PGSIZE
)

836 
	`as£π
(
	`check_va2∑
(
pgdú
, 
ba£
 + 
KSTKGAP
 + 
i
)

837 =
	`PADDR
(
≥r˝u_k°acks
[
n
]Ë+ 
i
);

838 
i
 = 0; i < 
KSTKGAP
; i +
PGSIZE
)

839 
	`as£π
(
	`check_va2∑
(
pgdú
, 
ba£
 + 
i
) == ~0);

843 
i
 = 0; i < 
NPDENTRIES
; i++) {

844 
i
) {

845 
	`PDX
(
UVPT
):

846 
	`PDX
(
KSTACKTOP
-1):

847 
	`PDX
(
UPAGES
):

848 
	`PDX
(
UENVS
):

849 
	`PDX
(
MMIOBASE
):

850 
	`as£π
(
pgdú
[
i
] & 
PTE_P
);

853 i‡(
i
 >
	`PDX
(
KERNBASE
)) {

854 
	`as£π
(
pgdú
[
i
] & 
PTE_P
);

855 
	`as£π
(
pgdú
[
i
] & 
PTE_W
);

857 
	`as£π
(
pgdú
[
i
] == 0);

861 
	`˝rötf
("check_kern_pgdir() succeeded!\n");

862 
	}
}

869 
phyßddr_t


870 
	$check_va2∑
(
pde_t
 *
pgdú
, 
uöçå_t
 
va
)

872 
±e_t
 *
p
;

874 
pgdú
 = &pgdú[
	`PDX
(
va
)];

875 i‡(!(*
pgdú
 & 
PTE_P
))

877 
p
 = (
±e_t
*Ë
	`KADDR
(
	`PTE_ADDR
(*
pgdú
));

878 i‡(!(
p
[
	`PTX
(
va
)] & 
PTE_P
))

880  
	`PTE_ADDR
(
p
[
	`PTX
(
va
)]);

881 
	}
}

886 
	$check_∑ge
()

888 
PageInfo
 *
µ
, *
µ0
, *
µ1
, *
µ2
;

889 
PageInfo
 *
Ê
;

890 
±e_t
 *
±ï
, *
±ï1
;

891 *
va
;

892 
uöçå_t
 
mm1
, 
mm2
;

893 
i
;

894 
pde_t
 
íåy_pgdú
[];

897 
µ0
 = 
µ1
 = 
µ2
 = 0;

898 
	`as£π
((
µ0
 = 
	`∑ge_Æloc
(0)));

899 
	`as£π
((
µ1
 = 
	`∑ge_Æloc
(0)));

900 
	`as£π
((
µ2
 = 
	`∑ge_Æloc
(0)));

902 
	`as£π
(
µ0
);

903 
	`as£π
(
µ1
 &&Öp1 !
µ0
);

904 
	`as£π
(
µ2
 &&Öp2 !
µ1
 &&Öp2 !
µ0
);

907 
Ê
 = 
∑ge_‰ì_li°
;

908 
∑ge_‰ì_li°
 = 0;

911 
	`as£π
(!
	`∑ge_Æloc
(0));

914 
	`as£π
(
	`∑ge_lookup
(
kîn_pgdú
, (*Ë0x0, &
±ï
Ë=
NULL
);

917 
	`as£π
(
	`∑ge_ö£π
(
kîn_pgdú
, 
µ1
, 0x0, 
PTE_W
) < 0);

920 
	`∑ge_‰ì
(
µ0
);

921 
	`as£π
(
	`∑ge_ö£π
(
kîn_pgdú
, 
µ1
, 0x0, 
PTE_W
) == 0);

922 
	`as£π
(
	`PTE_ADDR
(
kîn_pgdú
[0]Ë=
	`∑ge2∑
(
µ0
));

923 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 0x0Ë=
	`∑ge2∑
(
µ1
));

924 
	`as£π
(
µ1
->
µ_ªf
 == 1);

925 
	`as£π
(
µ0
->
µ_ªf
 == 1);

928 
	`as£π
(
	`∑ge_ö£π
(
kîn_pgdú
, 
µ2
, (*Ë
PGSIZE
, 
PTE_W
) == 0);

929 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ2
));

930 
	`as£π
(
µ2
->
µ_ªf
 == 1);

933 
	`as£π
(!
	`∑ge_Æloc
(0));

936 
	`as£π
(
	`∑ge_ö£π
(
kîn_pgdú
, 
µ2
, (*Ë
PGSIZE
, 
PTE_W
) == 0);

937 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ2
));

938 
	`as£π
(
µ2
->
µ_ªf
 == 1);

942 
	`as£π
(!
	`∑ge_Æloc
(0));

945 
±ï
 = (
±e_t
 *Ë
	`KADDR
(
	`PTE_ADDR
(
kîn_pgdú
[
	`PDX
(
PGSIZE
)]));

946 
	`as£π
(
	`pgdú_wÆk
(
kîn_pgdú
, (*)
PGSIZE
, 0Ë=
±ï
+
	`PTX
(PGSIZE));

949 
	`as£π
(
	`∑ge_ö£π
(
kîn_pgdú
, 
µ2
, (*Ë
PGSIZE
, 
PTE_W
|
PTE_U
) == 0);

950 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ2
));

951 
	`as£π
(
µ2
->
µ_ªf
 == 1);

952 
	`as£π
(*
	`pgdú_wÆk
(
kîn_pgdú
, (*Ë
PGSIZE
, 0Ë& 
PTE_U
);

953 
	`as£π
(
kîn_pgdú
[0] & 
PTE_U
);

956 
	`as£π
(
	`∑ge_ö£π
(
kîn_pgdú
, 
µ2
, (*Ë
PGSIZE
, 
PTE_W
) == 0);

957 
	`as£π
(*
	`pgdú_wÆk
(
kîn_pgdú
, (*Ë
PGSIZE
, 0Ë& 
PTE_W
);

958 
	`as£π
(!(*
	`pgdú_wÆk
(
kîn_pgdú
, (*Ë
PGSIZE
, 0Ë& 
PTE_U
));

961 
	`as£π
(
	`∑ge_ö£π
(
kîn_pgdú
, 
µ0
, (*Ë
PTSIZE
, 
PTE_W
) < 0);

964 
	`as£π
(
	`∑ge_ö£π
(
kîn_pgdú
, 
µ1
, (*Ë
PGSIZE
, 
PTE_W
) == 0);

965 
	`as£π
(!(*
	`pgdú_wÆk
(
kîn_pgdú
, (*Ë
PGSIZE
, 0Ë& 
PTE_U
));

968 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 0Ë=
	`∑ge2∑
(
µ1
));

969 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ1
));

971 
	`as£π
(
µ1
->
µ_ªf
 == 2);

972 
	`as£π
(
µ2
->
µ_ªf
 == 0);

975 
	`as£π
((
µ
 = 
	`∑ge_Æloc
(0)Ë&&Ö∞=
µ2
);

978 
	`∑ge_ªmove
(
kîn_pgdú
, 0x0);

979 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 0x0) == ~0);

980 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 
PGSIZE
Ë=
	`∑ge2∑
(
µ1
));

981 
	`as£π
(
µ1
->
µ_ªf
 == 1);

982 
	`as£π
(
µ2
->
µ_ªf
 == 0);

985 
	`∑ge_ªmove
(
kîn_pgdú
, (*Ë
PGSIZE
);

986 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 0x0) == ~0);

987 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 
PGSIZE
) == ~0);

988 
	`as£π
(
µ1
->
µ_ªf
 == 0);

989 
	`as£π
(
µ2
->
µ_ªf
 == 0);

992 
	`as£π
((
µ
 = 
	`∑ge_Æloc
(0)Ë&&Ö∞=
µ1
);

995 
	`as£π
(!
	`∑ge_Æloc
(0));

998 
	`as£π
(
	`PTE_ADDR
(
kîn_pgdú
[0]Ë=
	`∑ge2∑
(
µ0
));

999 
kîn_pgdú
[0] = 0;

1000 
	`as£π
(
µ0
->
µ_ªf
 == 1);

1001 
µ0
->
µ_ªf
 = 0;

1004 
	`∑ge_‰ì
(
µ0
);

1005 
va
 = (*)(
PGSIZE
 * 
NPDENTRIES
 + PGSIZE);

1006 
±ï
 = 
	`pgdú_wÆk
(
kîn_pgdú
, 
va
, 1);

1007 
±ï1
 = (
±e_t
 *Ë
	`KADDR
(
	`PTE_ADDR
(
kîn_pgdú
[
	`PDX
(
va
)]));

1008 
	`as£π
(
±ï
 =
±ï1
 + 
	`PTX
(
va
));

1009 
kîn_pgdú
[
	`PDX
(
va
)] = 0;

1010 
µ0
->
µ_ªf
 = 0;

1013 
	`mem£t
(
	`∑ge2kva
(
µ0
), 0xFF, 
PGSIZE
);

1014 
	`∑ge_‰ì
(
µ0
);

1015 
	`pgdú_wÆk
(
kîn_pgdú
, 0x0, 1);

1016 
±ï
 = (
±e_t
 *Ë
	`∑ge2kva
(
µ0
);

1017 
i
=0; i<
NPTENTRIES
; i++)

1018 
	`as£π
((
±ï
[
i
] & 
PTE_P
) == 0);

1019 
kîn_pgdú
[0] = 0;

1020 
µ0
->
µ_ªf
 = 0;

1023 
∑ge_‰ì_li°
 = 
Ê
;

1026 
	`∑ge_‰ì
(
µ0
);

1027 
	`∑ge_‰ì
(
µ1
);

1028 
	`∑ge_‰ì
(
µ2
);

1031 
mm1
 = (
uöçå_t
Ë
	`mmio_m≠_ªgi⁄
(0, 4097);

1032 
mm2
 = (
uöçå_t
Ë
	`mmio_m≠_ªgi⁄
(0, 4096);

1034 
	`as£π
(
mm1
 >
MMIOBASE
 && mm1 + 8096 < 
MMIOLIM
);

1035 
	`as£π
(
mm2
 >
MMIOBASE
 && mm2 + 8096 < 
MMIOLIM
);

1037 
	`as£π
(
mm1
 % 
PGSIZE
 =0 && 
mm2
 % PGSIZE == 0);

1039 
	`as£π
(
mm1
 + 8096 <
mm2
);

1041 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 
mm1
) == 0);

1042 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 
mm1
+
PGSIZE
) == PGSIZE);

1043 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 
mm2
) == 0);

1044 
	`as£π
(
	`check_va2∑
(
kîn_pgdú
, 
mm2
+
PGSIZE
) == ~0);

1046 
	`as£π
(*
	`pgdú_wÆk
(
kîn_pgdú
, (*Ë
mm1
, 0Ë& (
PTE_W
|
PTE_PWT
|
PTE_PCD
));

1047 
	`as£π
(!(*
	`pgdú_wÆk
(
kîn_pgdú
, (*Ë
mm1
, 0Ë& 
PTE_U
));

1049 *
	`pgdú_wÆk
(
kîn_pgdú
, (*Ë
mm1
, 0) = 0;

1050 *
	`pgdú_wÆk
(
kîn_pgdú
, (*Ë
mm1
 + 
PGSIZE
, 0) = 0;

1051 *
	`pgdú_wÆk
(
kîn_pgdú
, (*Ë
mm2
, 0) = 0;

1053 
	`˝rötf
("check_page() succeeded!\n");

1054 
	}
}

1058 
	$check_∑ge_ö°ÆÀd_pgdú
()

1060 
PageInfo
 *
µ
, *
µ0
, *
µ1
, *
µ2
;

1061 
PageInfo
 *
Ê
;

1062 
±e_t
 *
±ï
, *
±ï1
;

1063 
uöçå_t
 
va
;

1064 
i
;

1067 
µ1
 = 
µ2
 = 0;

1068 
	`as£π
((
µ0
 = 
	`∑ge_Æloc
(0)));

1069 
	`as£π
((
µ1
 = 
	`∑ge_Æloc
(0)));

1070 
	`as£π
((
µ2
 = 
	`∑ge_Æloc
(0)));

1071 
	`∑ge_‰ì
(
µ0
);

1072 
	`mem£t
(
	`∑ge2kva
(
µ1
), 1, 
PGSIZE
);

1073 
	`mem£t
(
	`∑ge2kva
(
µ2
), 2, 
PGSIZE
);

1074 
	`∑ge_ö£π
(
kîn_pgdú
, 
µ1
, (*Ë
PGSIZE
, 
PTE_W
);

1075 
	`as£π
(
µ1
->
µ_ªf
 == 1);

1076 
	`as£π
(*(
uöt32_t
 *)
PGSIZE
 == 0x01010101U);

1077 
	`∑ge_ö£π
(
kîn_pgdú
, 
µ2
, (*Ë
PGSIZE
, 
PTE_W
);

1078 
	`as£π
(*(
uöt32_t
 *)
PGSIZE
 == 0x02020202U);

1079 
	`as£π
(
µ2
->
µ_ªf
 == 1);

1080 
	`as£π
(
µ1
->
µ_ªf
 == 0);

1081 *(
uöt32_t
 *)
PGSIZE
 = 0x03030303U;

1082 
	`as£π
(*(
uöt32_t
 *)
	`∑ge2kva
(
µ2
) == 0x03030303U);

1083 
	`∑ge_ªmove
(
kîn_pgdú
, (*Ë
PGSIZE
);

1084 
	`as£π
(
µ2
->
µ_ªf
 == 0);

1087 
	`as£π
(
	`PTE_ADDR
(
kîn_pgdú
[0]Ë=
	`∑ge2∑
(
µ0
));

1088 
kîn_pgdú
[0] = 0;

1089 
	`as£π
(
µ0
->
µ_ªf
 == 1);

1090 
µ0
->
µ_ªf
 = 0;

1093 
	`∑ge_‰ì
(
µ0
);

1095 
	`˝rötf
("check_page_installed_pgdir() succeeded!\n");

1096 
	}
}

	@kern/pmap.h

3 #i‚de‡
JOS_KERN_PMAP_H


4 
	#JOS_KERN_PMAP_H


	)

5 #i‚de‡
JOS_KERNEL


9 
	~<öc/memœyout.h
>

10 
	~<öc/as£π.h
>

11 
	gEnv
;

13 
boŸ°ackt›
[], 
boŸ°ack
[];

15 
PageInfo
 *
∑ges
;

16 
size_t
 
≈ages
;

18 
pde_t
 *
kîn_pgdú
;

26 
	#PADDR
(
kva
Ë
	`_∑ddr
(
__FILE__
, 
__LINE__
, kva)

	)

28 
ölöe
 
phyßddr_t


29 
	$_∑ddr
(c⁄° *
fûe
, 
löe
, *
kva
)

31 i‡((
uöt32_t
)
kva
 < 
KERNBASE
)

32 
	`_∑nic
(
fûe
, 
löe
, "PADDR cÆÀd wôh invÆid kv®%08lx", 
kva
);

33  (
phyßddr_t
)
kva
 - 
KERNBASE
;

34 
	}
}

38 
	#KADDR
(
∑
Ë
	`_kaddr
(
__FILE__
, 
__LINE__
,Öa)

	)

40 
ölöe
 *

41 
	$_kaddr
(c⁄° *
fûe
, 
löe
, 
phyßddr_t
 
∑
)

43 i‡(
	`PGNUM
(
∑
Ë>
≈ages
)

44 
	`_∑nic
(
fûe
, 
löe
, "KADDR cÆÀd wôh invÆidÖ®%08lx", 
∑
);

45  (*)(
∑
 + 
KERNBASE
);

46 
	}
}

51 
	mALLOC_ZERO
 = 1<<0,

54 
mem_öô
();

56 
∑ge_öô
();

57 
PageInfo
 *
∑ge_Æloc
(
Æloc_Êags
);

58 
∑ge_‰ì
(
PageInfo
 *
µ
);

59 
∑ge_ö£π
(
pde_t
 *
pgdú
, 
PageInfo
 *
µ
, *
va
, 
≥rm
);

60 
∑ge_ªmove
(
pde_t
 *
pgdú
, *
va
);

61 
PageInfo
 *
∑ge_lookup
(
pde_t
 *
pgdú
, *
va
, 
±e_t
 **
±e_°‹e
);

62 
∑ge_de¸ef
(
PageInfo
 *
µ
);

64 
éb_övÆid©e
(
pde_t
 *
pgdú
, *
va
);

66 * 
mmio_m≠_ªgi⁄
(
phyßddr_t
 
∑
, 
size_t
 
size
);

68 
u£r_mem_check
(
Env
 *
ív
, c⁄° *
va
, 
size_t
 
Àn
, 
≥rm
);

69 
u£r_mem_as£π
(
Env
 *
ív
, c⁄° *
va
, 
size_t
 
Àn
, 
≥rm
);

71 
ölöe
 
phyßddr_t


72 
	$∑ge2∑
(
PageInfo
 *
µ
)

74  (
µ
 - 
∑ges
Ë<< 
PGSHIFT
;

75 
	}
}

77 
ölöe
 
PageInfo
*

78 
	$∑2∑ge
(
phyßddr_t
 
∑
)

80 i‡(
	`PGNUM
(
∑
Ë>
≈ages
)

81 
	`∑nic
("pa2page called with invalidÖa");

82  &
∑ges
[
	`PGNUM
(
∑
)];

83 
	}
}

85 
ölöe
 *

86 
	$∑ge2kva
(
PageInfo
 *
µ
)

88  
	`KADDR
(
	`∑ge2∑
(
µ
));

89 
	}
}

91 
±e_t
 *
pgdú_wÆk
(
pde_t
 *
pgdú
, c⁄° *
va
, 
¸óã
);

	@kern/printf.c

4 
	~<öc/ty≥s.h
>

5 
	~<öc/°dio.h
>

6 
	~<öc/°d¨g.h
>

10 
	$putch
(
ch
, *
˙t
)

12 
	`˝utch¨
(
ch
);

13 *
˙t
++;

14 
	}
}

17 
	$v˝rötf
(c⁄° *
fmt
, 
va_li°
 
≠
)

19 
˙t
 = 0;

21 
	`v¥ötfmt
((*)
putch
, &
˙t
, 
fmt
, 
≠
);

22  
˙t
;

23 
	}
}

26 
	$˝rötf
(c⁄° *
fmt
, ...)

28 
va_li°
 
≠
;

29 
˙t
;

31 
	`va_°¨t
(
≠
, 
fmt
);

32 
˙t
 = 
	`v˝rötf
(
fmt
, 
≠
);

33 
	`va_íd
(
≠
);

35  
˙t
;

36 
	}
}

	@kern/sched.c

1 
	~<öc/as£π.h
>

2 
	~<öc/x86.h
>

3 
	~<kîn/•ölock.h
>

4 
	~<kîn/ív.h
>

5 
	~<kîn/pm≠.h
>

6 
	~<kîn/m⁄ô‹.h
>

8 
sched_hÆt
();

12 
	$sched_yõld
()

14 
Env
 *
idÀ
;

32 
i
;

34 i‡(
cuªnv
 =
NULL
)

35 
cuªnv
 = 
ívs
;

37 
i
 = 
cuªnv
 - 
ívs
 + 1; i < 
NENV
; i++)

38 i‡(
ívs
[
i
].
ív_°©us
 =
ENV_RUNNABLE
)

39 
	`ív_run
(&
ívs
[
i
]);

41 
i
 = 0; i <
cuªnv
 - 
ívs
; i++)

42 i‡(
ívs
[
i
].
ív_°©us
 =
ENV_RUNNABLE
)

43 
	`ív_run
(&
ívs
[
i
]);

44 i‡(
cuªnv
 !
NULL
)

45 
i
 = 0; i < 
NENV
; i++)

46 i‡(
ívs
[
i
].
ív_°©us
 =
ENV_RUNNING
 &&

47 
ívs
[
i
].
ív_˝unum
 =
	`˝unum
())

48 
	`ív_run
(&
ívs
[
i
]);

51 
	`sched_hÆt
();

52 
	}
}

58 
	$sched_hÆt
()

60 
i
;

64 
i
 = 0; i < 
NENV
; i++) {

65 i‡((
ívs
[
i
].
ív_°©us
 =
ENV_RUNNABLE
 ||

66 
ívs
[
i
].
ív_°©us
 =
ENV_RUNNING
))

69 i‡(
i
 =
NENV
) {

70 
	`˝rötf
("NoÑunnableÉnvironments inÅhe system!\n");

72 
	`m⁄ô‹
(
NULL
);

76 
cuªnv
 = 
NULL
;

77 
	`l¸3
(
	`PADDR
(
kîn_pgdú
));

82 
	`xchg
(&
this˝u
->
˝u_°©us
, 
CPU_HALTED
);

85 
	`u∆ock_kî√l
();

88 
asm
 volatile (

95 : : "a" (
this˝u
->
˝u_ts
.
ts_e•0
));

96 
	}
}

	@kern/sched.h

3 #i‚de‡
JOS_KERN_SCHED_H


4 
	#JOS_KERN_SCHED_H


	)

5 #i‚de‡
JOS_KERNEL


10 
	$sched_yõld
(Ë
	`__©åibuã__
((
n‹ëu∫
));

	@kern/spinlock.c

3 
	~<öc/ty≥s.h
>

4 
	~<öc/as£π.h
>

5 
	~<öc/x86.h
>

6 
	~<öc/memœyout.h
>

7 
	~<öc/°rög.h
>

8 
	~<kîn/˝u.h
>

9 
	~<kîn/•ölock.h
>

10 
	~<kîn/kdebug.h
>

13 
•ölock
 
	gkî√l_lock
 = {

14 #ifde‡
DEBUG_SPINLOCK


15 .
«me
 = "kernel_lock"

19 #ifde‡
DEBUG_SPINLOCK


22 
	$gë_ˇŒî_pcs
(
uöt32_t
 
pcs
[])

24 
uöt32_t
 *
ebp
;

25 
i
;

27 
ebp
 = (
uöt32_t
 *)
	`ªad_ebp
();

28 
i
 = 0; i < 10; i++){

29 i‡(
ebp
 =0 ||Éb∞< (
uöt32_t
 *)
ULIM
)

31 
pcs
[
i
] = 
ebp
[1];

32 
ebp
 = (
uöt32_t
 *)ebp[0];

34 ; 
i
 < 10; i++)

35 
pcs
[
i
] = 0;

36 
	}
}

40 
	$hﬁdög
(
•ölock
 *
lock
)

42  
lock
->
locked
 &&Üock->
˝u
 =
this˝u
;

43 
	}
}

47 
	$__•ö_öôlock
(
•ölock
 *
lk
, *
«me
)

49 
lk
->
locked
 = 0;

50 #ifde‡
DEBUG_SPINLOCK


51 
lk
->
«me
 =Çame;

52 
lk
->
˝u
 = 0;

54 
	}
}

61 
	$•ö_lock
(
•ölock
 *
lk
)

63 #ifde‡
DEBUG_SPINLOCK


64 i‡(
	`hﬁdög
(
lk
))

65 
	`∑nic
("CPU %d c™nŸácquúê%s:áÃódy hﬁdög", 
	`˝unum
(), 
lk
->
«me
);

71 
	`xchg
(&
lk
->
locked
, 1) != 0)

72 
asm
 volatile ("pause");

75 #ifde‡
DEBUG_SPINLOCK


76 
lk
->
˝u
 = 
this˝u
;

77 
	`gë_ˇŒî_pcs
(
lk
->
pcs
);

79 
	}
}

83 
	$•ö_u∆ock
(
•ölock
 *
lk
)

85 #ifde‡
DEBUG_SPINLOCK


86 i‡(!
	`hﬁdög
(
lk
)) {

87 
i
;

88 
uöt32_t
 
pcs
[10];

90 
	`memmove
(
pcs
, 
lk
->pcs, Öcs);

91 
	`˝rötf
("CPU %d cannotÑelease %s: held by CPU %d\nAcquiredát:",

92 
	`˝unum
(), 
lk
->
«me
,Ük->
˝u
->
˝u_id
);

93 
i
 = 0; i < 10 && 
pcs
[i]; i++) {

94 
Eùdebugöfo
 
öfo
;

95 i‡(
	`debugöfo_eù
(
pcs
[
i
], &
öfo
) >= 0)

96 
	`˝rötf
(" %08x %s:%d: %.*s+%x\n", 
pcs
[
i
],

97 
öfo
.
eù_fûe
, info.
eù_löe
,

98 
öfo
.
eù_‚_«mñí
, info.
eù_‚_«me
,

99 
pcs
[
i
] - 
öfo
.
eù_‚_addr
);

101 
	`˝rötf
(" %08x\n", 
pcs
[
i
]);

103 
	`∑nic
("spin_unlock");

106 
lk
->
pcs
[0] = 0;

107 
lk
->
˝u
 = 0;

119 
	`xchg
(&
lk
->
locked
, 0);

120 
	}
}

	@kern/spinlock.h

1 #i‚de‡
JOS_INC_SPINLOCK_H


2 
	#JOS_INC_SPINLOCK_H


	)

4 
	~<öc/ty≥s.h
>

7 
	#DEBUG_SPINLOCK


	)

10 
	s•ölock
 {

11 
	mlocked
;

13 #ifde‡
DEBUG_SPINLOCK


15 *
	m«me
;

16 
CpuInfo
 *
	m˝u
;

17 
uöçå_t
 
	mpcs
[10];

22 
__•ö_öôlock
(
•ölock
 *
lk
, *
«me
);

23 
•ö_lock
(
•ölock
 *
lk
);

24 
•ö_u∆ock
(
•ölock
 *
lk
);

26 
	#•ö_öôlock
(
lock
Ë
	`__•ö_öôlock
÷ock, #lock)

	)

28 
•ölock
 
kî√l_lock
;

30 
ölöe
 

31 
	$lock_kî√l
()

33 
	`•ö_lock
(&
kî√l_lock
);

34 
	}
}

36 
ölöe
 

37 
	$u∆ock_kî√l
()

39 
	`•ö_u∆ock
(&
kî√l_lock
);

45 
asm
 volatile("pause");

46 
	}
}

	@kern/syscall.c

3 
	~<öc/x86.h
>

4 
	~<öc/îr‹.h
>

5 
	~<öc/°rög.h
>

6 
	~<öc/as£π.h
>

8 
	~<kîn/ív.h
>

9 
	~<kîn/pm≠.h
>

10 
	~<kîn/å≠.h
>

11 
	~<kîn/sysˇŒ.h
>

12 
	~<kîn/c⁄sﬁe.h
>

13 
	~<kîn/sched.h
>

19 
	$sys_˝uts
(c⁄° *
s
, 
size_t
 
Àn
)

25 
	`u£r_mem_as£π
(
cuªnv
, (*)
s
, 
Àn
, 
PTE_U
);

28 
	`˝rötf
("%.*s", 
Àn
, 
s
);

29 
	}
}

34 
	$sys_cgëc
()

36  
	`c⁄s_gëc
();

37 
	}
}

40 
ívid_t


41 
	$sys_gëívid
()

43  
cuªnv
->
ív_id
;

44 
	}
}

52 
	$sys_ív_de°roy
(
ívid_t
 
ívid
)

54 
r
;

55 
Env
 *
e
;

57 i‡((
r
 = 
	`ívid2ív
(
ívid
, &
e
, 1)) < 0)

58  
r
;

59 i‡(
e
 =
cuªnv
)

60 
	`˝rötf
("[%08x]Éxôög gø˚fuŒy\n", 
cuªnv
->
ív_id
);

62 
	`˝rötf
("[%08x] de°royög %08x\n", 
cuªnv
->
ív_id
, 
e
->env_id);

63 
	`ív_de°roy
(
e
);

65 
	}
}

69 
	$sys_yõld
()

71 
	`sched_yõld
();

72 
	}
}

78 
ívid_t


79 
	$sys_exof‹k
()

88 
Env
 *
e
;

89 
ívid_t
 
id
;

91 
id
 = 
	`ív_Æloc
(&
e
, 
cuªnv
->
ív_id
);

92 if(
id
 < 0)

93  
id
;

94 
e
->
ív_°©us
 = 
ENV_NOT_RUNNABLE
;

95 
e
->
ív_tf
 = 
cuªnv
->env_tf;

96 
e
->
ív_tf
.
tf_ªgs
.
ªg_óx
 = 0;

98  
e
->
ív_id
;

101 
	}
}

111 
	$sys_ív_£t_°©us
(
ívid_t
 
ívid
, 
°©us
)

120 
Env
 *
e
;

121 
i
;

123 i‡(!((
°©us
 =
ENV_RUNNABLE
Ë|| (°©u†=
ENV_NOT_RUNNABLE
)))

124  -
E_INVAL
;

125 
i
 = 
	`ívid2ív
(
ívid
, &
e
, 1);

126 i‡(
i
 != 0)

127  
i
;

128 
e
->
ív_°©us
 = 
°©us
;

133 
	}
}

144 
	$sys_ív_£t_pgÁu…_upˇŒ
(
ívid_t
 
ívid
, *
func
)

147 
Env
 *
e
;

148 
r
;

150 
r
 = 
	`ívid2ív
(
ívid
, &
e
, 1);

151 if(
r
 < 0)

152  
r
;

154 
	`u£r_mem_as£π
(
e
, 
func
, 4, 0);

156 
e
->
ív_pgÁu…_upˇŒ
 = 
func
;

159 
	}
}

178 
	$sys_∑ge_Æloc
(
ívid_t
 
ívid
, *
va
, 
≥rm
)

188 
i
;

189 
Env
 *
e
;

190 
PageInfo
 *
p
;

192 
i
 = 
	`ívid2ív
(
ívid
, &
e
, 1);

193 i‡(
i
 != 0)

194  
i
;

195 i‡((
uöt32_t
)
va
 >
UTOP
 || (uöt32_t)v®% 
PGSIZE
)

196  -
E_INVAL
;

197 i‡((
≥rm
 & 
PTE_U
Ë=0 || (≥rm & 
PTE_P
) == 0)

198  -
E_INVAL
;

199 
p
 = 
	`∑ge_Æloc
(0);

200 i‡(
p
 =
NULL
)

201  -
E_NO_MEM
;

202 
i
 = 
	`∑ge_ö£π
(
e
->
ív_pgdú
, 
p
, 
va
, 
≥rm
);

203 i‡(
i
 == 0)

205 
p
->
µ_ªf
 = 0;

206 
	`∑ge_‰ì
(
p
);

207  
i
;

209 
	}
}

228 
	$sys_∑ge_m≠
(
ívid_t
 
§˚nvid
, *
§cva
,

229 
ívid_t
 
d°ívid
, *
d°va
, 
≥rm
)

239 
i
;

240 
Env
 *
e1
, *
e2
;

241 
PageInfo
 *
p
;

242 
±e_t
 *
±e
;

244 
i
 = 
	`ívid2ív
(
§˚nvid
, &
e1
, 1);

245 i‡(
i
 != 0)

246  
i
;

247 
i
 = 
	`ívid2ív
(
d°ívid
, &
e2
, 1);

248 i‡(
i
 != 0)

249  
i
;

250 i‡((
uöt32_t
)
§cva
 >
UTOP
 || (uöt32_t)§cv®% 
PGSIZE


251 || (
uöt32_t
)
d°va
 >
UTOP
 || (uöt32_t)d°v®% 
PGSIZE
)

252  -
E_INVAL
;

253 
p
 = 
	`∑ge_lookup
(
e1
->
ív_pgdú
, 
§cva
, &
±e
);

254 if(
p
 =
NULL
)

255  -
E_INVAL
;

256 i‡((
≥rm
 & 
PTE_U
Ë=0 || (≥rm & 
PTE_P
) == 0)

257  -
E_INVAL
;

258 i‡(!(*
±e
 & 
PTE_W
Ë&& (
≥rm
 & PTE_W))

259  -
E_INVAL
;

260 
i
 = 
	`∑ge_ö£π
(
e2
->
ív_pgdú
, 
p
, 
d°va
, 
≥rm
);

261 i‡(
i
 != 0)

262  
i
;

266 
	}
}

276 
	$sys_∑ge_unm≠
(
ívid_t
 
ívid
, *
va
)

281 
i
;

282 
Env
 *
e
;

284 
i
 = 
	`ívid2ív
(
ívid
, &
e
, 1);

285 i‡(
i
 != 0)

286  
i
;

287 i‡((
uöt32_t
)
va
 >
UTOP
 || (uöt32_t)v®% 
PGSIZE
)

288  -
E_INVAL
;

289 
	`∑ge_ªmove
(
e
->
ív_pgdú
, 
va
);

293 
	}
}

334 
	$sys_ùc_åy_£nd
(
ívid_t
 
ívid
, 
uöt32_t
 
vÆue
, *
§cva
, 
≥rm
)

337 
	`∑nic
("sys_ipc_try_sendÇot implemented");

338 
	}
}

352 
	$sys_ùc_ªcv
(*
d°va
)

355 
	`∑nic
("sys_ipc_recvÇot implemented");

357 
	}
}

360 
öt32_t


361 
	$sysˇŒ
(
uöt32_t
 
sysˇŒno
, uöt32_à
a1
, uöt32_à
a2
, uöt32_à
a3
, uöt32_à
a4
, uöt32_à
a5
)

366 
sysˇŒno
)

368 
SYS_˝uts
:

369 
	`sys_˝uts
((*)
a1
, (
size_t
)
a2
);

371 
SYS_cgëc
:

372  
	`sys_cgëc
();

373 
SYS_gëívid
:

374  
	`sys_gëívid
();

375 
SYS_ív_de°roy
:

376  
	`sys_ív_de°roy
((
ívid_t
)
a1
);

377 
SYS_∑ge_Æloc
:

378  
	`sys_∑ge_Æloc
(
a1
, (*)
a2
, ()
a3
);

379 
SYS_∑ge_m≠
:

380  
	`sys_∑ge_m≠
(
a1
, (*)
a2
, 
a3
, (*)
a4
, ()
a5
);

381 
SYS_∑ge_unm≠
:

382  
	`sys_∑ge_unm≠
(
a1
, (*)
a2
);

383 
SYS_exof‹k
:

384  
	`sys_exof‹k
();

385 
SYS_ív_£t_°©us
:

386  
	`sys_ív_£t_°©us
(
a1
, ()
a2
);

387 
SYS_ív_£t_pgÁu…_upˇŒ
:

388  
	`sys_ív_£t_pgÁu…_upˇŒ
(
a1
, (*)
a2
);

389 
SYS_yõld
:

390 
	`sys_yõld
();

393  -
E_INVAL
;

396 
	}
}

	@kern/syscall.h

1 #i‚de‡
JOS_KERN_SYSCALL_H


2 
	#JOS_KERN_SYSCALL_H


	)

3 #i‚de‡
JOS_KERNEL


7 
	~<öc/sysˇŒ.h
>

9 
öt32_t
 
sysˇŒ
(
uöt32_t
 
num
, uöt32_à
a1
, uöt32_à
a2
, uöt32_à
a3
, uöt32_à
a4
, uöt32_à
a5
);

	@kern/trap.c

1 
	~<öc/mmu.h
>

2 
	~<öc/x86.h
>

3 
	~<öc/as£π.h
>

5 
	~<kîn/pm≠.h
>

6 
	~<kîn/å≠.h
>

7 
	~<kîn/c⁄sﬁe.h
>

8 
	~<kîn/m⁄ô‹.h
>

9 
	~<kîn/ív.h
>

10 
	~<kîn/sysˇŒ.h
>

11 
	~<kîn/sched.h
>

12 
	~<kîn/k˛ock.h
>

13 
	~<kîn/picúq.h
>

14 
	~<kîn/˝u.h
>

15 
	~<kîn/•ölock.h
>

17 
Task°©e
 
	gts
;

23 
Tøp‰ame
 *
	gœ°_tf
;

28 
G©edesc
 
	gidt
[256] = { { 0 } };

29 
P£udodesc
 
	gidt_pd
 = {

30 (
idt
Ë- 1, (
uöt32_t
) idt

34 c⁄° *
	$å≠«me
(
å≠no
)

36 c⁄° * c⁄° 
ex˙ames
[] = {

59 i‡(
å≠no
 < (
ex˙ames
)/(excnames[0]))

60  
ex˙ames
[
å≠no
];

61 i‡(
å≠no
 =
T_SYSCALL
)

63 i‡(
å≠no
 >
IRQ_OFFSET
 &&Årapno < IRQ_OFFSET + 16)

66 
	}
}

70 
	$å≠_öô
()

72 
Segdesc
 
gdt
[];

75 
idivide
[], 
idebug
[], 
ömi
[], 
ibrk±
[], 
ioÊow
[], 
ibound
[], 
iûl›
[],

76 
idevi˚
[], 
idblÊt
[], 
ôss
[], 
i£g≈
[], 
i°ack
[], 
igpÊt
[], 
ùgÊt
[],

77 
iÂîr
[], 
ülög
[], 
imchk
[], 
isimdîr
[], 
isysˇŒ
[], 
ideÁu…
[];

79 
	`SETGATE
(
idt
[0], 0, 
GD_KT
, 
idivide
, 0);

80 
	`SETGATE
(
idt
[1], 0, 
GD_KT
, 
idebug
, 0);

81 
	`SETGATE
(
idt
[2], 0, 
GD_KT
, 
ömi
, 0);

82 
	`SETGATE
(
idt
[3], 0, 
GD_KT
, 
ibrk±
, 3);

83 
	`SETGATE
(
idt
[4], 0, 
GD_KT
, 
ioÊow
, 0);

84 
	`SETGATE
(
idt
[5], 0, 
GD_KT
, 
ibound
, 0);

85 
	`SETGATE
(
idt
[6], 0, 
GD_KT
, 
iûl›
, 0);

86 
	`SETGATE
(
idt
[7], 0, 
GD_KT
, 
idevi˚
, 0);

87 
	`SETGATE
(
idt
[8], 0, 
GD_KT
, 
idblÊt
, 0);

88 
	`SETGATE
(
idt
[10], 0, 
GD_KT
, 
ôss
, 0);

89 
	`SETGATE
(
idt
[11], 0, 
GD_KT
, 
i£g≈
, 0);

90 
	`SETGATE
(
idt
[12], 0, 
GD_KT
, 
i°ack
, 0);

91 
	`SETGATE
(
idt
[13], 0, 
GD_KT
, 
igpÊt
, 0);

92 
	`SETGATE
(
idt
[14], 0, 
GD_KT
, 
ùgÊt
, 0);

93 
	`SETGATE
(
idt
[16], 0, 
GD_KT
, 
iÂîr
, 0);

94 
	`SETGATE
(
idt
[17], 0, 
GD_KT
, 
ülög
, 0);

95 
	`SETGATE
(
idt
[18], 0, 
GD_KT
, 
imchk
, 0);

96 
	`SETGATE
(
idt
[19], 0, 
GD_KT
, 
isimdîr
, 0);

97 
	`SETGATE
(
idt
[48], 0, 
GD_KT
, 
isysˇŒ
, 3);

98 
	`SETGATE
(
idt
[500], 0, 
GD_KT
, 
ideÁu…
, 0);

101 
	`å≠_öô_≥r˝u
();

102 
	}
}

106 
	$å≠_öô_≥r˝u
()

133 
Task°©e
 *
±s
 = &
this˝u
->
˝u_ts
;

134 
uöt32_t
 
cid
 = 
	`˝unum
();

135 
±s
->
ts_e•0
 = 
KSTACKTOP
 - (
KSTKSIZE
 + 
KSTKGAP
Ë* 
cid
;

136 
±s
->
ts_ss0
 = 
GD_KD
;

139 
gdt
[(
GD_TSS0
 >> 3Ë+ 
cid
] = 
	`SEG16
(
STS_T32A
, (
uöt32_t
Ë(
±s
),

140 (
Task°©e
), 0);

141 
gdt
[(
GD_TSS0
 >> 3Ë+ 
cid
].
sd_s
 = 0;

145 
	`…r
(
GD_TSS0
 + 
cid
 * (
Segdesc
));

148 
	`lidt
(&
idt_pd
);

149 
	}
}

152 
	$¥öt_å≠‰ame
(
Tøp‰ame
 *
tf
)

154 
	`˝rötf
("TRAP fømê© %∞‰om CPU %d\n", 
tf
, 
	`˝unum
());

155 
	`¥öt_ªgs
(&
tf
->
tf_ªgs
);

156 
	`˝rötf
("É† 0x----%04x\n", 
tf
->
tf_es
);

157 
	`˝rötf
(" d† 0x----%04x\n", 
tf
->
tf_ds
);

158 
	`˝rötf
("Åø∞0x%08x %s\n", 
tf
->
tf_å≠no
, 
	`å≠«me
(tf->tf_trapno));

161 i‡(
tf
 =
œ°_tf
 &&Åf->
tf_å≠no
 =
T_PGFLT
)

162 
	`˝rötf
(" cr2 0x%08x\n", 
	`r¸2
());

163 
	`˝rötf
("Éº 0x%08x", 
tf
->
tf_îr
);

168 i‡(
tf
->
tf_å≠no
 =
T_PGFLT
)

169 
	`˝rötf
(" [%s, %s, %s]\n",

170 
tf
->
tf_îr
 & 4 ? "user" : "kernel",

171 
tf
->
tf_îr
 & 2 ? "write" : "read",

172 
tf
->
tf_îr
 & 1 ? "protection" : "not-present");

174 
	`˝rötf
("\n");

175 
	`˝rötf
("Éù 0x%08x\n", 
tf
->
tf_eù
);

176 
	`˝rötf
(" c† 0x----%04x\n", 
tf
->
tf_cs
);

177 
	`˝rötf
(" fœg 0x%08x\n", 
tf
->
tf_eÊags
);

178 i‡((
tf
->
tf_cs
 & 3) != 0) {

179 
	`˝rötf
("É• 0x%08x\n", 
tf
->
tf_e•
);

180 
	`˝rötf
(" s† 0x----%04x\n", 
tf
->
tf_ss
);

182 
	}
}

185 
	$¥öt_ªgs
(
PushRegs
 *
ªgs
)

187 
	`˝rötf
("Édò 0x%08x\n", 
ªgs
->
ªg_edi
);

188 
	`˝rötf
("Ésò 0x%08x\n", 
ªgs
->
ªg_esi
);

189 
	`˝rötf
("Éb∞ 0x%08x\n", 
ªgs
->
ªg_ebp
);

190 
	`˝rötf
(" oe• 0x%08x\n", 
ªgs
->
ªg_€•
);

191 
	`˝rötf
("Ébx 0x%08x\n", 
ªgs
->
ªg_ebx
);

192 
	`˝rötf
("Édx 0x%08x\n", 
ªgs
->
ªg_edx
);

193 
	`˝rötf
("Écx 0x%08x\n", 
ªgs
->
ªg_ecx
);

194 
	`˝rötf
("Éax 0x%08x\n", 
ªgs
->
ªg_óx
);

195 
	}
}

198 
	$å≠_di•©ch
(
Tøp‰ame
 *
tf
)

202 
tf
->
tf_å≠no
) {

203 
T_BRKPT
:

204 
	`m⁄ô‹
(
tf
);

206 
T_PGFLT
:

207 
	`∑ge_Áu…_h™dÀr
(
tf
);

209 
T_SYSCALL
:

210 
tf
->
tf_ªgs
.
ªg_óx
 = 
	`sysˇŒ
(tf->tf_regs.reg_eax,

211 
tf
->
tf_ªgs
.
ªg_edx
,

212 
tf
->
tf_ªgs
.
ªg_ecx
,

213 
tf
->
tf_ªgs
.
ªg_ebx
,

214 
tf
->
tf_ªgs
.
ªg_edi
,

215 
tf
->
tf_ªgs
.
ªg_esi
);

222 i‡(
tf
->
tf_å≠no
 =
IRQ_OFFSET
 + 
IRQ_SPURIOUS
) {

223 
	`˝rötf
("Spurious interrupt on irq 7\n");

224 
	`¥öt_å≠‰ame
(
tf
);

233 
	`¥öt_å≠‰ame
(
tf
);

234 i‡(
tf
->
tf_cs
 =
GD_KT
)

235 
	`∑nic
("unhandledÅrap in kernel");

237 
	`ív_de°roy
(
cuªnv
);

240 
	}
}

243 
	$å≠
(
Tøp‰ame
 *
tf
)

247 
asm
 volatile("cld" ::: "cc");

250 *
∑nic°r
;

251 i‡(
∑nic°r
)

252 
asm
 volatile("hlt");

256 i‡(
	`xchg
(&
this˝u
->
˝u_°©us
, 
CPU_STARTED
Ë=
CPU_HALTED
)

257 
	`lock_kî√l
();

261 
	`as£π
(!(
	`ªad_eÊags
(Ë& 
FL_IF
));

263 i‡((
tf
->
tf_cs
 & 3) == 3) {

268 
	`as£π
(
cuªnv
);

269 
	`lock_kî√l
();

272 i‡(
cuªnv
->
ív_°©us
 =
ENV_DYING
) {

273 
	`ív_‰ì
(
cuªnv
);

274 
cuªnv
 = 
NULL
;

275 
	`sched_yõld
();

281 
cuªnv
->
ív_tf
 = *
tf
;

283 
tf
 = &
cuªnv
->
ív_tf
;

288 
œ°_tf
 = 
tf
;

291 
	`å≠_di•©ch
(
tf
);

296 i‡(
cuªnv
 && cuªnv->
ív_°©us
 =
ENV_RUNNING
)

297 
	`ív_run
(
cuªnv
);

299 
	`sched_yõld
();

300 
	}
}

304 
	$∑ge_Áu…_h™dÀr
(
Tøp‰ame
 *
tf
)

306 
uöt32_t
 
Áu…_va
;

309 
Áu…_va
 = 
	`r¸2
();

314 i‡(
tf
->
tf_cs
 =
GD_KT
){

315 
	`¥öt_å≠‰ame
(
tf
);

316 
	`∑nic
("kî√»∑gêÁu… v®%08x\n", 
Áu…_va
);

351 
UTøp‰ame
 *
u‰ame
;

353 i‡(
cuªnv
->
ív_pgÁu…_upˇŒ
 !
NULL
){

354 i‡(
tf
->
tf_e•
 >
UXSTACKTOP
-
PGSIZE
 &&Åf->tf_esp <= UXSTACKTOP -1)

355 
u‰ame
 = (*)
tf
->
tf_e•
 - 4 - (
UTøp‰ame
);

357 
u‰ame
 = (*)
UXSTACKTOP
 - (
UTøp‰ame
);

359 
	`u£r_mem_as£π
(
cuªnv
,(*)(
UXSTACKTOP
 -4), 4, 0);

361 
u‰ame
->
utf_Áu…_va
 = 
Áu…_va
;

362 
u‰ame
->
utf_îr
 = 
tf
->
tf_îr
;

363 
u‰ame
->
utf_ªgs
 = 
tf
->
tf_ªgs
;

364 
u‰ame
->
utf_eù
 = 
tf
->
tf_eù
;

365 
u‰ame
->
utf_eÊags
 = 
tf
->
tf_eÊags
;

367 
u‰ame
->
utf_e•
 = 
tf
->
tf_e•
;

369 
tf
->
tf_e•
 = (
uöçå_t
)
u‰ame
;

370 
tf
->
tf_eù
 = (
uöçå_t
)
cuªnv
->
ív_pgÁu…_upˇŒ
;

372 
	`ív_run
(
cuªnv
);

376 
	`˝rötf
("[%08x] user fault va %08x ip %08x\n",

377 
cuªnv
->
ív_id
, 
Áu…_va
, 
tf
->
tf_eù
);

378 
	`¥öt_å≠‰ame
(
tf
);

379 
	`ív_de°roy
(
cuªnv
);

380 
	}
}

	@kern/trap.h

3 #i‚de‡
JOS_KERN_TRAP_H


4 
	#JOS_KERN_TRAP_H


	)

5 #i‚de‡
JOS_KERNEL


9 
	~<öc/å≠.h
>

10 
	~<öc/mmu.h
>

13 
G©edesc
 
idt
[];

14 
P£udodesc
 
idt_pd
;

16 
å≠_öô
();

17 
å≠_öô_≥r˝u
();

18 
¥öt_ªgs
(
PushRegs
 *
ªgs
);

19 
¥öt_å≠‰ame
(
Tøp‰ame
 *
tf
);

20 
∑ge_Áu…_h™dÀr
(
Tøp‰ame
 *);

21 
backåa˚
(
Tøp‰ame
 *);

	@lib/console.c

2 
	~<öc/°rög.h
>

3 
	~<öc/lib.h
>

6 
	$˝utch¨
(
ch
)

8 
c
 = 
ch
;

12 
	`sys_˝uts
(&
c
, 1);

13 
	}
}

16 
	$gëch¨
()

18 
r
;

20 (
r
 = 
	`sys_cgëc
()) == 0)

21 
	`sys_yõld
();

22  
r
;

23 
	}
}

	@lib/exit.c

2 
	~<öc/lib.h
>

5 
	$exô
()

7 
	`sys_ív_de°roy
(0);

8 
	}
}

	@lib/fork.c

3 
	~<öc/°rög.h
>

4 
	~<öc/lib.h
>

8 
	#PTE_COW
 0x800

	)

15 
	$pgÁu…
(
UTøp‰ame
 *
utf
)

17 *
addr
 = (*Ë
utf
->
utf_Áu…_va
;

18 
uöt32_t
 
îr
 = 
utf
->
utf_îr
;

19 
r
;

28 
±e_t
 
±e
;

29 
ívid_t
 
id
;

31 i‡((
îr
 & 
FEC_WR
) != FEC_WR)

32 
	`∑nic
("pgfautl:badÉrr!");

34 
±e
 = 
uv±
[
	`PGNUM
(
addr
)];

36 i‡((
±e
 & 
PTE_COW
) != PTE_COW)

37 
	`∑nic
("pgfault:badÖte!");

47 
r
 = 
	`sys_∑ge_Æloc
(0, 
PFTEMP
, 
PTE_P
|
PTE_W
|
PTE_U
);

48 i‡(
r
 != 0)

49 
	`∑nic
("pgÁu…:sys_∑ge_Ælo¯%e", 
r
);

53 
addr
 = (*)
	`ROUNDDOWN
◊ddr, 
PGSIZE
);

54 
	`memmove
(
PFTEMP
, 
addr
, 
PGSIZE
);

56 
r
 = 
	`sys_∑ge_m≠
(0, 
PFTEMP
, 0, 
addr
, 
PTE_P
|
PTE_W
|
PTE_U
);

57 i‡(
r
 != 0)

58 
	`∑nic
("pgÁu…:sys_∑ge_m≠ %e", 
r
);

61 
	}
}

75 
	$duµage
(
ívid_t
 
ívid
, 
≤
)

77 
r
;

80 * 
va
 = (*)(
≤
 * 
PGSIZE
);

81 
±e_t
 
±e
;

82 
±e
 = 
uv±
[
≤
];

84 i‡((
±e
 & 
PTE_W
Ë|| (±ê& 
PTE_COW
)){

85 
r
 = 
	`sys_∑ge_m≠
(0, 
va
, 
ívid
, va, 
PTE_P
 | 
PTE_U
 | 
PTE_COW
);

86 i‡(
r
 != 0)

87 
	`∑nic
("duµage:sys_∑ge_m≠ %e", 
r
);

88 
r
 = 
	`sys_∑ge_m≠
(0, 
va
, 0, va, 
PTE_P
 | 
PTE_U
 | 
PTE_COW
);

89 i‡(
r
 != 0)

90 
	`∑nic
("duµage:sys_∑ge_m≠ %e", 
r
);

92 
r
 = 
	`sys_∑ge_m≠
(0, 
va
, 
ívid
, va, 
PTE_P
 | 
PTE_U
);

93 i‡(
r
 != 0)

94 
	`∑nic
("duµage:sys_∑ge_m≠ %e", 
r
);

98 
	}
}

116 
ívid_t


117 
	$f‹k
()

120 
ívid_t
 
id
;

121 
r
, 
i
, 
j
, 
≤
;

124 
	`£t_pgÁu…_h™dÀr
(
pgÁu…
);

125 
id
 = 
	`sys_exof‹k
();

127 i‡(
id
 == 0){

128 
thi£nv
 = &
ívs
[
	`ENVX
(
	`sys_gëívid
())];

132 
i
 = 0; i < 
	`PDX
(
UTOP
); i++) {

133 i‡(
uvpd
[
i
] & 
PTE_P
) {

134 
j
 = 0; j < 
NPTENTRIES
; j++) {

135 
≤
 = 
i
* 
NPTENTRIES
 + 
j
;

136 i‡(
≤
 =
	`PGNUM
(
UXSTACKTOP
 - 
PGSIZE
))

138 i‡(
uv±
[
≤
] & 
PTE_P
)

139 
	`duµage
(
id
, 
≤
);

144 
r
 = 
	`sys_∑ge_Æloc
(
id
, (*)(
UXSTACKTOP
 - 
PGSIZE
), 
PTE_W
 | 
PTE_P
 | 
PTE_U
);

145 i‡(
r
 != 0)

146 
	`∑nic
("f‹k:Ælo¯Áûed %e",
r
);

147 
r
 = 
	`sys_ív_£t_pgÁu…_upˇŒ
(
id
, 
thi£nv
->
ív_pgÁu…_upˇŒ
);

148 i‡(
r
 != 0)

149 
	`∑nic
("f‹k:£àpgÁu… faûed %e", 
r
);

151 
r
 = 
	`sys_ív_£t_°©us
(
id
, 
ENV_RUNNABLE
);

152 i‡(
r
 != 0)

153 
	`∑nic
("f‹k:£à°©u†Áûed %e", 
r
);

155  
id
;

157 
	}
}

161 
	$sf‹k
()

163 
	`∑nic
("sforkÇot implemented");

164  -
E_INVAL
;

165 
	}
}

	@lib/ipc.c

3 
	~<öc/lib.h
>

22 
öt32_t


23 
	$ùc_ªcv
(
ívid_t
 *
‰om_ív_°‹e
, *
pg
, *
≥rm_°‹e
)

26 
	`∑nic
("ipc_recvÇot implemented");

28 
	}
}

39 
	$ùc_£nd
(
ívid_t
 
to_ív
, 
uöt32_t
 
vÆ
, *
pg
, 
≥rm
)

42 
	`∑nic
("ipc_sendÇot implemented");

43 
	}
}

48 
ívid_t


49 
	$ùc_föd_ív
(
EnvTy≥
 
ty≥
)

51 
i
;

52 
i
 = 0; i < 
NENV
; i++)

53 i‡(
ívs
[
i
].
ív_ty≥
 =
ty≥
)

54  
ívs
[
i
].
ív_id
;

56 
	}
}

	@lib/libmain.c

4 
	~<öc/lib.h
>

6 
umaö
(
¨gc
, **
¨gv
);

8 c⁄° vﬁ©ûê
Env
 *
	gthi£nv
;

9 c⁄° *
	gbö¨y«me
 = "<unknown>";

12 
	$libmaö
(
¨gc
, **
¨gv
)

16 
thi£nv
 = 0;

17 
ívid_t
 
id
;

18 
i
;

19 
id
 = 
	`sys_gëívid
();

20 
i
 = 0; i < 
NENV
; i++)

21 i‡(
id
 =
ívs
[
i
].
ív_id
)

22 
thi£nv
 = &
ívs
[
i
];

25 i‡(
¨gc
 > 0)

26 
bö¨y«me
 = 
¨gv
[0];

29 
	`umaö
(
¨gc
, 
¨gv
);

32 
	`exô
();

33 
	}
}

	@lib/panic.c

2 
	~<öc/lib.h
>

10 
	$_∑nic
(c⁄° *
fûe
, 
löe
, c⁄° *
fmt
, ...)

12 
va_li°
 
≠
;

14 
	`va_°¨t
(
≠
, 
fmt
);

17 
	`˝rötf
("[%08x] userÖanic in %sát %s:%d: ",

18 
	`sys_gëívid
(), 
bö¨y«me
, 
fûe
, 
löe
);

19 
	`v˝rötf
(
fmt
, 
≠
);

20 
	`˝rötf
("\n");

24 
asm
 volatile("int3");

25 
	}
}

	@lib/pgfault.c

7 
	~<öc/lib.h
>

11 
_pgÁu…_upˇŒ
();

14 (*
_pgÁu…_h™dÀr
)(
UTøp‰ame
 *
utf
);

25 
	`£t_pgÁu…_h™dÀr
((*
h™dÀr
)(
UTøp‰ame
 *
utf
))

27 
r
;

29 i‡(
_pgÁu…_h™dÀr
 == 0) {

32 
ívid_t
 
id
;

33 
id
 = 
	`sys_gëívid
();

35 
r
 = 
	`sys_∑ge_Æloc
(
id
, (*)(
UXSTACKTOP
 - 
PGSIZE
), 
PTE_W
 | 
PTE_P
 | 
PTE_U
);

36 i‡(
r
 != 0)

37 
	`∑nic
("set_pgfault_handler:alloc failed!");

38 
r
 = 
	`sys_ív_£t_pgÁu…_upˇŒ
(
id
, 
_pgÁu…_upˇŒ
);

39 i‡(
r
 != 0)

40 
	`∑nic
("set_pgfault_handler:setÖgfault failde!");

45 
_pgÁu…_h™dÀr
 = 
h™dÀr
;

46 
	}
}

	@lib/printf.c

8 
	~<öc/ty≥s.h
>

9 
	~<öc/°dio.h
>

10 
	~<öc/°d¨g.h
>

11 
	~<öc/lib.h
>

19 
	s¥ötbuf
 {

20 
	midx
;

21 
	m˙t
;

22 
	mbuf
[256];

27 
	$putch
(
ch
, 
¥ötbuf
 *
b
)

29 
b
->
buf
[b->
idx
++] = 
ch
;

30 i‡(
b
->
idx
 == 256-1) {

31 
	`sys_˝uts
(
b
->
buf
, b->
idx
);

32 
b
->
idx
 = 0;

34 
b
->
˙t
++;

35 
	}
}

38 
	$v˝rötf
(c⁄° *
fmt
, 
va_li°
 
≠
)

40 
¥ötbuf
 
b
;

42 
b
.
idx
 = 0;

43 
b
.
˙t
 = 0;

44 
	`v¥ötfmt
((*)
putch
, &
b
, 
fmt
, 
≠
);

45 
	`sys_˝uts
(
b
.
buf
, b.
idx
);

47  
b
.
˙t
;

48 
	}
}

51 
	$˝rötf
(c⁄° *
fmt
, ...)

53 
va_li°
 
≠
;

54 
˙t
;

56 
	`va_°¨t
(
≠
, 
fmt
);

57 
˙t
 = 
	`v˝rötf
(
fmt
, 
≠
);

58 
	`va_íd
(
≠
);

60  
˙t
;

61 
	}
}

	@lib/printfmt.c

5 
	~<öc/ty≥s.h
>

6 
	~<öc/°dio.h
>

7 
	~<öc/°rög.h
>

8 
	~<öc/°d¨g.h
>

9 
	~<öc/îr‹.h
>

21 c⁄° * c⁄° 
	gîr‹_°rög
[
MAXERROR
] =

23 [
E_UNSPECIFIED
] = "unspecifiedÉrror",

24 [
E_BAD_ENV
] = "badÉnvironment",

25 [
E_INVAL
] = "invalidÖarameter",

26 [
E_NO_MEM
] = "out of memory",

27 [
E_NO_FREE_ENV
] = "out ofÉnvironments",

28 [
E_FAULT
] = "segmentation fault",

29 [
E_IPC_NOT_RECV
]= "env isÇotÑecving",

30 [
E_EOF
] = "unexpectedÉnd of file",

38 
¥öäum
((*
putch
)(, *), *
putd©
,

39 
num
, 
ba£
, 
width
, 
∑dc
)

42 i‡(
num
 >
ba£
) {

43 
	`¥öäum
(
putch
, 
putd©
, 
num
 / 
ba£
, ba£, 
width
 - 1, 
∑dc
);

46 --
width
 > 0)

47 
	`putch
(
∑dc
, 
putd©
);

51 
	`putch
("0123456789abcdef"[
num
 % 
ba£
], 
putd©
);

52 
	}
}

57 
	$gëuöt
(
va_li°
 *
≠
, 
lÊag
)

59 i‡(
lÊag
 >= 2)

60  
	`va_¨g
(*
≠
, );

61 i‡(
lÊag
)

62  
	`va_¨g
(*
≠
, );

64  
	`va_¨g
(*
≠
, );

65 
	}
}

70 
	$gëöt
(
va_li°
 *
≠
, 
lÊag
)

72 i‡(
lÊag
 >= 2)

73  
	`va_¨g
(*
≠
, );

74 i‡(
lÊag
)

75  
	`va_¨g
(*
≠
, );

77  
	`va_¨g
(*
≠
, );

78 
	}
}

82 
¥ötfmt
((*
putch
)(, *), *
putd©
, c⁄° *
fmt
, ...);

85 
	`v¥ötfmt
((*
putch
)(, *), *
putd©
, c⁄° *
fmt
, 
va_li°
 
≠
)

87 c⁄° *
p
;

88 
ch
, 
îr
;

89 
num
;

90 
ba£
, 
lÊag
, 
width
, 
¥ecisi⁄
, 
ÆtÊag
;

91 
∑dc
;

94 (
ch
 = *(*Ë
fmt
++) != '%') {

95 i‡(
ch
 == '\0')

97 
	`putch
(
ch
, 
putd©
);

101 
∑dc
 = ' ';

102 
width
 = -1;

103 
¥ecisi⁄
 = -1;

104 
lÊag
 = 0;

105 
ÆtÊag
 = 0;

106 
ªswôch
:

107 
ch
 = *(*Ë
fmt
++) {

111 
∑dc
 = '-';

112 
ªswôch
;

116 
∑dc
 = '0';

117 
ªswôch
;

129 
¥ecisi⁄
 = 0; ; ++
fmt
) {

130 
¥ecisi⁄
 =Öªcisi⁄ * 10 + 
ch
 - '0';

131 
ch
 = *
fmt
;

132 i‡(
ch
 < '0' || ch > '9')

135 
¥o˚ss_¥ecisi⁄
;

138 
¥ecisi⁄
 = 
	`va_¨g
(
≠
, );

139 
¥o˚ss_¥ecisi⁄
;

142 i‡(
width
 < 0)

143 
width
 = 0;

144 
ªswôch
;

147 
ÆtÊag
 = 1;

148 
ªswôch
;

150 
¥o˚ss_¥ecisi⁄
:

151 i‡(
width
 < 0)

152 
width
 = 
¥ecisi⁄
,Örecision = -1;

153 
ªswôch
;

157 
lÊag
++;

158 
ªswôch
;

162 
	`putch
(
	`va_¨g
(
≠
, ), 
putd©
);

167 
îr
 = 
	`va_¨g
(
≠
, );

168 i‡(
îr
 < 0)

169 
îr
 = -err;

170 i‡(
îr
 >
MAXERROR
 || (
p
 = 
îr‹_°rög
[îr]Ë=
NULL
)

171 
	`¥ötfmt
(
putch
, 
putd©
, "îr‹ %d", 
îr
);

173 
	`¥ötfmt
(
putch
, 
putd©
, "%s", 
p
);

178 i‡((
p
 = 
	`va_¨g
(
≠
, *)Ë=
NULL
)

179 
p
 = "(null)";

180 i‡(
width
 > 0 && 
∑dc
 != '-')

181 
width
 -
	`°∫Àn
(
p
, 
¥ecisi⁄
); width > 0; width--)

182 
	`putch
(
∑dc
, 
putd©
);

183 ; (
ch
 = *
p
++Ë!'\0' && (
¥ecisi⁄
 < 0 || --¥ecisi⁄ >0); 
width
--)

184 i‡(
ÆtÊag
 && (
ch
 < ' ' || ch > '~'))

185 
	`putch
('?', 
putd©
);

187 
	`putch
(
ch
, 
putd©
);

188 ; 
width
 > 0; width--)

189 
	`putch
(' ', 
putd©
);

194 
num
 = 
	`gëöt
(&
≠
, 
lÊag
);

195 i‡((Ë
num
 < 0) {

196 
	`putch
('-', 
putd©
);

197 
num
 = -()Çum;

199 
ba£
 = 10;

200 
numbî
;

204 
num
 = 
	`gëuöt
(&
≠
, 
lÊag
);

205 
ba£
 = 10;

206 
numbî
;

210 
num
 = 
	`gëöt
(&
≠
, 
lÊag
);

211 
ba£
 = 8;

212 
numbî
;

218 
	`putch
('0', 
putd©
);

219 
	`putch
('x', 
putd©
);

220 
num
 = ()

221 (
uöçå_t
Ë
	`va_¨g
(
≠
, *);

222 
ba£
 = 16;

223 
numbî
;

227 
num
 = 
	`gëuöt
(&
≠
, 
lÊag
);

228 
ba£
 = 16;

229 
numbî
:

230 
	`¥öäum
(
putch
, 
putd©
, 
num
, 
ba£
, 
width
, 
∑dc
);

235 
	`putch
(
ch
, 
putd©
);

240 
	`putch
('%', 
putd©
);

241 
fmt
--; fmt[-1] != '%'; fmt--)

246 
	}
}

249 
¥ötfmt
((*
putch
)(, *), *
putd©
, c⁄° *
fmt
, ...)

251 
va_li°
 
≠
;

253 
	`va_°¨t
(
≠
, 
fmt
);

254 
	`v¥ötfmt
(
putch
, 
putd©
, 
fmt
, 
≠
);

255 
	`va_íd
(
≠
);

256 
	}
}

258 
	s•rötbuf
 {

259 *
	mbuf
;

260 *
	mebuf
;

261 
	m˙t
;

265 
	$•röçutch
(
ch
, 
•rötbuf
 *
b
)

267 
b
->
˙t
++;

268 i‡(
b
->
buf
 < b->
ebuf
)

269 *
b
->
buf
++ = 
ch
;

270 
	}
}

273 
	$v¢¥ötf
(*
buf
, 
n
, c⁄° *
fmt
, 
va_li°
 
≠
)

275 
•rötbuf
 
b
 = {
buf
, buf+
n
-1, 0};

277 i‡(
buf
 =
NULL
 || 
n
 < 1)

278  -
E_INVAL
;

281 
	`v¥ötfmt
((*)
•röçutch
, &
b
, 
fmt
, 
≠
);

284 *
b
.
buf
 = '\0';

286  
b
.
˙t
;

287 
	}
}

290 
	$¢¥ötf
(*
buf
, 
n
, c⁄° *
fmt
, ...)

292 
va_li°
 
≠
;

293 
rc
;

295 
	`va_°¨t
(
≠
, 
fmt
);

296 
rc
 = 
	`v¢¥ötf
(
buf
, 
n
, 
fmt
, 
≠
);

297 
	`va_íd
(
≠
);

299  
rc
;

300 
	}
}

	@lib/readline.c

1 
	~<öc/°dio.h
>

2 
	~<öc/îr‹.h
>

4 
	#BUFLEN
 1024

	)

5 
	gbuf
[
BUFLEN
];

8 
	$ªadlöe
(c⁄° *
¥om±
)

10 
i
, 
c
, 
echoög
;

12 i‡(
¥om±
 !
NULL
)

13 
	`˝rötf
("%s", 
¥om±
);

15 
i
 = 0;

16 
echoög
 = 
	`isc⁄s
(0);

18 
c
 = 
	`gëch¨
();

19 i‡(
c
 < 0) {

20 
	`˝rötf
("ªadÉº‹: %e\n", 
c
);

21  
NULL
;

22 } i‡((
c
 ='\b' || c ='\x7f'Ë&& 
i
 > 0) {

23 i‡(
echoög
)

24 
	`˝utch¨
('\b');

25 
i
--;

26 } i‡(
c
 >' ' && 
i
 < 
BUFLEN
-1) {

27 i‡(
echoög
)

28 
	`˝utch¨
(
c
);

29 
buf
[
i
++] = 
c
;

30 } i‡(
c
 == '\n' || c == '\r') {

31 i‡(
echoög
)

32 
	`˝utch¨
('\n');

33 
buf
[
i
] = 0;

34  
buf
;

37 
	}
}

	@lib/string.c

3 
	~<öc/°rög.h
>

9 
	#ASM
 1

	)

12 
	$°æí
(c⁄° *
s
)

14 
n
;

16 
n
 = 0; *
s
 != '\0'; s++)

17 
n
++;

18  
n
;

19 
	}
}

22 
	$°∫Àn
(c⁄° *
s
, 
size_t
 
size
)

24 
n
;

26 
n
 = 0; 
size
 > 0 && *
s
 != '\0'; s++, size--)

27 
n
++;

28  
n
;

29 
	}
}

32 
	$°r˝y
(*
d°
, c⁄° *
§c
)

34 *
ªt
;

36 
ªt
 = 
d°
;

37 (*
d°
++ = *
§c
++) != '\0')

39  
ªt
;

40 
	}
}

43 
	$°rˇt
(*
d°
, c⁄° *
§c
)

45 
Àn
 = 
	`°æí
(
d°
);

46 
	`°r˝y
(
d°
 + 
Àn
, 
§c
);

47  
d°
;

48 
	}
}

51 
	$°∫˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
size
) {

52 
size_t
 
i
;

53 *
ªt
;

55 
ªt
 = 
d°
;

56 
i
 = 0; i < 
size
; i++) {

57 *
d°
++ = *
§c
;

59 i‡(*
§c
 != '\0')

60 
§c
++;

62  
ªt
;

63 
	}
}

65 
size_t


66 
	$°æ˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
size
)

68 *
d°_ö
;

70 
d°_ö
 = 
d°
;

71 i‡(
size
 > 0) {

72 --
size
 > 0 && *
§c
 != '\0')

73 *
d°
++ = *
§c
++;

74 *
d°
 = '\0';

76  
d°
 - 
d°_ö
;

77 
	}
}

80 
	$°rcmp
(c⁄° *
p
, c⁄° *
q
)

82 *
p
 && *∞=*
q
)

83 
p
++, 
q
++;

84  (Ë((Ë*
p
 - (Ë*
q
);

85 
	}
}

88 
	$°∫cmp
(c⁄° *
p
, c⁄° *
q
, 
size_t
 
n
)

90 
n
 > 0 && *
p
 && *∞=*
q
)

91 
n
--, 
p
++, 
q
++;

92 i‡(
n
 == 0)

95  (Ë((Ë*
p
 - (Ë*
q
);

96 
	}
}

101 
	$°rchr
(c⁄° *
s
, 
c
)

103 ; *
s
; s++)

104 i‡(*
s
 =
c
)

105  (*Ë
s
;

107 
	}
}

112 
	$°rföd
(c⁄° *
s
, 
c
)

114 ; *
s
; s++)

115 i‡(*
s
 =
c
)

117  (*Ë
s
;

118 
	}
}

120 #i‡
ASM


122 
	$mem£t
(*
v
, 
c
, 
size_t
 
n
)

124 *
p
;

126 i‡(
n
 == 0)

127  
v
;

128 i‡(()
v
%4 =0 && 
n
%4 == 0) {

129 
c
 &= 0xFF;

130 
c
 = (c<<24)|(c<<16)|(c<<8)|c;

131 
asm
 volatile("cld;Ñep stosl\n"

132 :: "D" (
v
), "a" (
c
), "c" (
n
/4)

135 
asm
 volatile("cld;Ñep stosb\n"

136 :: "D" (
v
), "a" (
c
), "c" (
n
)

138  
v
;

139 
	}
}

142 
	$memmove
(*
d°
, c⁄° *
§c
, 
size_t
 
n
)

144 c⁄° *
s
;

145 *
d
;

147 
s
 = 
§c
;

148 
d
 = 
d°
;

149 i‡(
s
 < 
d
 && s + 
n
 > d) {

150 
s
 +
n
;

151 
d
 +
n
;

152 i‡(()
s
%4 =0 && ()
d
%4 =0 && 
n
%4 == 0)

153 
asm
 volatile("std;Ñep movsl\n"

154 :: "D" (
d
-4), "S" (
s
-4), "c" (
n
/4) : "cc", "memory");

156 
asm
 volatile("std;Ñep movsb\n"

157 :: "D" (
d
-1), "S" (
s
-1), "c" (
n
) : "cc", "memory");

159 
asm
 volatile("cld" ::: "cc");

161 i‡(()
s
%4 =0 && ()
d
%4 =0 && 
n
%4 == 0)

162 
asm
 volatile("cld;Ñep movsl\n"

163 :: "D" (
d
), "S" (
s
), "c" (
n
/4) : "cc", "memory");

165 
asm
 volatile("cld;Ñep movsb\n"

166 :: "D" (
d
), "S" (
s
), "c" (
n
) : "cc", "memory");

168  
d°
;

169 
	}
}

174 
	$mem£t
(*
v
, 
c
, 
size_t
 
n
)

176 *
p
;

177 
m
;

179 
p
 = 
v
;

180 
m
 = 
n
;

181 --
m
 >= 0)

182 *
p
++ = 
c
;

184  
v
;

185 
	}
}

188 
	$memmove
(*
d°
, c⁄° *
§c
, 
size_t
 
n
)

190 c⁄° *
s
;

191 *
d
;

193 
s
 = 
§c
;

194 
d
 = 
d°
;

195 i‡(
s
 < 
d
 && s + 
n
 > d) {

196 
s
 +
n
;

197 
d
 +
n
;

198 
n
-- > 0)

199 *--
d
 = *--
s
;

201 
n
-- > 0)

202 *
d
++ = *
s
++;

204  
d°
;

205 
	}
}

209 
	$mem˝y
(*
d°
, c⁄° *
§c
, 
size_t
 
n
)

211  
	`memmove
(
d°
, 
§c
, 
n
);

212 
	}
}

215 
	$memcmp
(c⁄° *
v1
, c⁄° *
v2
, 
size_t
 
n
)

217 c⁄° 
uöt8_t
 *
s1
 = (c⁄° uöt8_à*Ë
v1
;

218 c⁄° 
uöt8_t
 *
s2
 = (c⁄° uöt8_à*Ë
v2
;

220 
n
-- > 0) {

221 i‡(*
s1
 !*
s2
)

222  (Ë*
s1
 - (Ë*
s2
;

223 
s1
++, 
s2
++;

227 
	}
}

230 
	$memföd
(c⁄° *
s
, 
c
, 
size_t
 
n
)

232 c⁄° *
íds
 = (c⁄° *Ë
s
 + 
n
;

233 ; 
s
 < 
íds
; s++)

234 i‡(*(c⁄° *Ë
s
 =(Ë
c
)

236  (*Ë
s
;

237 
	}
}

240 
	$°πﬁ
(c⁄° *
s
, **
íd±r
, 
ba£
)

242 
√g
 = 0;

243 
vÆ
 = 0;

246 *
s
 == ' ' || *s == '\t')

247 
s
++;

250 i‡(*
s
 == '+')

251 
s
++;

252 i‡(*
s
 == '-')

253 
s
++, 
√g
 = 1;

256 i‡((
ba£
 =0 || ba£ =16Ë&& (
s
[0] == '0' && s[1] == 'x'))

257 
s
 +2, 
ba£
 = 16;

258 i‡(
ba£
 =0 && 
s
[0] == '0')

259 
s
++, 
ba£
 = 8;

260 i‡(
ba£
 == 0)

261 
ba£
 = 10;

265 
dig
;

267 i‡(*
s
 >= '0' && *s <= '9')

268 
dig
 = *
s
 - '0';

269 i‡(*
s
 >= 'a' && *s <= 'z')

270 
dig
 = *
s
 - 'a' + 10;

271 i‡(*
s
 >= 'A' && *s <= 'Z')

272 
dig
 = *
s
 - 'A' + 10;

275 i‡(
dig
 >
ba£
)

277 
s
++, 
vÆ
 = (vÆ * 
ba£
Ë+ 
dig
;

281 i‡(
íd±r
)

282 *
íd±r
 = (*Ë
s
;

283  (
√g
 ? -
vÆ
 : val);

284 
	}
}

	@lib/syscall.c

3 
	~<öc/sysˇŒ.h
>

4 
	~<öc/lib.h
>

6 
ölöe
 
öt32_t


7 
	$sysˇŒ
(
num
, 
check
, 
uöt32_t
 
a1
, uöt32_à
a2
, uöt32_à
a3
, uöt32_à
a4
, uöt32_à
a5
)

9 
öt32_t
 
ªt
;

23 
asm
 volatile("int %1\n"

24 : "˜" (
ªt
)

25 : "i" (
T_SYSCALL
),

26 "a" (
num
),

27 "d" (
a1
),

28 "c" (
a2
),

29 "b" (
a3
),

30 "D" (
a4
),

31 "S" (
a5
)

34 if(
check
 && 
ªt
 > 0)

35 
	`∑nic
("sysˇŒ %dÑëu∫ed %d (> 0)", 
num
, 
ªt
);

37  
ªt
;

38 
	}
}

41 
	$sys_˝uts
(c⁄° *
s
, 
size_t
 
Àn
)

43 
	`sysˇŒ
(
SYS_˝uts
, 0, (
uöt32_t
)
s
, 
Àn
, 0, 0, 0);

44 
	}
}

47 
	$sys_cgëc
()

49  
	`sysˇŒ
(
SYS_cgëc
, 0, 0, 0, 0, 0, 0);

50 
	}
}

53 
	$sys_ív_de°roy
(
ívid_t
 
ívid
)

55  
	`sysˇŒ
(
SYS_ív_de°roy
, 1, 
ívid
, 0, 0, 0, 0);

56 
	}
}

58 
ívid_t


59 
	$sys_gëívid
()

61  
	`sysˇŒ
(
SYS_gëívid
, 0, 0, 0, 0, 0, 0);

62 
	}
}

65 
	$sys_yõld
()

67 
	`sysˇŒ
(
SYS_yõld
, 0, 0, 0, 0, 0, 0);

68 
	}
}

71 
	$sys_∑ge_Æloc
(
ívid_t
 
ívid
, *
va
, 
≥rm
)

73  
	`sysˇŒ
(
SYS_∑ge_Æloc
, 1, 
ívid
, (
uöt32_t
Ë
va
, 
≥rm
, 0, 0);

74 
	}
}

77 
	$sys_∑ge_m≠
(
ívid_t
 
§˚nv
, *
§cva
,Énvid_à
d°ív
, *
d°va
, 
≥rm
)

79  
	`sysˇŒ
(
SYS_∑ge_m≠
, 1, 
§˚nv
, (
uöt32_t
Ë
§cva
, 
d°ív
, (uöt32_tË
d°va
, 
≥rm
);

80 
	}
}

83 
	$sys_∑ge_unm≠
(
ívid_t
 
ívid
, *
va
)

85  
	`sysˇŒ
(
SYS_∑ge_unm≠
, 1, 
ívid
, (
uöt32_t
Ë
va
, 0, 0, 0);

86 
	}
}

91 
	$sys_ív_£t_°©us
(
ívid_t
 
ívid
, 
°©us
)

93  
	`sysˇŒ
(
SYS_ív_£t_°©us
, 1, 
ívid
, 
°©us
, 0, 0, 0);

94 
	}
}

97 
	$sys_ív_£t_pgÁu…_upˇŒ
(
ívid_t
 
ívid
, *
upˇŒ
)

99  
	`sysˇŒ
(
SYS_ív_£t_pgÁu…_upˇŒ
, 1, 
ívid
, (
uöt32_t
Ë
upˇŒ
, 0, 0, 0);

100 
	}
}

103 
	$sys_ùc_åy_£nd
(
ívid_t
 
ívid
, 
uöt32_t
 
vÆue
, *
§cva
, 
≥rm
)

105  
	`sysˇŒ
(
SYS_ùc_åy_£nd
, 0, 
ívid
, 
vÆue
, (
uöt32_t
Ë
§cva
, 
≥rm
, 0);

106 
	}
}

109 
	$sys_ùc_ªcv
(*
d°va
)

111  
	`sysˇŒ
(
SYS_ùc_ªcv
, 1, (
uöt32_t
)
d°va
, 0, 0, 0, 0);

112 
	}
}

	@user/badsegment.c

3 
	~<öc/lib.h
>

6 
	$umaö
(
¨gc
, **
¨gv
)

9 
asm
 volatile("movw $0x28,%ax; movw %ax,%ds");

10 
	}
}

	@user/breakpoint.c

3 
	~<öc/lib.h
>

6 
	$umaö
(
¨gc
, **
¨gv
)

8 
asm
 volatile("int $3");

9 
	}
}

	@user/buggyhello.c

4 
	~<öc/lib.h
>

7 
	$umaö
(
¨gc
, **
¨gv
)

9 
	`sys_˝uts
((*)1, 1);

10 
	}
}

	@user/buggyhello2.c

4 
	~<öc/lib.h
>

6 c⁄° *
	ghñlo
 = "hello, world\n";

9 
	$umaö
(
¨gc
, **
¨gv
)

11 
	`sys_˝uts
(
hñlo
, 1024*1024);

12 
	}
}

	@user/divzero.c

3 
	~<öc/lib.h
>

5 
	gzîo
;

8 
	$umaö
(
¨gc
, **
¨gv
)

10 
zîo
 = 0;

11 
	`˝rötf
("1/0 i†%08x!\n", 1/
zîo
);

12 
	}
}

	@user/dumbfork.c

4 
	~<öc/°rög.h
>

5 
	~<öc/lib.h
>

7 
ívid_t
 
dumbf‹k
();

10 
	$umaö
(
¨gc
, **
¨gv
)

12 
ívid_t
 
who
;

13 
i
;

16 
who
 = 
	`dumbf‹k
();

19 
i
 = 0; i < (
who
 ? 10 : 20); i++) {

20 
	`˝rötf
("%d: IámÅhê%s!\n", 
i
, 
who
 ? "parent" : "child");

21 
	`sys_yõld
();

23 
	}
}

26 
	$duµage
(
ívid_t
 
d°ív
, *
addr
)

28 
r
;

30 i‡((
r
 = 
	`sys_∑ge_Æloc
(
d°ív
, 
addr
, 
PTE_P
|
PTE_U
|
PTE_W
)) < 0)

31 
	`∑nic
("sys_∑ge_Æloc: %e", 
r
);

32 i‡((
r
 = 
	`sys_∑ge_m≠
(
d°ív
, 
addr
, 0, 
UTEMP
, 
PTE_P
|
PTE_U
|
PTE_W
)) < 0)

33 
	`∑nic
("sys_∑ge_m≠: %e", 
r
);

34 
	`memmove
(
UTEMP
, 
addr
, 
PGSIZE
);

35 i‡((
r
 = 
	`sys_∑ge_unm≠
(0, 
UTEMP
)) < 0)

36 
	`∑nic
("sys_∑ge_unm≠: %e", 
r
);

39 
	}
}

41 
ívid_t


42 
	$dumbf‹k
()

44 
ívid_t
 
ívid
;

45 
uöt8_t
 *
addr
;

46 
r
;

47 
íd
[];

54 
ívid
 = 
	`sys_exof‹k
();

55 i‡(
ívid
 < 0)

56 
	`∑nic
("sys_exof‹k: %e", 
ívid
);

57 i‡(
ívid
 == 0) {

62 
thi£nv
 = &
ívs
[
	`ENVX
(
	`sys_gëívid
())];

65 
	`˝rötf
("ívid:%d\n", 
ívid
);

69 
addr
 = (
uöt8_t
*Ë
UTEXT
;ádd∏< 
íd
;ádd∏+
PGSIZE
)

70 
	`duµage
(
ívid
, 
addr
);

73 
	`duµage
(
ívid
, 
	`ROUNDDOWN
(&
addr
, 
PGSIZE
));

76 i‡((
r
 = 
	`sys_ív_£t_°©us
(
ívid
, 
ENV_RUNNABLE
)) < 0)

77 
	`∑nic
("sys_ív_£t_°©us: %e", 
r
);

79  
ívid
;

80 
	}
}

	@user/evilhello.c

4 
	~<öc/lib.h
>

7 
	$umaö
(
¨gc
, **
¨gv
)

10 
	`sys_˝uts
((*)0xf010000c, 100);

11 
	}
}

	@user/fairness.c

5 
	~<öc/lib.h
>

8 
	$umaö
(
¨gc
, **
¨gv
)

10 
ívid_t
 
who
, 
id
;

12 
id
 = 
	`sys_gëívid
();

14 i‡(
thi£nv
 =&
ívs
[1]) {

16 
	`ùc_ªcv
(&
who
, 0, 0);

17 
	`˝rötf
("%xÑecv from %x\n", 
id
, 
who
);

20 
	`˝rötf
("%xÜo› sídögÅÿ%x\n", 
id
, 
ívs
[1].
ív_id
);

22 
	`ùc_£nd
(
ívs
[1].
ív_id
, 0, 0, 0);

24 
	}
}

	@user/faultalloc.c

3 
	~<öc/lib.h
>

6 
	$h™dÀr
(
UTøp‰ame
 *
utf
)

8 
r
;

9 *
addr
 = (*)
utf
->
utf_Áu…_va
;

11 
	`˝rötf
("Áu… %x\n", 
addr
);

12 i‡((
r
 = 
	`sys_∑ge_Æloc
(0, 
	`ROUNDDOWN
(
addr
, 
PGSIZE
),

13 
PTE_P
|
PTE_U
|
PTE_W
)) < 0)

14 
	`∑nic
("Æloˇtögáà%x i¿∑gêÁu… h™dÀr: %e", 
addr
, 
r
);

15 
	`¢¥ötf
((*Ë
addr
, 100, "this string was faulted inát %x",áddr);

16 
	}
}

19 
	$umaö
(
¨gc
, **
¨gv
)

21 
	`£t_pgÁu…_h™dÀr
(
h™dÀr
);

22 
	`˝rötf
("%s\n", (*)0xDeadBeef);

23 
	`˝rötf
("%s\n", (*)0xCafeBffe);

24 
	}
}

	@user/faultallocbad.c

4 
	~<öc/lib.h
>

7 
	$h™dÀr
(
UTøp‰ame
 *
utf
)

9 
r
;

10 *
addr
 = (*)
utf
->
utf_Áu…_va
;

12 
	`˝rötf
("Áu… %x\n", 
addr
);

13 i‡((
r
 = 
	`sys_∑ge_Æloc
(0, 
	`ROUNDDOWN
(
addr
, 
PGSIZE
),

14 
PTE_P
|
PTE_U
|
PTE_W
)) < 0)

15 
	`∑nic
("Æloˇtögáà%x i¿∑gêÁu… h™dÀr: %e", 
addr
, 
r
);

16 
	`¢¥ötf
((*Ë
addr
, 100, "this string was faulted inát %x",áddr);

17 
	}
}

20 
	$umaö
(
¨gc
, **
¨gv
)

22 
	`£t_pgÁu…_h™dÀr
(
h™dÀr
);

23 
	`sys_˝uts
((*)0xDEADBEEF, 4);

24 
	}
}

	@user/faultbadhandler.c

6 
	~<öc/lib.h
>

9 
	$umaö
(
¨gc
, **
¨gv
)

11 
	`sys_∑ge_Æloc
(0, (*Ë(
UXSTACKTOP
 - 
PGSIZE
), 
PTE_P
|
PTE_U
|
PTE_W
);

12 
	`sys_ív_£t_pgÁu…_upˇŒ
(0, (*) 0xDeadBeef);

14 
	}
}

	@user/faultdie.c

3 
	~<öc/lib.h
>

6 
	$h™dÀr
(
UTøp‰ame
 *
utf
)

8 *
addr
 = (*)
utf
->
utf_Áu…_va
;

9 
uöt32_t
 
îr
 = 
utf
->
utf_îr
;

10 
	`˝rötf
("òÁu…edáàv®%x,Éº %x\n", 
addr
, 
îr
 & 7);

11 
	`sys_ív_de°roy
(
	`sys_gëívid
());

12 
	}
}

15 
	$umaö
(
¨gc
, **
¨gv
)

17 
	`£t_pgÁu…_h™dÀr
(
h™dÀr
);

19 
	}
}

	@user/faultevilhandler.c

3 
	~<öc/lib.h
>

6 
	$umaö
(
¨gc
, **
¨gv
)

8 
	`sys_∑ge_Æloc
(0, (*Ë(
UXSTACKTOP
 - 
PGSIZE
), 
PTE_P
|
PTE_U
|
PTE_W
);

9 
	`sys_ív_£t_pgÁu…_upˇŒ
(0, (*) 0xF0100020);

11 
	}
}

	@user/faultnostack.c

3 
	~<öc/lib.h
>

5 
_pgÁu…_upˇŒ
();

8 
	$umaö
(
¨gc
, **
¨gv
)

10 
	`sys_ív_£t_pgÁu…_upˇŒ
(0, (*Ë
_pgÁu…_upˇŒ
);

12 
	}
}

	@user/faultread.c

3 
	~<öc/lib.h
>

6 
	$umaö
(
¨gc
, **
¨gv
)

8 
	`˝rötf
("IÑead %08x fromÜocation 0!\n", *(*)0);

9 
	}
}

	@user/faultreadkernel.c

3 
	~<öc/lib.h
>

6 
	$umaö
(
¨gc
, **
¨gv
)

8 
	`˝rötf
("IÑead %08x fromÜocation 0xf0100000!\n", *(*)0xf0100000);

9 
	}
}

	@user/faultregs.c

3 
	~<öc/lib.h
>

5 
	sªgs


7 
PushRegs
 
	mªgs
;

8 
uöçå_t
 
	meù
;

9 
uöt32_t
 
	meÊags
;

10 
uöçå_t
 
	me•
;

13 
	#SAVE_REGS
(
ba£
) \

14 "\tmov»%%edi, "
ba£
"+0x00\n" \

15 "\tmov»%%esi, "
ba£
"+0x04\n" \

16 "\tmov»%%ebp, "
ba£
"+0x08\n" \

17 "\tmov»%%ebx, "
ba£
"+0x10\n" \

18 "\tmov»%%edx, "
ba£
"+0x14\n" \

19 "\tmov»%%ecx, "
ba£
"+0x18\n" \

20 "\tmov»%%óx, "
ba£
"+0x1c\n" \

21 "\tmov»%%e•, "
ba£
"+0x28\n"

	)

23 
	#LOAD_REGS
(
ba£
) \

24 "\tmov»"
ba£
"+0x00, %%edi\n" \

25 "\tmov»"
ba£
"+0x04, %%esi\n" \

26 "\tmov»"
ba£
"+0x08, %%ebp\n" \

27 "\tmov»"
ba£
"+0x10, %%ebx\n" \

28 "\tmov»"
ba£
"+0x14, %%edx\n" \

29 "\tmov»"
ba£
"+0x18, %%ecx\n" \

30 "\tmov»"
ba£
"+0x1c, %%eax\n" \

31 "\tmov»"
ba£
"+0x28, %%e•\n"

	)

33 
ªgs
 
	gbef‹e
, 
	gdurög
, 
	ga·î
;

36 
	$check_ªgs
(
ªgs
* 
a
, c⁄° *
™
, ªgs* 
b
, c⁄° *
bn
,

37 c⁄° *
ã°«me
)

39 
mism©ch
 = 0;

41 
	`˝rötf
("%-6†%-8†%-8s\n", "", 
™
, 
bn
);

43 
	#CHECK
(
«me
, 
fõld
) \

45 
	`˝rötf
("%-6†%08x %08x ", #«me, 
a
->
fõld
, 
b
->field); \

46 i‡(
a
->
fõld
 =
b
->field) \

47 
	`˝rötf
("OK\n"); \

49 
	`˝rötf
("MISMATCH\n"); \

50 
mism©ch
 = 1; \

52 } 0)

	)

54 
	`CHECK
(
edi
, 
ªgs
.
ªg_edi
);

55 
	`CHECK
(
esi
, 
ªgs
.
ªg_esi
);

56 
	`CHECK
(
ebp
, 
ªgs
.
ªg_ebp
);

57 
	`CHECK
(
ebx
, 
ªgs
.
ªg_ebx
);

58 
	`CHECK
(
edx
, 
ªgs
.
ªg_edx
);

59 
	`CHECK
(
ecx
, 
ªgs
.
ªg_ecx
);

60 
	`CHECK
(
óx
, 
ªgs
.
ªg_óx
);

61 
	`CHECK
(
eù
,Éip);

62 
	`CHECK
(
eÊags
,Éflags);

63 
	`CHECK
(
e•
,Ésp);

65 #unde‡
CHECK


67 
	`˝rötf
("Regi°î†%†", 
ã°«me
);

68 i‡(!
mism©ch
)

69 
	`˝rötf
("OK\n");

71 
	`˝rötf
("MISMATCH\n");

72 
	}
}

75 
	$pgÁu…
(
UTøp‰ame
 *
utf
)

77 
r
;

79 i‡(
utf
->
utf_Áu…_va
 !(
uöt32_t
)
UTEMP
)

80 
	`∑nic
("pgfaultÉxpectedát UTEMP, got 0x%08x (eip %08x)",

81 
utf
->
utf_Áu…_va
, utf->
utf_eù
);

84 
durög
.
ªgs
 = 
utf
->
utf_ªgs
;

85 
durög
.
eù
 = 
utf
->
utf_eù
;

86 
durög
.
eÊags
 = 
utf
->
utf_eÊags
;

87 
durög
.
e•
 = 
utf
->
utf_e•
;

88 
	`check_ªgs
(&
bef‹e
, "bef‹e", &
durög
, "during", "in UTrapframe");

91 i‡((
r
 = 
	`sys_∑ge_Æloc
(0, 
UTEMP
, 
PTE_U
|
PTE_P
|
PTE_W
)) < 0)

92 
	`∑nic
("sys_∑ge_Æloc: %e", 
r
);

93 
	}
}

96 
	$umaö
(
¨gc
, **
¨gv
)

98 
	`£t_pgÁu…_h™dÀr
(
pgÁu…
);

100 
__asm
 
	`__vﬁ©ûe
(

117 
	`SAVE_REGS
("%0")

123 
	`SAVE_REGS
("%1")

127 
	`LOAD_REGS
("%0")

136 : : "m" (
bef‹e
), "m" (
a·î
) : "memory", "cc");

141 i‡(*(*)
UTEMP
 != 42)

142 
	`˝rötf
("EIPáfterÖage-fault MISMATCH\n");

143 
a·î
.
eù
 = 
bef‹e
.eip;

145 
	`check_ªgs
(&
bef‹e
, "bef‹e", &
a·î
, "after", "afterÖage-fault");

146 
	}
}

	@user/faultwrite.c

3 
	~<öc/lib.h
>

6 
	$umaö
(
¨gc
, **
¨gv
)

9 
	}
}

	@user/faultwritekernel.c

3 
	~<öc/lib.h
>

6 
	$umaö
(
¨gc
, **
¨gv
)

9 
	}
}

	@user/forktree.c

3 
	~<öc/lib.h
>

5 
	#DEPTH
 3

	)

7 
f‹kåì
(c⁄° *
cur
);

10 
	$f‹kchûd
(c⁄° *
cur
, 
bønch
)

12 
nxt
[
DEPTH
+1];

14 i‡(
	`°æí
(
cur
Ë>
DEPTH
)

17 
	`¢¥ötf
(
nxt
, 
DEPTH
+1, "%s%c", 
cur
, 
bønch
);

18 i‡(
	`f‹k
() == 0) {

19 
	`f‹kåì
(
nxt
);

20 
	`exô
();

22 
	}
}

25 
	$f‹kåì
(c⁄° *
cur
)

27 
	`˝rötf
("%04x: Iám '%s'\n", 
	`sys_gëívid
(), 
cur
);

29 
	`f‹kchûd
(
cur
, '0');

30 
	`f‹kchûd
(
cur
, '1');

31 
	}
}

34 
	$umaö
(
¨gc
, **
¨gv
)

36 
	`f‹kåì
("");

37 
	}
}

	@user/hello.c

2 
	~<öc/lib.h
>

5 
	$umaö
(
¨gc
, **
¨gv
)

7 
	`˝rötf
("hello, world\n");

8 
	`˝rötf
("òamÉnvú⁄míà%08x\n", 
thi£nv
->
ív_id
);

9 
	}
}

	@user/idle.c

3 
	~<öc/x86.h
>

4 
	~<öc/lib.h
>

7 
	$umaö
(
¨gc
, **
¨gv
)

9 
bö¨y«me
 = "idle";

17 
	`sys_yõld
();

19 
	}
}

	@user/pingpong.c

4 
	~<öc/lib.h
>

7 
	$umaö
(
¨gc
, **
¨gv
)

9 
ívid_t
 
who
;

11 i‡((
who
 = 
	`f‹k
()) != 0) {

13 
	`˝rötf
("£nd 0 from %xÅÿ%x\n", 
	`sys_gëívid
(), 
who
);

14 
	`ùc_£nd
(
who
, 0, 0, 0);

18 
uöt32_t
 
i
 = 
	`ùc_ªcv
(&
who
, 0, 0);

19 
	`˝rötf
("%x gŸ %d from %x\n", 
	`sys_gëívid
(), 
i
, 
who
);

20 i‡(
i
 == 10)

22 
i
++;

23 
	`ùc_£nd
(
who
, 
i
, 0, 0);

24 i‡(
i
 == 10)

28 
	}
}

	@user/pingpongs.c

4 
	~<öc/lib.h
>

6 
uöt32_t
 
	gvÆ
;

9 
	$umaö
(
¨gc
, **
¨gv
)

11 
ívid_t
 
who
;

12 
uöt32_t
 
i
;

14 
i
 = 0;

15 i‡((
who
 = 
	`sf‹k
()) != 0) {

16 
	`˝rötf
("òam %08x;Åhi£nv i†%p\n", 
	`sys_gëívid
(), 
thi£nv
);

18 
	`˝rötf
("£nd 0 from %xÅÿ%x\n", 
	`sys_gëívid
(), 
who
);

19 
	`ùc_£nd
(
who
, 0, 0, 0);

23 
	`ùc_ªcv
(&
who
, 0, 0);

24 
	`˝rötf
("%x gŸ %d from %x (thi£nv i†%∞%x)\n", 
	`sys_gëívid
(), 
vÆ
, 
who
, 
thi£nv
,Åhi£nv->
ív_id
);

25 i‡(
vÆ
 == 10)

27 ++
vÆ
;

28 
	`ùc_£nd
(
who
, 0, 0, 0);

29 i‡(
vÆ
 == 10)

33 
	}
}

	@user/primes.c

11 
	~<öc/lib.h
>

14 
	$¥imïroc
()

16 
i
, 
id
, 
p
;

17 
ívid_t
 
ívid
;

20 
t›
:

21 
p
 = 
	`ùc_ªcv
(&
ívid
, 0, 0);

22 
	`˝rötf
("CPU %d: %d ", 
thi£nv
->
ív_˝unum
, 
p
);

25 i‡((
id
 = 
	`f‹k
()) < 0)

26 
	`∑nic
("f‹k: %e", 
id
);

27 i‡(
id
 == 0)

28 
t›
;

32 
i
 = 
	`ùc_ªcv
(&
ívid
, 0, 0);

33 i‡(
i
 % 
p
)

34 
	`ùc_£nd
(
id
, 
i
, 0, 0);

36 
	}
}

39 
	$umaö
(
¨gc
, **
¨gv
)

41 
i
, 
id
;

44 i‡((
id
 = 
	`f‹k
()) < 0)

45 
	`∑nic
("f‹k: %e", 
id
);

46 i‡(
id
 == 0)

47 
	`¥imïroc
();

50 
i
 = 2; ; i++)

51 
	`ùc_£nd
(
id
, 
i
, 0, 0);

52 
	}
}

	@user/softint.c

3 
	~<öc/lib.h
>

6 
	$umaö
(
¨gc
, **
¨gv
)

8 
asm
 volatile("int $14");

9 
	}
}

	@user/spin.c

4 
	~<öc/lib.h
>

7 
	$umaö
(
¨gc
, **
¨gv
)

9 
ívid_t
 
ív
;

11 
	`˝rötf
("IámÅheÖarent. ForkingÅhe child...\n");

12 i‡((
ív
 = 
	`f‹k
()) == 0) {

13 
	`˝rötf
("IámÅhe child. Spinning...\n");

18 
	`˝rötf
("IámÅheÖarent. RunningÅhe child...\n");

19 
	`sys_yõld
();

20 
	`sys_yõld
();

21 
	`sys_yõld
();

22 
	`sys_yõld
();

23 
	`sys_yõld
();

24 
	`sys_yõld
();

25 
	`sys_yõld
();

26 
	`sys_yõld
();

28 
	`˝rötf
("IámÅheÖarent. KillingÅhe child...\n");

29 
	`sys_ív_de°roy
(
ív
);

30 
	}
}

	@user/stresssched.c

1 
	~<öc/lib.h
>

3 vﬁ©ûê
	gcou¡î
;

6 
	$umaö
(
¨gc
, **
¨gv
)

8 
i
, 
j
;

9 
£í
;

10 
ívid_t
 
∑ª¡
 = 
	`sys_gëívid
();

13 
i
 = 0; i < 20; i++)

14 i‡(
	`f‹k
() == 0)

16 i‡(
i
 == 20) {

17 
	`sys_yõld
();

22 
ívs
[
	`ENVX
(
∑ª¡
)].
ív_°©us
 !
ENV_FREE
)

23 
asm
 volatile("pause");

26 
i
 = 0; i < 10; i++) {

27 
	`sys_yõld
();

28 
j
 = 0; j < 10000; j++)

29 
cou¡î
++;

32 i‡(
cou¡î
 != 10*10000)

33 
	`∑nic
("ø¿⁄ÅwÿCPU†© on˚ (cou¡î i†%d)", 
cou¡î
);

36 
	`˝rötf
("[%08x] såesssched o¿CPU %d\n", 
thi£nv
->
ív_id
,Åhi£nv->
ív_˝unum
);

38 
	}
}

	@user/testbss.c

3 
	~<öc/lib.h
>

5 
	#ARRAYSIZE
 (1024*1024)

	)

7 
uöt32_t
 
	gbig¨øy
[
ARRAYSIZE
];

10 
	$umaö
(
¨gc
, **
¨gv
)

12 
i
;

14 
	`˝rötf
("Making sure bss worksÑight...\n");

15 
i
 = 0; i < 
ARRAYSIZE
; i++)

16 i‡(
big¨øy
[
i
] != 0)

17 
	`∑nic
("big¨øy[%d] i¢'à˛óªd!\n", 
i
);

18 
i
 = 0; i < 
ARRAYSIZE
; i++)

19 
big¨øy
[
i
] = i;

20 
i
 = 0; i < 
ARRAYSIZE
; i++)

21 i‡(
big¨øy
[
i
] != i)

22 
	`∑nic
("big¨øy[%d] didn'àhﬁd it†vÆue!\n", 
i
);

24 
	`˝rötf
("Yes, good. Now doingá wild write offÅheÉnd...\n");

25 
big¨øy
[
ARRAYSIZE
+1024] = 0;

26 
	`∑nic
("SHOULD HAVE TRAPPED!!!");

27 
	}
}

	@user/yield.c

3 
	~<öc/lib.h
>

6 
	$umaö
(
¨gc
, **
¨gv
)

8 
i
;

10 
	`˝rötf
("Hñlo, IámÉnvú⁄míà%08x.\n", 
thi£nv
->
ív_id
);

11 
i
 = 0; i < 5; i++) {

12 
	`sys_yõld
();

13 
	`˝rötf
("Back inÉnvironment %08x, iteration %d.\n",

14 
thi£nv
->
ív_id
, 
i
);

16 
	`˝rötf
("AŒ d⁄êöÉnvú⁄míà%08x.\n", 
thi£nv
->
ív_id
);

17 
	}
}

	@
1
.
0
87
1264
boot/main.c
inc/assert.h
inc/elf.h
inc/env.h
inc/error.h
inc/kbdreg.h
inc/lib.h
inc/memlayout.h
inc/mmu.h
inc/stab.h
inc/stdarg.h
inc/stdio.h
inc/string.h
inc/syscall.h
inc/trap.h
inc/types.h
inc/x86.h
kern/console.c
kern/console.h
kern/cpu.h
kern/entrypgdir.c
kern/env.c
kern/env.h
kern/init.c
kern/kclock.c
kern/kclock.h
kern/kdebug.c
kern/kdebug.h
kern/lapic.c
kern/monitor.c
kern/monitor.h
kern/mpconfig.c
kern/picirq.c
kern/picirq.h
kern/pmap.c
kern/pmap.h
kern/printf.c
kern/sched.c
kern/sched.h
kern/spinlock.c
kern/spinlock.h
kern/syscall.c
kern/syscall.h
kern/trap.c
kern/trap.h
lib/console.c
lib/exit.c
lib/fork.c
lib/ipc.c
lib/libmain.c
lib/panic.c
lib/pgfault.c
lib/printf.c
lib/printfmt.c
lib/readline.c
lib/string.c
lib/syscall.c
user/badsegment.c
user/breakpoint.c
user/buggyhello.c
user/buggyhello2.c
user/divzero.c
user/dumbfork.c
user/evilhello.c
user/fairness.c
user/faultalloc.c
user/faultallocbad.c
user/faultbadhandler.c
user/faultdie.c
user/faultevilhandler.c
user/faultnostack.c
user/faultread.c
user/faultreadkernel.c
user/faultregs.c
user/faultwrite.c
user/faultwritekernel.c
user/forktree.c
user/hello.c
user/idle.c
user/pingpong.c
user/pingpongs.c
user/primes.c
user/softint.c
user/spin.c
user/stresssched.c
user/testbss.c
user/yield.c
